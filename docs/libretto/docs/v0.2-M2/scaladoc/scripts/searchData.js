pages = [{"l":"index.html","n":"libretto","t":"libretto","d":"","k":"static"},
{"l":"libretto.html","n":"libretto","t":"package libretto","d":"libretto","k":"package"},
{"l":"libretto.html","n":"∀","t":"type ∀[F[_]] = ForAll[F]","d":"libretto","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"AbstractStarterKit","t":"class AbstractStarterKit(val dsl: ScalaDSL, val runner0: (ScheduledExecutorService, Executor) => ScalaRunner[ScalaDSL, Future])","d":"libretto/AbstractStarterKit","k":"class"},
{"l":"libretto/AbstractStarterKit.html","n":"$","t":"type $ >: ($) <: ($)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"$Ops","t":"type $Ops >: $Ops <: $Ops","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"*","t":"def *[B](b: $[Val[B]]): $[Val[(A, B)]]","d":"libretto/AbstractStarterKit","k":"def"},
{"l":"libretto/AbstractStarterKit.html","n":"-","t":"type - >: (-) <: (-)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"-⚬","t":"type -⚬ >: (-⚬) <: (-⚬)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"/\\","t":"def /\\[C](g: A -⚬ C)(using x$3: Cosemigroup[A]): A -⚬ B |*| C","d":"libretto/AbstractStarterKit","k":"def"},
{"l":"libretto/AbstractStarterKit.html","n":"=⚬","t":"type =⚬ >: (=⚬) <: (=⚬)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"AcquiredLock","t":"type AcquiredLock >: AcquiredLock <: AcquiredLock","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Affine","t":"type Affine >: (Affine) <: (Affine)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"BiExternalizer","t":"type BiExternalizer >: ([F[_, _]] =>> BiExternalizer[F]) <: ([F[_, _]] =>> BiExternalizer[F])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Bifunctor","t":"type Bifunctor >: ([F[_, _]] =>> Bifunctor[F]) <: ([F[_, _]] =>> Bifunctor[F])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"BimapSyntax","t":"type BimapSyntax >: ([F[_, _], A, B] =>> BimapSyntax[F, A, B]) <: ([F[_, _], A, B] =>> BimapSyntax[F, A, B])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Bool","t":"type Bool >: Bool <: Bool","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"ClosedLinearFunctionOps","t":"type ClosedLinearFunctionOps >: (ClosedLinearFunctionOps) <: (ClosedLinearFunctionOps)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"ClosureOps","t":"type ClosureOps >: ClosureOps <: ClosureOps","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Comonad","t":"type Comonad >: ([F[_]] =>> Comonad[F]) <: ([F[_]] =>> Comonad[F])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Comonoid","t":"type Comonoid >: (Comonoid) <: (Comonoid)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Comparable","t":"type Comparable >: (Comparable) <: (Comparable)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Consumer","t":"type Consumer >: (Consumer) <: (Consumer)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"ConsumerF","t":"type ConsumerF >: (ConsumerF) <: (ConsumerF)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"ContraExternalizer","t":"type ContraExternalizer >: ([F[_]] =>> ContraExternalizer[F]) <: ([F[_]] =>> ContraExternalizer[F])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"ContraFunctor","t":"type ContraFunctor >: ([F[_]] =>> ContraFunctor[F]) <: ([F[_]] =>> ContraFunctor[F])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Cosemigroup","t":"type Cosemigroup >: (Cosemigroup) <: (Cosemigroup)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Deferred","t":"type Deferred >: (Deferred) <: (Deferred)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"DemandExprOps","t":"type DemandExprOps >: (DemandExprOps) <: (DemandExprOps)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Demanding","t":"type Demanding >: (Demanding) <: (Demanding)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Detained","t":"type Detained >: (Detained) <: (Detained)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Done","t":"type Done >: Done <: Done","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Dual","t":"type Dual >: (Dual) <: (Dual)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Dual1","t":"type Dual1 >: ([F[_], G[_]] =>> Dual1[F, G]) <: ([F[_], G[_]] =>> Dual1[F, G])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Endless","t":"type Endless >: (Endless) <: (Endless)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Externalizer","t":"type Externalizer >: ([F[_]] =>> Externalizer[F]) <: ([F[_]] =>> Externalizer[F])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"FocusedBi","t":"type FocusedBi >: ([F[_, _], B1, B2] =>> FocusedBi[F, B1, B2]) <: ([F[_, _], B1, B2] =>> FocusedBi[F, B1, B2])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"FocusedCo","t":"type FocusedCo >: ([F[_], B] =>> FocusedCo[F, B]) <: ([F[_], B] =>> FocusedCo[F, B])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"FocusedContra","t":"type FocusedContra >: ([F[_], B] =>> FocusedContra[F, B]) <: ([F[_], B] =>> FocusedContra[F, B])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"FocusedOnChoiceCo","t":"type FocusedOnChoiceCo >: ([F[_], B1, B2] =>> FocusedOnChoiceCo[F, B1, B2]) <: ([F[_], B1, B2] =>> FocusedOnChoiceCo[F, B1, B2])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"FocusedOnChoiceContra","t":"type FocusedOnChoiceContra >: ([A, F[_], B1, B2] =>> FocusedOnChoiceContra[A, F, B1, B2]) <: ([A, F[_], B1, B2] =>> FocusedOnChoiceContra[A, F, B1, B2])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"FocusedOnDoneTimesCo","t":"type FocusedOnDoneTimesCo >: ([F[_], B2] =>> FocusedOnDoneTimesCo[F, B2]) <: ([F[_], B2] =>> FocusedOnDoneTimesCo[F, B2])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"FocusedOnFunctionCo","t":"type FocusedOnFunctionCo >: ([F[_], A, B] =>> FocusedOnFunctionCo[F, A, B]) <: ([F[_], A, B] =>> FocusedOnFunctionCo[F, A, B])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"FocusedOnFunctionContra","t":"type FocusedOnFunctionContra >: ([F[_], A, B] =>> FocusedOnFunctionContra[F, A, B]) <: ([F[_], A, B] =>> FocusedOnFunctionContra[F, A, B])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"FocusedOnPairCo","t":"type FocusedOnPairCo >: ([F[_], B1, B2] =>> FocusedOnPairCo[F, B1, B2]) <: ([F[_], B1, B2] =>> FocusedOnPairCo[F, B1, B2])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"FocusedOnPairContra","t":"type FocusedOnPairContra >: ([A, F[_], B1, B2] =>> FocusedOnPairContra[A, F, B1, B2]) <: ([A, F[_], B1, B2] =>> FocusedOnPairContra[A, F, B1, B2])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"FocusedOnPlusCo","t":"type FocusedOnPlusCo >: ([F[_], B1, B2] =>> FocusedOnPlusCo[F, B1, B2]) <: ([F[_], B1, B2] =>> FocusedOnPlusCo[F, B1, B2])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"FocusedOnPlusContra","t":"type FocusedOnPlusContra >: ([A, F[_], B1, B2] =>> FocusedOnPlusContra[A, F, B1, B2]) <: ([A, F[_], B1, B2] =>> FocusedOnPlusContra[A, F, B1, B2])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"FocusedOnTimesDoneCo","t":"type FocusedOnTimesDoneCo >: ([F[_], B1] =>> FocusedOnTimesDoneCo[F, B1]) <: ([F[_], B1] =>> FocusedOnTimesDoneCo[F, B1])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Functor","t":"type Functor >: ([F[_]] =>> Functor[F]) <: ([F[_]] =>> Functor[F])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Getter","t":"type Getter >: (Getter) <: (Getter)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Id","t":"type Id >: (Id) <: (Id)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"LDemanding","t":"type LDemanding >: (LDemanding) <: (LDemanding)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"LList","t":"type LList >: (LList) <: (LList)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"LList1","t":"type LList1 >: (LList1) <: (LList1)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"LPollable","t":"type LPollable >: (LPollable) <: (LPollable)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"LPollableF","t":"type LPollableF >: (LPollableF) <: (LPollableF)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"LPolled","t":"type LPolled >: (LPolled) <: (LPolled)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"LSubscriber","t":"type LSubscriber >: (LSubscriber) <: (LSubscriber)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"LSubscriberF","t":"type LSubscriberF >: (LSubscriberF) <: (LSubscriberF)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"LTerminus","t":"type LTerminus >: LTerminus <: LTerminus","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Lens","t":"type Lens >: (Lens) <: (Lens)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"LinearFunctionOps","t":"type LinearFunctionOps >: (LinearFunctionOps) <: (LinearFunctionOps)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"LinearFunctionToPairOps","t":"type LinearFunctionToPairOps >: (LinearFunctionToPairOps) <: (LinearFunctionToPairOps)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"LinearFunctionToPlusOps","t":"type LinearFunctionToPlusOps >: (LinearFunctionToPlusOps) <: (LinearFunctionToPlusOps)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Lock","t":"type Lock >: Lock <: Lock","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Maybe","t":"type Maybe >: (Maybe) <: (Maybe)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Monad","t":"type Monad >: ([F[_]] =>> Monad[F]) <: ([F[_]] =>> Monad[F])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Monoid","t":"type Monoid >: (Monoid) <: (Monoid)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Multiple","t":"type Multiple >: (Multiple) <: (Multiple)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"NAffine","t":"type NAffine >: (NAffine) <: (NAffine)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"NComonoid","t":"type NComonoid >: (NComonoid) <: (NComonoid)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"NMonoid","t":"type NMonoid >: (NMonoid) <: (NMonoid)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Need","t":"type Need >: Need <: Need","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Neg","t":"type Neg >: (Neg) <: (Neg)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"NoCaptureException","t":"type NoCaptureException >: NoCaptureException <: NoCaptureException","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"NotLinearException","t":"type NotLinearException >: NotLinearException <: NotLinearException","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"One","t":"type One >: One <: One","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Optionally","t":"type Optionally >: (Optionally) <: (Optionally)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"PAffine","t":"type PAffine >: (PAffine) <: (PAffine)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"PComonoid","t":"type PComonoid >: (PComonoid) <: (PComonoid)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"PMaybe","t":"type PMaybe >: (PMaybe) <: (PMaybe)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"PMonoid","t":"type PMonoid >: (PMonoid) <: (PMonoid)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"PUnlimited","t":"type PUnlimited >: (PUnlimited) <: (PUnlimited)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Ping","t":"type Ping >: Ping <: Ping","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Pollable","t":"type Pollable >: (Pollable) <: (Pollable)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"PollableF","t":"type PollableF >: (PollableF) <: (PollableF)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Polled","t":"type Polled >: (Polled) <: (Polled)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Pong","t":"type Pong >: Pong <: Pong","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Producing","t":"type Producing >: (Producing) <: (Producing)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"ProducingF","t":"type ProducingF >: (ProducingF) <: (ProducingF)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"RTerminus","t":"type RTerminus >: RTerminus <: RTerminus","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Rec","t":"type Rec >: ([F[_]] =>> Rec[F]) <: ([F[_]] =>> Rec[F])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"RefCounted","t":"type RefCounted >: (RefCounted) <: (RefCounted)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Res","t":"type Res >: (Res) <: (Res)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Semigroup","t":"type Semigroup >: (Semigroup) <: (Semigroup)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Subscriber","t":"type Subscriber >: (Subscriber) <: (Subscriber)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"SubscriberF","t":"type SubscriberF >: (SubscriberF) <: (SubscriberF)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Transportive","t":"type Transportive >: ([F[_]] =>> Transportive[F]) <: ([F[_]] =>> Transportive[F])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"UnboundVariablesException","t":"type UnboundVariablesException >: UnboundVariablesException <: UnboundVariablesException","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Unlimited","t":"type Unlimited >: (Unlimited) <: (Unlimited)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Val","t":"type Val >: (Val) <: (Val)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"ValMatcher","t":"type ValMatcher >: ([U >: V, V, A, R] =>> ValMatcher[U, V, A, R]) <: ([U >: V, V, A, R] =>> ValMatcher[U, V, A, R])","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"Zero","t":"type Zero >: Zero <: Zero","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"\\/","t":"def \\/[B](g: B -⚬ C)(using x$3: Semigroup[C]): A |*| B -⚬ C","d":"libretto/AbstractStarterKit","k":"def"},
{"l":"libretto/AbstractStarterKit.html","n":"blockUntil","t":"def blockUntil(b: $[Ping]): $[A]","d":"libretto/AbstractStarterKit","k":"def"},
{"l":"libretto/AbstractStarterKit.html","n":"closedLib","t":"val closedLib: ClosedLib[ScalaDSL, CoreLib[ScalaDSL]]","d":"libretto/AbstractStarterKit","k":"val"},
{"l":"libretto/AbstractStarterKit.html","n":"coreLib","t":"val coreLib: CoreLib[ScalaDSL]","d":"libretto/AbstractStarterKit","k":"val"},
{"l":"libretto/AbstractStarterKit.html","n":"coreStreams","t":"val coreStreams: CoreStreams[ScalaDSL, CoreLib[ScalaDSL]]","d":"libretto/AbstractStarterKit","k":"val"},
{"l":"libretto/AbstractStarterKit.html","n":"deferReleaseUntil","t":"def deferReleaseUntil(ping: $[Ping]): $[AcquiredLock]","d":"libretto/AbstractStarterKit","k":"def"},
{"l":"libretto/AbstractStarterKit.html","n":"deferUntil","t":"def deferUntil(b: $[Ping])(implicit A: Positive[A]): $[A]","d":"libretto/AbstractStarterKit","k":"def"},
{"l":"libretto/AbstractStarterKit.html","n":"detainReleaseUntil","t":"def detainReleaseUntil(done: $[Done]): $[AcquiredLock]","d":"libretto/AbstractStarterKit","k":"def"},
{"l":"libretto/AbstractStarterKit.html","n":"dsl","t":"val dsl: ScalaDSL","d":"libretto/AbstractStarterKit","k":"val"},
{"l":"libretto/AbstractStarterKit.html","n":"invertLib","t":"val invertLib: InvertLib[CoreLib[ScalaDSL]]","d":"libretto/AbstractStarterKit","k":"val"},
{"l":"libretto/AbstractStarterKit.html","n":"releaseWhen","t":"def releaseWhen(trigger: $[Done]): $[A]","d":"libretto/AbstractStarterKit","k":"def"},
{"l":"libretto/AbstractStarterKit.html","n":"resumeWhen","t":"def resumeWhen(trigger: $[Ping]): $[A]","d":"libretto/AbstractStarterKit","k":"def"},
{"l":"libretto/AbstractStarterKit.html","n":"runAsync","t":"def runAsync(blueprint: Done -⚬ Done): Future[Unit]","d":"libretto/AbstractStarterKit","k":"def"},
{"l":"libretto/AbstractStarterKit.html","n":"runScalaAsync","t":"def runScalaAsync[A](blueprint: Done -⚬ Val[A]): Future[A]","d":"libretto/AbstractStarterKit","k":"def"},
{"l":"libretto/AbstractStarterKit.html","n":"runner","t":"def runner(blockingExecutor: Executor)(implicit scheduler: ScheduledExecutorService): ScalaRunner[ScalaDSL, Future]","d":"libretto/AbstractStarterKit","k":"def"},
{"l":"libretto/AbstractStarterKit.html","n":"runner0","t":"val runner0: (ScheduledExecutorService, Executor) => ScalaRunner[ScalaDSL, Future]","d":"libretto/AbstractStarterKit","k":"val"},
{"l":"libretto/AbstractStarterKit.html","n":"scalaLib","t":"val scalaLib: ScalaLib[ScalaDSL, CoreLib[ScalaDSL]]","d":"libretto/AbstractStarterKit","k":"val"},
{"l":"libretto/AbstractStarterKit.html","n":"scalaStreams","t":"val scalaStreams: ScalaStreams[ScalaDSL, CoreLib[ScalaDSL], ScalaLib[ScalaDSL, CoreLib[ScalaDSL]], CoreStreams[ScalaDSL, CoreLib[ScalaDSL]]]","d":"libretto/AbstractStarterKit","k":"val"},
{"l":"libretto/AbstractStarterKit.html","n":"sequence","t":"def sequence(f: Done -⚬ B)(implicit A: Positive[A]): $[A |*| B]","d":"libretto/AbstractStarterKit","k":"def"},
{"l":"libretto/AbstractStarterKit.html","n":"sequence","t":"def sequence(b: $[B])(implicit A: Positive[A], B: Positive[B]): $[A |*| B]","d":"libretto/AbstractStarterKit","k":"def"},
{"l":"libretto/AbstractStarterKit.html","n":"sequenceAfter","t":"def sequenceAfter(b: $[B])(implicit A: Positive[A], B: Positive[B]): $[A |*| B]","d":"libretto/AbstractStarterKit","k":"def"},
{"l":"libretto/AbstractStarterKit.html","n":"waitFor","t":"def waitFor(b: $[Done])(implicit A: Positive[A]): $[A]","d":"libretto/AbstractStarterKit","k":"def"},
{"l":"libretto/AbstractStarterKit.html","n":"|&|","t":"type |&| >: (|&|) <: (|&|)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"|*|","t":"type |*| >: (|*|) <: (|*|)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"|+|","t":"type |+| >: (|+|) <: (|+|)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"⊕","t":"type ⊕ >: (|+|) <: (|+|)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/AbstractStarterKit.html","n":"⊗","t":"type ⊗ >: (|*|) <: (|*|)","d":"libretto/AbstractStarterKit","k":"type"},
{"l":"libretto/Async.html","n":"Async","t":"trait Async[A]","d":"libretto/Async","k":"trait"},
{"l":"libretto/Async.html","n":"map","t":"def map[B](f: A => B): Async[B]","d":"libretto/Async","k":"def"},
{"l":"libretto/Async$.html","n":"Async","t":"object Async","d":"libretto/Async$","k":"object"},
{"l":"libretto/Async$.html","n":"defer","t":"def defer[A](a: => A): Async[A]","d":"libretto/Async$","k":"def"},
{"l":"libretto/Async$.html","n":"fromFuture","t":"def fromFuture[A](fa: Future[A]): Async[Try[A]]","d":"libretto/Async$","k":"def"},
{"l":"libretto/Async$.html","n":"later","t":"def later[A](onComplete: A => Unit => Unit): Async[A]","d":"libretto/Async$","k":"def"},
{"l":"libretto/Async$.html","n":"now","t":"def now[A](value: A): Async[A]","d":"libretto/Async$","k":"def"},
{"l":"libretto/Async$.html","n":"toFuture","t":"def toFuture[A](async: Async[A]): Future[A]","d":"libretto/Async$","k":"def"},
{"l":"libretto/Async$$Later.html","n":"Later","t":"class Later[A](onComplete: A => Unit => Unit) extends Async[A]","d":"libretto/Async$$Later","k":"class"},
{"l":"libretto/Async$$Now.html","n":"Now","t":"class Now[A](value: A) extends Async[A]","d":"libretto/Async$$Now","k":"class"},
{"l":"libretto/BiInjective.html","n":"BiInjective","t":"trait BiInjective[F[_, _]]","d":"libretto/BiInjective","k":"trait"},
{"l":"libretto/BiInjective.html","n":"unapply","t":"def unapply[A, B, X, Y](ev: F[A, B] =:= F[X, Y]): (A =:= X, B =:= Y)","d":"libretto/BiInjective","k":"def"},
{"l":"libretto/BiInjective$.html","n":"BiInjective","t":"object BiInjective","d":"libretto/BiInjective$","k":"object"},
{"l":"libretto/BiInjective$.html","n":"biSubst","t":"def biSubst[G[_, _]](g: G[A, B])(implicit inj: BiInjective[F]): G[X, Y]","d":"libretto/BiInjective$","k":"def"},
{"l":"libretto/BinarySearchTree$.html","n":"BinarySearchTree","t":"object BinarySearchTree","d":"libretto/BinarySearchTree$","k":"object"},
{"l":"libretto/BinarySearchTree$.html","n":"apply","t":"def apply(dsl: ScalaDSL, coreLib: CoreLib[dsl], scalaLib: ScalaLib[dsl, coreLib]): BinarySearchTree[dsl, coreLib, scalaLib]","d":"libretto/BinarySearchTree$","k":"def"},
{"l":"libretto/BinarySearchTree.html","n":"BinarySearchTree","t":"class BinarySearchTree[DSL <: ScalaDSL, CLib <: CoreLib[DSL], SLib <: ScalaLib[DSL, CLib]](val dsl: DSL, val coreLib: CLib & CoreLib[DSL], val scalaLib: SLib & ScalaLib[DSL, CLib & CoreLib[DSL]])","d":"libretto/BinarySearchTree","k":"class"},
{"l":"libretto/BinarySearchTree.html","n":"Branch","t":"type Branch[K, V] = BranchF[K, NonEmptyTree[K, V]]","d":"libretto/BinarySearchTree","k":"type"},
{"l":"libretto/BinarySearchTree.html","n":"NonEmptyTree","t":"type NonEmptyTree[K, V] = Rec[[_] =>> NonEmptyTreeF[K, V, _$3]]","d":"libretto/BinarySearchTree","k":"type"},
{"l":"libretto/BinarySearchTree.html","n":"NonEmptyTreeF","t":"type NonEmptyTreeF[K, V, X] = Singleton[K, V] |+| BranchF[K, X]","d":"libretto/BinarySearchTree","k":"type"},
{"l":"libretto/BinarySearchTree.html","n":"Tree","t":"type Tree[K, V] = Done |+| NonEmptyTree[K, V]","d":"libretto/BinarySearchTree","k":"type"},
{"l":"libretto/BinarySearchTree.html","n":"clear","t":"def clear[K, V](f: V -⚬ Done): Tree[K, V] -⚬ Done","d":"libretto/BinarySearchTree","k":"def"},
{"l":"libretto/BinarySearchTree.html","n":"coreLib","t":"val coreLib: CLib & CoreLib[DSL]","d":"libretto/BinarySearchTree","k":"val"},
{"l":"libretto/BinarySearchTree.html","n":"delete","t":"def delete[K : Ordering, V]: Val[K] |*| Tree[K, V] -⚬ Maybe[V] |*| Tree[K, V]","d":"libretto/BinarySearchTree","k":"def"},
{"l":"libretto/BinarySearchTree.html","n":"dsl","t":"val dsl: DSL","d":"libretto/BinarySearchTree","k":"val"},
{"l":"libretto/BinarySearchTree.html","n":"empty","t":"def empty[K, V]: Done -⚬ Tree[K, V]","d":"libretto/BinarySearchTree","k":"def"},
{"l":"libretto/BinarySearchTree.html","n":"insert","t":"def insert[K : Ordering, V]: Val[K] |*| V |*| Tree[K, V] -⚬ Maybe[V] |*| Tree[K, V]","d":"libretto/BinarySearchTree","k":"def"},
{"l":"libretto/BinarySearchTree.html","n":"insertOrUpdate","t":"def insertOrUpdate[K : Ordering, V](update: V |*| V -⚬ V): Val[K] |*| V |*| Tree[K, V] -⚬ Tree[K, V]","d":"libretto/BinarySearchTree","k":"def"},
{"l":"libretto/BinarySearchTree.html","n":"scalaLib","t":"val scalaLib: SLib & ScalaLib[DSL, CLib & CoreLib[DSL]]","d":"libretto/BinarySearchTree","k":"val"},
{"l":"libretto/BinarySearchTree.html","n":"singleton","t":"def singleton[K, V]: Val[K] |*| V -⚬ Tree[K, V]","d":"libretto/BinarySearchTree","k":"def"},
{"l":"libretto/BinarySearchTree.html","n":"update","t":"def update[K : Ordering, V, A](f: A |*| V -⚬ PMaybe[V]): Val[K] |*| A |*| Tree[K, V] -⚬ PMaybe[A] |*| Tree[K, V]","d":"libretto/BinarySearchTree","k":"def"},
{"l":"libretto/BinarySearchTree.html","n":"update","t":"def update[K : Ordering, V, A](f: A |*| V -⚬ PMaybe[V], ifAbsent: A -⚬ Done): Val[K] |*| A |*| Tree[K, V] -⚬ Tree[K, V]","d":"libretto/BinarySearchTree","k":"def"},
{"l":"libretto/BinarySearchTree$Branch$.html","n":"Branch","t":"object Branch","d":"libretto/BinarySearchTree$Branch$","k":"object"},
{"l":"libretto/BinarySearchTree$Branch$.html","n":"apply","t":"def apply[K, V]: NonEmptyTree[K, V] |*| NonEmptyTree[K, V] -⚬ Branch[K, V]","d":"libretto/BinarySearchTree$Branch$","k":"def"},
{"l":"libretto/BinarySearchTree$Branch$.html","n":"clear","t":"def clear[K, V](subClear: NonEmptyTree[K, V] -⚬ Done): Branch[K, V] -⚬ Done","d":"libretto/BinarySearchTree$Branch$","k":"def"},
{"l":"libretto/BinarySearchTree$Branch$.html","n":"deconstruct","t":"def deconstruct[K, V]: Branch[K, V] -⚬ NonEmptyTree[K, V] |*| NonEmptyTree[K, V]","d":"libretto/BinarySearchTree$Branch$","k":"def"},
{"l":"libretto/BinarySearchTree$Branch$.html","n":"maxKey","t":"def maxKey[K, V]: Getter[Branch[K, V], Val[K]]","d":"libretto/BinarySearchTree$Branch$","k":"def"},
{"l":"libretto/BinarySearchTree$Branch$.html","n":"minKey","t":"def minKey[K, V]: Getter[Branch[K, V], Val[K]]","d":"libretto/BinarySearchTree$Branch$","k":"def"},
{"l":"libretto/BinarySearchTree$Branch$.html","n":"summary","t":"def summary[K, V]: Getter[Branch[K, V], Summary[K]]","d":"libretto/BinarySearchTree$Branch$","k":"def"},
{"l":"libretto/BinarySearchTree$BranchF$.html","n":"BranchF","t":"object BranchF","d":"libretto/BinarySearchTree$BranchF$","k":"object"},
{"l":"libretto/BinarySearchTree$BranchF$.html","n":"BranchF","t":"type BranchF[K, X]","d":"libretto/BinarySearchTree$BranchF$","k":"type"},
{"l":"libretto/BinarySearchTree$BranchF$.html","n":"clear","t":"def clear[K, X](f: X -⚬ Done): BranchF[K, X] -⚬ Done","d":"libretto/BinarySearchTree$BranchF$","k":"def"},
{"l":"libretto/BinarySearchTree$BranchF$.html","n":"deconstruct","t":"def deconstruct[K, X](j: Positive[X]): BranchF[K, X] -⚬ X |*| X","d":"libretto/BinarySearchTree$BranchF$","k":"def"},
{"l":"libretto/BinarySearchTree$BranchF$.html","n":"maxKey","t":"def maxKey[K, X]: Getter[BranchF[K, X], Val[K]]","d":"libretto/BinarySearchTree$BranchF$","k":"def"},
{"l":"libretto/BinarySearchTree$BranchF$.html","n":"minKey","t":"def minKey[K, X]: Getter[BranchF[K, X], Val[K]]","d":"libretto/BinarySearchTree$BranchF$","k":"def"},
{"l":"libretto/BinarySearchTree$BranchF$.html","n":"of","t":"def of[K, X](summary: Getter[X, Summary[K]]): X |*| X -⚬ BranchF[K, X]","d":"libretto/BinarySearchTree$BranchF$","k":"def"},
{"l":"libretto/BinarySearchTree$BranchF$.html","n":"summary","t":"def summary[K, X]: Getter[BranchF[K, X], Summary[K]]","d":"libretto/BinarySearchTree$BranchF$","k":"def"},
{"l":"libretto/BinarySearchTree$NonEmptyTree$.html","n":"NonEmptyTree","t":"object NonEmptyTree","d":"libretto/BinarySearchTree$NonEmptyTree$","k":"object"},
{"l":"libretto/BinarySearchTree$NonEmptyTree$.html","n":"branch","t":"def branch[K, V]: NonEmptyTree[K, V] |*| NonEmptyTree[K, V] -⚬ NonEmptyTree[K, V]","d":"libretto/BinarySearchTree$NonEmptyTree$","k":"def"},
{"l":"libretto/BinarySearchTree$NonEmptyTree$.html","n":"clear","t":"def clear[K, V](f: V -⚬ Done): NonEmptyTree[K, V] -⚬ Done","d":"libretto/BinarySearchTree$NonEmptyTree$","k":"def"},
{"l":"libretto/BinarySearchTree$NonEmptyTree$.html","n":"injectBranch","t":"def injectBranch[K, V]: Branch[K, V] -⚬ NonEmptyTree[K, V]","d":"libretto/BinarySearchTree$NonEmptyTree$","k":"def"},
{"l":"libretto/BinarySearchTree$NonEmptyTree$.html","n":"injectSingleton","t":"def injectSingleton[K, V]: Singleton[K, V] -⚬ NonEmptyTree[K, V]","d":"libretto/BinarySearchTree$NonEmptyTree$","k":"def"},
{"l":"libretto/BinarySearchTree$NonEmptyTree$.html","n":"maxKey","t":"def maxKey[K, V]: Getter[NonEmptyTree[K, V], Val[K]]","d":"libretto/BinarySearchTree$NonEmptyTree$","k":"def"},
{"l":"libretto/BinarySearchTree$NonEmptyTree$.html","n":"minKey","t":"def minKey[K, V]: Getter[NonEmptyTree[K, V], Val[K]]","d":"libretto/BinarySearchTree$NonEmptyTree$","k":"def"},
{"l":"libretto/BinarySearchTree$NonEmptyTree$.html","n":"singleton","t":"def singleton[K, V]: Val[K] |*| V -⚬ NonEmptyTree[K, V]","d":"libretto/BinarySearchTree$NonEmptyTree$","k":"def"},
{"l":"libretto/BinarySearchTree$NonEmptyTree$.html","n":"summary","t":"def summary[K, V]: Getter[NonEmptyTree[K, V], Summary[K]]","d":"libretto/BinarySearchTree$NonEmptyTree$","k":"def"},
{"l":"libretto/BinarySearchTree$NonEmptyTree$.html","n":"update","t":"def update[K : Ordering, V, A](f: A |*| V -⚬ PMaybe[V]): Val[K] |*| A |*| NonEmptyTree[K, V] -⚬ PMaybe[A] |*| PMaybe[NonEmptyTree[K, V]]","d":"libretto/BinarySearchTree$NonEmptyTree$","k":"def"},
{"l":"libretto/BinarySearchTree$NonEmptyTree$.html","n":"update","t":"def update[K : Ordering, V, A](f: A |*| V -⚬ PMaybe[V], ifAbsent: A -⚬ Done): Val[K] |*| A |*| NonEmptyTree[K, V] -⚬ PMaybe[NonEmptyTree[K, V]]","d":"libretto/BinarySearchTree$NonEmptyTree$","k":"def"},
{"l":"libretto/BinarySearchTree$Singleton$.html","n":"Singleton","t":"object Singleton","d":"libretto/BinarySearchTree$Singleton$","k":"object"},
{"l":"libretto/BinarySearchTree$Singleton$.html","n":"Singleton","t":"type Singleton[K, V]","d":"libretto/BinarySearchTree$Singleton$","k":"type"},
{"l":"libretto/BinarySearchTree$Singleton$.html","n":"clear","t":"def clear[K, V](f: V -⚬ Done): Singleton[K, V] -⚬ Done","d":"libretto/BinarySearchTree$Singleton$","k":"def"},
{"l":"libretto/BinarySearchTree$Singleton$.html","n":"deconstruct","t":"def deconstruct[K, V]: Singleton[K, V] -⚬ Val[K] |*| V","d":"libretto/BinarySearchTree$Singleton$","k":"def"},
{"l":"libretto/BinarySearchTree$Singleton$.html","n":"key","t":"def key[K, V]: Singleton[K, V] -⚬ Val[K] |*| Singleton[K, V]","d":"libretto/BinarySearchTree$Singleton$","k":"def"},
{"l":"libretto/BinarySearchTree$Singleton$.html","n":"keyGetter","t":"def keyGetter[K, V]: Getter[Singleton[K, V], Val[K]]","d":"libretto/BinarySearchTree$Singleton$","k":"def"},
{"l":"libretto/BinarySearchTree$Singleton$.html","n":"keyJoinL","t":"def keyJoinL[K, V]: Done |*| Singleton[K, V] -⚬ Singleton[K, V]","d":"libretto/BinarySearchTree$Singleton$","k":"def"},
{"l":"libretto/BinarySearchTree$Singleton$.html","n":"keyJoinR","t":"def keyJoinR[K, V]: Singleton[K, V] |*| Done -⚬ Singleton[K, V]","d":"libretto/BinarySearchTree$Singleton$","k":"def"},
{"l":"libretto/BinarySearchTree$Singleton$.html","n":"of","t":"def of[K, V]: Val[K] |*| V -⚬ Singleton[K, V]","d":"libretto/BinarySearchTree$Singleton$","k":"def"},
{"l":"libretto/BinarySearchTree$Singleton$.html","n":"summary","t":"def summary[K, V]: Getter[Singleton[K, V], Summary[K]]","d":"libretto/BinarySearchTree$Singleton$","k":"def"},
{"l":"libretto/BinarySearchTree$Summary$.html","n":"Summary","t":"object Summary","d":"libretto/BinarySearchTree$Summary$","k":"object"},
{"l":"libretto/BinarySearchTree$Summary$.html","n":"Summary","t":"type Summary[K]","d":"libretto/BinarySearchTree$Summary$","k":"type"},
{"l":"libretto/BinarySearchTree$Summary$.html","n":"dup","t":"def dup[K]: Summary[K] -⚬ Summary[K] |*| Summary[K]","d":"libretto/BinarySearchTree$Summary$","k":"def"},
{"l":"libretto/BinarySearchTree$Summary$.html","n":"maxKey","t":"def maxKey[K]: Summary[K] -⚬ Val[K]","d":"libretto/BinarySearchTree$Summary$","k":"def"},
{"l":"libretto/BinarySearchTree$Summary$.html","n":"maxKeyGetter","t":"def maxKeyGetter[K]: Getter[Summary[K], Val[K]]","d":"libretto/BinarySearchTree$Summary$","k":"def"},
{"l":"libretto/BinarySearchTree$Summary$.html","n":"merge","t":"def merge[K]: Summary[K] |*| Summary[K] -⚬ Summary[K]","d":"libretto/BinarySearchTree$Summary$","k":"def"},
{"l":"libretto/BinarySearchTree$Summary$.html","n":"minKey","t":"def minKey[K]: Summary[K] -⚬ Val[K]","d":"libretto/BinarySearchTree$Summary$","k":"def"},
{"l":"libretto/BinarySearchTree$Summary$.html","n":"minKeyGetter","t":"def minKeyGetter[K]: Getter[Summary[K], Val[K]]","d":"libretto/BinarySearchTree$Summary$","k":"def"},
{"l":"libretto/BinarySearchTree$Summary$.html","n":"neglect","t":"def neglect[K]: Summary[K] -⚬ Done","d":"libretto/BinarySearchTree$Summary$","k":"def"},
{"l":"libretto/BinarySearchTree$Summary$.html","n":"singleton","t":"def singleton[K]: Val[K] -⚬ Summary[K]","d":"libretto/BinarySearchTree$Summary$","k":"def"},
{"l":"libretto/BinarySearchTree$Summary$.html","n":"summaryCosemigroup","t":"def summaryCosemigroup[K]: Cosemigroup[Summary[K]]","d":"libretto/BinarySearchTree$Summary$","k":"def"},
{"l":"libretto/ClosedDSL.html","n":"ClosedDSL","t":"trait ClosedDSL extends CoreDSL","d":"libretto/ClosedDSL","k":"trait"},
{"l":"libretto/ClosedDSL.html","n":"$","t":"val $: ClosureOps","d":"libretto/ClosedDSL","k":"val"},
{"l":"libretto/ClosedDSL.html","n":"=⚬","t":"type =⚬[A, B]","d":"libretto/ClosedDSL","k":"type"},
{"l":"libretto/ClosedDSL.html","n":"NoCaptureException","t":"type NoCaptureException <: Throwable","d":"libretto/ClosedDSL","k":"type"},
{"l":"libretto/ClosedDSL.html","n":"curry","t":"def curry[A, B, C](f: A |*| B -⚬ C): A -⚬ B =⚬ C","d":"libretto/ClosedDSL","k":"def"},
{"l":"libretto/ClosedDSL.html","n":"eval","t":"def eval[A, B]: A =⚬ B |*| A -⚬ B","d":"libretto/ClosedDSL","k":"def"},
{"l":"libretto/ClosedDSL.html","n":"obj","t":"def obj[A, B](f: A -⚬ B): One -⚬ A =⚬ B","d":"libretto/ClosedDSL","k":"def"},
{"l":"libretto/ClosedDSL.html","n":"out","t":"def out[A, B, C](f: B -⚬ C): A =⚬ B -⚬ A =⚬ C","d":"libretto/ClosedDSL","k":"def"},
{"l":"libretto/ClosedDSL.html","n":"uncurry","t":"def uncurry[A, B, C](f: A -⚬ B =⚬ C): A |*| B -⚬ C","d":"libretto/ClosedDSL","k":"def"},
{"l":"libretto/ClosedDSL.html","n":"Λ","t":"def Λ[A, B](f: $[A] => $[B])(implicit file: File, line: Line): $[A =⚬ B]","d":"libretto/ClosedDSL","k":"def"},
{"l":"libretto/ClosedDSL$ClosureOps.html","n":"ClosureOps","t":"trait ClosureOps extends $Ops","d":"libretto/ClosedDSL$ClosureOps","k":"trait"},
{"l":"libretto/ClosedDSL$ClosureOps.html","n":"ClosureOps","t":"def ClosureOps[A, B](f: $[A =⚬ B]): ClosureOps[A, B]","d":"libretto/ClosedDSL$ClosureOps","k":"def"},
{"l":"libretto/ClosedDSL$ClosureOps.html","n":"app","t":"def app[A, B](f: $[A =⚬ B], a: $[A])(file: String, line: Int): $[B]","d":"libretto/ClosedDSL$ClosureOps","k":"def"},
{"l":"libretto/ClosedDSL$ClosureOps$ClosureOps.html","n":"ClosureOps","t":"class ClosureOps[A, B](f: $[A =⚬ B])","d":"libretto/ClosedDSL$ClosureOps$ClosureOps","k":"class"},
{"l":"libretto/ClosedDSL$ClosureOps$ClosureOps.html","n":"apply","t":"def apply(a: $[A])(implicit file: File, line: Line): $[B]","d":"libretto/ClosedDSL$ClosureOps$ClosureOps","k":"def"},
{"l":"libretto/ClosedLib$.html","n":"ClosedLib","t":"object ClosedLib","d":"libretto/ClosedLib$","k":"object"},
{"l":"libretto/ClosedLib$.html","n":"apply","t":"def apply(dsl: ClosedDSL, coreLib: CoreLib[dsl]): ClosedLib[dsl, coreLib]","d":"libretto/ClosedLib$","k":"def"},
{"l":"libretto/ClosedLib.html","n":"ClosedLib","t":"class ClosedLib[DSL <: ClosedDSL, CLib <: CoreLib[DSL]](val dsl: DSL, val coreLib: CLib & CoreLib[DSL])","d":"libretto/ClosedLib","k":"class"},
{"l":"libretto/ClosedLib.html","n":"ClosedLinearFunctionOps","t":"def ClosedLinearFunctionOps[A, B](self: A -⚬ B): ClosedLinearFunctionOps[A, B]","d":"libretto/ClosedLib","k":"def"},
{"l":"libretto/ClosedLib.html","n":"FocusedOnFunctionCo","t":"def FocusedOnFunctionCo[F[_], A, B](f: FocusedCo[F, A =⚬ B]): FocusedOnFunctionCo[F, A, B]","d":"libretto/ClosedLib","k":"def"},
{"l":"libretto/ClosedLib.html","n":"FocusedOnFunctionContra","t":"def FocusedOnFunctionContra[F[_], A, B](f: FocusedContra[F, A =⚬ B]): FocusedOnFunctionContra[F, A, B]","d":"libretto/ClosedLib","k":"def"},
{"l":"libretto/ClosedLib.html","n":"absorbR","t":"def absorbR[A, B, C]: A =⚬ B |*| C -⚬ A =⚬ B |*| C","d":"libretto/ClosedLib","k":"def"},
{"l":"libretto/ClosedLib.html","n":"coreLib","t":"val coreLib: CLib & CoreLib[DSL]","d":"libretto/ClosedLib","k":"val"},
{"l":"libretto/ClosedLib.html","n":"dsl","t":"val dsl: DSL","d":"libretto/ClosedLib","k":"val"},
{"l":"libretto/ClosedLib.html","n":"input","t":"def input[C]: ContraFunctor[=⚬]","d":"libretto/ClosedLib","k":"def"},
{"l":"libretto/ClosedLib.html","n":"output","t":"def output[A]: Functor[[x] =>> A =⚬ x]","d":"libretto/ClosedLib","k":"def"},
{"l":"libretto/ClosedLib.html","n":"unveilSequentially","t":"def unveilSequentially[A, Ā, B](implicit ev: Dual[A, Ā]): A |*| B -⚬ Ā =⚬ B","d":"libretto/ClosedLib","k":"def"},
{"l":"libretto/ClosedLib.html","n":"zapPremises","t":"def zapPremises[A, Ā, B, C](implicit ev: Dual[A, Ā]): A =⚬ B |*| Ā =⚬ C -⚬ B |*| C","d":"libretto/ClosedLib","k":"def"},
{"l":"libretto/ClosedLib$ClosedLinearFunctionOps.html","n":"ClosedLinearFunctionOps","t":"class ClosedLinearFunctionOps[A, B](self: A -⚬ B)","d":"libretto/ClosedLib$ClosedLinearFunctionOps","k":"class"},
{"l":"libretto/ClosedLib$ClosedLinearFunctionOps.html","n":"curry","t":"def curry[A1, A2](implicit ev: A =:= A1 |*| A2): A1 -⚬ A2 =⚬ B","d":"libretto/ClosedLib$ClosedLinearFunctionOps","k":"def"},
{"l":"libretto/ClosedLib$ClosedLinearFunctionOps.html","n":"uncurry","t":"def uncurry[B1, B2](implicit ev: B =:= B1 =⚬ B2): A |*| B1 -⚬ B2","d":"libretto/ClosedLib$ClosedLinearFunctionOps","k":"def"},
{"l":"libretto/ClosedLib$FocusedOnFunctionCo.html","n":"FocusedOnFunctionCo","t":"class FocusedOnFunctionCo[F[_], A, B](f: FocusedCo[F, A =⚬ B])","d":"libretto/ClosedLib$FocusedOnFunctionCo","k":"class"},
{"l":"libretto/ClosedLib$FocusedOnFunctionCo.html","n":"input","t":"def input: FocusedContra[[x] =>> F[x =⚬ B], A]","d":"libretto/ClosedLib$FocusedOnFunctionCo","k":"def"},
{"l":"libretto/ClosedLib$FocusedOnFunctionCo.html","n":"output","t":"def output: FocusedCo[[x] =>> F[A =⚬ x], B]","d":"libretto/ClosedLib$FocusedOnFunctionCo","k":"def"},
{"l":"libretto/ClosedLib$FocusedOnFunctionContra.html","n":"FocusedOnFunctionContra","t":"class FocusedOnFunctionContra[F[_], A, B](f: FocusedContra[F, A =⚬ B])","d":"libretto/ClosedLib$FocusedOnFunctionContra","k":"class"},
{"l":"libretto/ClosedLib$FocusedOnFunctionContra.html","n":"input","t":"def input: FocusedCo[[x] =>> F[x =⚬ B], A]","d":"libretto/ClosedLib$FocusedOnFunctionContra","k":"def"},
{"l":"libretto/ClosedLib$FocusedOnFunctionContra.html","n":"output","t":"def output: FocusedContra[[x] =>> F[A =⚬ x], B]","d":"libretto/ClosedLib$FocusedOnFunctionContra","k":"def"},
{"l":"libretto/CoreDSL.html","n":"CoreDSL","t":"trait CoreDSL","d":"libretto/CoreDSL","k":"trait"},
{"l":"libretto/CoreDSL.html","n":"$","t":"type $[A]","d":"libretto/CoreDSL","k":"type"},
{"l":"libretto/CoreDSL.html","n":"$","t":"val $: $Ops","d":"libretto/CoreDSL","k":"val"},
{"l":"libretto/CoreDSL.html","n":"-⚬","t":"type -⚬[A, B]","d":"libretto/CoreDSL","k":"type"},
{"l":"libretto/CoreDSL.html","n":"Done","t":"type Done","d":"libretto/CoreDSL","k":"type"},
{"l":"libretto/CoreDSL.html","n":"LTerminus","t":"type LTerminus","d":"libretto/CoreDSL","k":"type"},
{"l":"libretto/CoreDSL.html","n":"Need","t":"type Need","d":"libretto/CoreDSL","k":"type"},
{"l":"libretto/CoreDSL.html","n":"NotLinearException","t":"type NotLinearException <: Throwable","d":"libretto/CoreDSL","k":"type"},
{"l":"libretto/CoreDSL.html","n":"One","t":"type One","d":"libretto/CoreDSL","k":"type"},
{"l":"libretto/CoreDSL.html","n":"Ping","t":"type Ping","d":"libretto/CoreDSL","k":"type"},
{"l":"libretto/CoreDSL.html","n":"Pong","t":"type Pong","d":"libretto/CoreDSL","k":"type"},
{"l":"libretto/CoreDSL.html","n":"RTerminus","t":"type RTerminus","d":"libretto/CoreDSL","k":"type"},
{"l":"libretto/CoreDSL.html","n":"Rec","t":"type Rec[F[_]]","d":"libretto/CoreDSL","k":"type"},
{"l":"libretto/CoreDSL.html","n":"UnboundVariablesException","t":"type UnboundVariablesException <: Throwable","d":"libretto/CoreDSL","k":"type"},
{"l":"libretto/CoreDSL.html","n":"Zero","t":"type Zero","d":"libretto/CoreDSL","k":"type"},
{"l":"libretto/CoreDSL.html","n":"andThen","t":"def andThen[A, B, C](f: A -⚬ B, g: B -⚬ C): A -⚬ C","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"assocLR","t":"def assocLR[A, B, C]: A |*| B |*| C -⚬ A |*| B |*| C","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"assocRL","t":"def assocRL[A, B, C]: A |*| B |*| C -⚬ A |*| B |*| C","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"choice","t":"def choice[A, B, C](caseLeft: A -⚬ B, caseRight: A -⚬ C): A -⚬ B |&| C","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"chooseL","t":"def chooseL[A, B]: A |&| B -⚬ A","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"chooseLOnPong","t":"def chooseLOnPong[A, B]: A |&| B -⚬ Pong |*| A","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"chooseR","t":"def chooseR[A, B]: A |&| B -⚬ B","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"chooseROnPong","t":"def chooseROnPong[A, B]: A |&| B -⚬ Pong |*| B","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"coDistributeL","t":"def coDistributeL[A, B, C]: A |*| B |&| A |*| C -⚬ A |*| B |&| C","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"coDistributeR","t":"def coDistributeR[A, B, C]: A |*| C |&| B |*| C -⚬ A |&| B |*| C","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"coFactorL","t":"def coFactorL[A, B, C]: A |*| B |&| C -⚬ A |*| B |&| A |*| C","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"coFactorR","t":"def coFactorR[A, B, C]: A |&| B |*| C -⚬ A |*| C |&| B |*| C","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"delayIndefinitely","t":"def delayIndefinitely: Done -⚬ RTerminus","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"dismissPing","t":"def dismissPing: Ping -⚬ One","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"dismissPong","t":"def dismissPong: One -⚬ Pong","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"distributeL","t":"def distributeL[A, B, C]: A |*| B |+| C -⚬ A |*| B |+| A |*| C","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"distributeR","t":"def distributeR[A, B, C]: A |+| B |*| C -⚬ A |*| C |+| B |*| C","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"done","t":"def done: One -⚬ Done","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"either","t":"def either[A, B, C](caseLeft: A -⚬ C, caseRight: B -⚬ C): A |+| B -⚬ C","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"elimFst","t":"def elimFst[B]: One |*| B -⚬ B","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"elimFst","t":"def elimFst[A, B](f: A -⚬ One): A |*| B -⚬ B","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"elimSnd","t":"def elimSnd[A]: A |*| One -⚬ A","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"elimSnd","t":"def elimSnd[A, B](f: B -⚬ One): A |*| B -⚬ A","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"factorL","t":"def factorL[A, B, C]: A |*| B |+| A |*| C -⚬ A |*| B |+| C","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"factorR","t":"def factorR[A, B, C]: A |*| C |+| B |*| C -⚬ A |+| B |*| C","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"fork","t":"def fork: Done -⚬ Done |*| Done","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"forkMap","t":"def forkMap[A, B](f: Done -⚬ A, g: Done -⚬ B): Done -⚬ A |*| B","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"forkMapNeed","t":"def forkMapNeed[A, B](f: A -⚬ Need, g: B -⚬ Need): A |*| B -⚬ Need","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"forkNeed","t":"def forkNeed: Need |*| Need -⚬ Need","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"forkPing","t":"def forkPing: Ping -⚬ Ping |*| Ping","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"forkPong","t":"def forkPong: Pong |*| Pong -⚬ Pong","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"fst","t":"def fst[A, B, C](f: A -⚬ B): A |*| C -⚬ B |*| C","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"id","t":"def id[A]: A -⚬ A","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"injectL","t":"def injectL[A, B]: A -⚬ A |+| B","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"injectLOnPing","t":"def injectLOnPing[A, B]: Ping |*| A -⚬ A |+| B","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"injectR","t":"def injectR[A, B]: B -⚬ A |+| B","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"injectROnPing","t":"def injectROnPing[A, B]: Ping |*| B -⚬ A |+| B","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"introFst","t":"def introFst[B]: B -⚬ One |*| B","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"introFst","t":"def introFst[A, X](f: One -⚬ X): A -⚬ X |*| A","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"introSnd","t":"def introSnd[A]: A -⚬ A |*| One","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"introSnd","t":"def introSnd[A, X](f: One -⚬ X): A -⚬ A |*| X","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"join","t":"def join: Done |*| Done -⚬ Done","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"joinLTermini","t":"def joinLTermini: LTerminus -⚬ LTerminus |*| LTerminus","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"joinMap","t":"def joinMap[A, B](f: A -⚬ Done, g: B -⚬ Done): A |*| B -⚬ Done","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"joinMapNeed","t":"def joinMapNeed[A, B](f: Need -⚬ A, g: Need -⚬ B): Need -⚬ A |*| B","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"joinNeed","t":"def joinNeed: Need -⚬ Need |*| Need","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"joinPing","t":"def joinPing: Ping |*| Ping -⚬ Ping","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"joinPong","t":"def joinPong: Pong -⚬ Pong |*| Pong","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"joinRTermini","t":"def joinRTermini: RTerminus |*| RTerminus -⚬ RTerminus","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"lInvertPongPing","t":"def lInvertPongPing: One -⚬ Pong |*| Ping","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"lInvertSignal","t":"def lInvertSignal: One -⚬ Need |*| Done","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"lInvertTerminus","t":"def lInvertTerminus: One -⚬ LTerminus |*| RTerminus","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"need","t":"def need: Need -⚬ One","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"notifyChoice","t":"def notifyChoice[A, B]: Pong |*| A |&| B -⚬ A |&| B","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"notifyDoneL","t":"def notifyDoneL: Done -⚬ Ping |*| Done","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"notifyDoneR","t":"def notifyDoneR: Done -⚬ Done |*| Ping","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"notifyEither","t":"def notifyEither[A, B]: A |+| B -⚬ Ping |*| A |+| B","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"notifyNeedL","t":"def notifyNeedL: Pong |*| Need -⚬ Need","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"notifyNeedR","t":"def notifyNeedR: Need |*| Pong -⚬ Need","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"pack","t":"def pack[F[_]]: F[Rec[F]] -⚬ Rec[F]","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"par","t":"def par[A, B, C, D](f: A -⚬ B, g: C -⚬ D): A |*| C -⚬ B |*| D","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"ping","t":"def ping: One -⚬ Ping","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"pong","t":"def pong: Pong -⚬ One","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"rInvertPingPong","t":"def rInvertPingPong: Ping |*| Pong -⚬ One","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"rInvertSignal","t":"def rInvertSignal: Done |*| Need -⚬ One","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"rInvertTerminus","t":"def rInvertTerminus: RTerminus |*| LTerminus -⚬ One","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"racePair","t":"def racePair: Ping |*| Ping -⚬ One |+| One","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"rec","t":"def rec[A, B](f: A -⚬ B => A -⚬ B): A -⚬ B","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"regressInfinitely","t":"def regressInfinitely: LTerminus -⚬ Need","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"selectPair","t":"def selectPair: One |&| One -⚬ Pong |*| Pong","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"snd","t":"def snd[A, B, C](f: B -⚬ C): A |*| B -⚬ A |*| C","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"strengthenPing","t":"def strengthenPing: Ping -⚬ Done","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"strengthenPong","t":"def strengthenPong: Need -⚬ Pong","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"swap","t":"def swap[A, B]: A |*| B -⚬ B |*| A","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"unpack","t":"def unpack[F[_]]: Rec[F] -⚬ F[Rec[F]]","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"|&|","t":"type |&|[A, B]","d":"libretto/CoreDSL","k":"type"},
{"l":"libretto/CoreDSL.html","n":"|*|","t":"type |*|[A, B]","d":"libretto/CoreDSL","k":"type"},
{"l":"libretto/CoreDSL.html","n":"|+|","t":"type |+|[A, B]","d":"libretto/CoreDSL","k":"type"},
{"l":"libretto/CoreDSL.html","n":"λ","t":"def λ[A, B](f: $[A] => $[B])(implicit file: File, line: Line): A -⚬ B","d":"libretto/CoreDSL","k":"def"},
{"l":"libretto/CoreDSL.html","n":"⊕","t":"type ⊕[A, B] = A |+| B","d":"libretto/CoreDSL","k":"type"},
{"l":"libretto/CoreDSL.html","n":"⊗","t":"type ⊗[A, B] = A |*| B","d":"libretto/CoreDSL","k":"type"},
{"l":"libretto/CoreDSL$$Ops.html","n":"$Ops","t":"trait $Ops","d":"libretto/CoreDSL$$Ops","k":"trait"},
{"l":"libretto/CoreDSL$$Ops.html","n":">","t":"def >[B](f: A -⚬ B)(implicit file: File, line: Line): $[B]","d":"libretto/CoreDSL$$Ops","k":"def"},
{"l":"libretto/CoreDSL$$Ops.html","n":"also","t":"def also[B](f: One -⚬ B): $[A |*| B]","d":"libretto/CoreDSL$$Ops","k":"def"},
{"l":"libretto/CoreDSL$$Ops.html","n":"alsoElim","t":"def alsoElim(unit: $[One]): $[A]","d":"libretto/CoreDSL$$Ops","k":"def"},
{"l":"libretto/CoreDSL$$Ops.html","n":"alsoFst","t":"def alsoFst[X](f: One -⚬ X): $[X |*| A]","d":"libretto/CoreDSL$$Ops","k":"def"},
{"l":"libretto/CoreDSL$$Ops.html","n":"apply","t":"def apply(a: $[A])(implicit file: File, line: Line): $[B]","d":"libretto/CoreDSL$$Ops","k":"def"},
{"l":"libretto/CoreDSL$$Ops.html","n":"map","t":"def map[A, B](a: $[A])(f: A -⚬ B)(file: String, line: Int): $[B]","d":"libretto/CoreDSL$$Ops","k":"def"},
{"l":"libretto/CoreDSL$$Ops.html","n":"unzip","t":"def unzip[A, B](ab: $[A |*| B])(file: String, line: Int): ($[A], $[B])","d":"libretto/CoreDSL$$Ops","k":"def"},
{"l":"libretto/CoreDSL$$Ops.html","n":"zip","t":"def zip[A, B](a: $[A], b: $[B])(file: String, line: Int): $[A |*| B]","d":"libretto/CoreDSL$$Ops","k":"def"},
{"l":"libretto/CoreDSL$$Ops.html","n":"|*|","t":"def |*|[B](b: $[B])(implicit file: File, line: Line): $[A |*| B]","d":"libretto/CoreDSL$$Ops","k":"def"},
{"l":"libretto/CoreDSL$$Ops$|*|$.html","n":"|*|","t":"object |*|","d":"libretto/CoreDSL$$Ops$|*|$","k":"object"},
{"l":"libretto/CoreDSL$$Ops$|*|$.html","n":"unapply","t":"def unapply[A, B](ab: $[A |*| B])(implicit file: File, line: Line): ($[A], $[B])","d":"libretto/CoreDSL$$Ops$|*|$","k":"def"},
{"l":"libretto/CoreLib$.html","n":"CoreLib","t":"object CoreLib","d":"libretto/CoreLib$","k":"object"},
{"l":"libretto/CoreLib$.html","n":"apply","t":"def apply(dsl: CoreDSL): CoreLib[dsl]","d":"libretto/CoreLib$","k":"def"},
{"l":"libretto/CoreLib.html","n":"CoreLib","t":"class CoreLib[DSL <: CoreDSL](val dsl: DSL)","d":"libretto/CoreLib","k":"class"},
{"l":"libretto/CoreLib.html","n":"/\\","t":"def /\\[C](g: A -⚬ C)(using Cosemigroup[A]): A -⚬ B |*| C","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"AcquiredLock","t":"type AcquiredLock","d":"libretto/CoreLib","k":"type"},
{"l":"libretto/CoreLib.html","n":"Bool","t":"type Bool","d":"libretto/CoreLib","k":"type"},
{"l":"libretto/CoreLib.html","n":"Deferred","t":"type Deferred[A]","d":"libretto/CoreLib","k":"type"},
{"l":"libretto/CoreLib.html","n":"Detained","t":"type Detained[A]","d":"libretto/CoreLib","k":"type"},
{"l":"libretto/CoreLib.html","n":"Endless","t":"type Endless[A]","d":"libretto/CoreLib","k":"type"},
{"l":"libretto/CoreLib.html","n":"FocusedOnChoiceCo","t":"def FocusedOnChoiceCo[F[_], B1, B2](f: FocusedCo[F, B1 |&| B2]): FocusedOnChoiceCo[F, B1, B2]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"FocusedOnChoiceContra","t":"def FocusedOnChoiceContra[A, F[_], B1, B2](f: FocusedContra[F, B1 |&| B2]): FocusedOnChoiceContra[A, F, B1, B2]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"FocusedOnDoneTimesCo","t":"def FocusedOnDoneTimesCo[F[_], B2](f: FocusedCo[F, Done |*| B2])(implicit j: Positive[B2]): FocusedOnDoneTimesCo[F, B2]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"FocusedOnPairCo","t":"def FocusedOnPairCo[F[_], B1, B2](f: FocusedCo[F, B1 |*| B2]): FocusedOnPairCo[F, B1, B2]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"FocusedOnPairContra","t":"def FocusedOnPairContra[A, F[_], B1, B2](f: FocusedContra[F, B1 |*| B2]): FocusedOnPairContra[A, F, B1, B2]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"FocusedOnPlusCo","t":"def FocusedOnPlusCo[F[_], B1, B2](f: FocusedCo[F, B1 |+| B2]): FocusedOnPlusCo[F, B1, B2]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"FocusedOnPlusContra","t":"def FocusedOnPlusContra[A, F[_], B1, B2](f: FocusedContra[F, B1 |+| B2]): FocusedOnPlusContra[A, F, B1, B2]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"FocusedOnTimesDoneCo","t":"def FocusedOnTimesDoneCo[F[_], B1](f: FocusedCo[F, B1 |*| Done])(implicit j: Positive[B1]): FocusedOnTimesDoneCo[F, B1]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"IV","t":"def IV[A, B, C, D](f: B |*| C -⚬ D): A |*| B |*| C -⚬ A |*| D","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"IX","t":"def IX[A, B, C]: A |*| B |*| C -⚬ A |*| C |*| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"IXI","t":"def IXI[A, B, C, D]: A |*| B |*| C |*| D -⚬ A |*| C |*| B |*| D","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"Id","t":"type Id[A] = A","d":"libretto/CoreLib","k":"type"},
{"l":"libretto/CoreLib.html","n":"IΛ","t":"def IΛ[A, B, C, D](f: B -⚬ C |*| D): A |*| B -⚬ A |*| C |*| D","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"LList","t":"type LList[T]","d":"libretto/CoreLib","k":"type"},
{"l":"libretto/CoreLib.html","n":"LList1","t":"type LList1[T]","d":"libretto/CoreLib","k":"type"},
{"l":"libretto/CoreLib.html","n":"LinearFunctionOps","t":"def LinearFunctionOps[A, B](self: A -⚬ B): LinearFunctionOps[A, B]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"LinearFunctionToPairOps","t":"def LinearFunctionToPairOps[A, B1, B2](self: A -⚬ B1 |*| B2): LinearFunctionToPairOps[A, B1, B2]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"LinearFunctionToPlusOps","t":"def LinearFunctionToPlusOps[A, B1, B2](self: A -⚬ B1 |+| B2): LinearFunctionToPlusOps[A, B1, B2]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"Lock","t":"type Lock","d":"libretto/CoreLib","k":"type"},
{"l":"libretto/CoreLib.html","n":"Maybe","t":"type Maybe[A]","d":"libretto/CoreLib","k":"type"},
{"l":"libretto/CoreLib.html","n":"Multiple","t":"type Multiple[A]","d":"libretto/CoreLib","k":"type"},
{"l":"libretto/CoreLib.html","n":"Optionally","t":"type Optionally[A]","d":"libretto/CoreLib","k":"type"},
{"l":"libretto/CoreLib.html","n":"PMaybe","t":"type PMaybe[A]","d":"libretto/CoreLib","k":"type"},
{"l":"libretto/CoreLib.html","n":"PUnlimited","t":"type PUnlimited[A]","d":"libretto/CoreLib","k":"type"},
{"l":"libretto/CoreLib.html","n":"Unlimited","t":"type Unlimited[A]","d":"libretto/CoreLib","k":"type"},
{"l":"libretto/CoreLib.html","n":"VI","t":"def VI[A, B, C, D](f: A |*| B -⚬ D): A |*| B |*| C -⚬ D |*| C","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"XI","t":"def XI[A, B, C]: A |*| B |*| C -⚬ B |*| A |*| C","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"\\/","t":"def \\/[B](g: B -⚬ C)(using Semigroup[C]): A |*| B -⚬ C","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"awaitChooseL","t":"def awaitChooseL[A, B](implicit A: Negative[A]): A |&| B -⚬ Need |*| A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"awaitChooseR","t":"def awaitChooseR[A, B](implicit B: Negative[B]): A |&| B -⚬ Need |*| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"awaitInjectL","t":"def awaitInjectL[A, B](implicit A: Positive[A]): Done |*| A -⚬ A |+| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"awaitInjectR","t":"def awaitInjectR[A, B](implicit B: Positive[B]): Done |*| B -⚬ A |+| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"awaitNegFst","t":"def awaitNegFst[A](using A: Negative[A]): A -⚬ Need |*| A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"awaitNegSnd","t":"def awaitNegSnd[A](using A: Negative[A]): A -⚬ A |*| Need","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"awaitPingFst","t":"def awaitPingFst[A](using A: Positive[A]): Ping |*| A -⚬ A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"awaitPingSnd","t":"def awaitPingSnd[A](using A: Positive[A]): A |*| Ping -⚬ A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"awaitPongFst","t":"def awaitPongFst[A](using A: Negative[A]): A -⚬ Pong |*| A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"awaitPongSnd","t":"def awaitPongSnd[A](using A: Negative[A]): A -⚬ A |*| Pong","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"awaitPosChooseL","t":"def awaitPosChooseL[A, B](implicit A: Positive[A]): Done |*| A |&| B -⚬ A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"awaitPosChooseR","t":"def awaitPosChooseR[A, B](implicit B: Positive[B]): Done |*| A |&| B -⚬ B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"awaitPosFst","t":"def awaitPosFst[A](using A: Positive[A]): Done |*| A -⚬ A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"awaitPosSnd","t":"def awaitPosSnd[A](using A: Positive[A]): A |*| Done -⚬ A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"blockInportUntilPong","t":"def blockInportUntilPong[A]: A -⚬ Pong |*| A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"blockOutportUntilPing","t":"def blockOutportUntilPing[A]: Ping |*| A -⚬ A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"blockUntil","t":"def blockUntil(b: $[Ping]): $[A]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"choiceBifunctor","t":"val choiceBifunctor: Bifunctor[|&|]","d":"libretto/CoreLib","k":"val"},
{"l":"libretto/CoreLib.html","n":"choiceEitherDuality","t":"def choiceEitherDuality[A, B, Ȧ, Ḃ](implicit a: Dual[A, Ȧ], b: Dual[B, Ḃ]): Dual[A |&| B, Ȧ |+| Ḃ]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"chooseLOnPing","t":"def chooseLOnPing[A, B]: Ping |*| A |&| B -⚬ A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"chooseLWhenDone","t":"def chooseLWhenDone[A, B]: Done |*| A |&| B -⚬ Done |*| A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"chooseLWhenNeed","t":"def chooseLWhenNeed[A, B]: Need |*| A |&| B -⚬ Need |*| A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"chooseROnPing","t":"def chooseROnPing[A, B]: Ping |*| A |&| B -⚬ B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"chooseRWhenDone","t":"def chooseRWhenDone[A, B]: Done |*| A |&| B -⚬ Done |*| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"chooseRWhenNeed","t":"def chooseRWhenNeed[A, B]: A |&| Need |*| B -⚬ Need |*| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"combine","t":"def combine[A : Semigroup]: A |*| A -⚬ A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"combineMap","t":"def combineMap[A, B, C : Semigroup](f: A -⚬ C, g: B -⚬ C): A |*| B -⚬ C","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"compareBy","t":"def compareBy[A, B, K1 : Positive, K2 : Positive](aKey: Getter[A, K1], bKey: Getter[B, K2])(implicit evidence$17: PComonoid[K1], evidence$18: Positive[K1], evidence$19: PComonoid[K2], evidence$20: Positive[K2], cmp: Comparable[K1, K2]): A |*| B -⚬ Compared[A, B]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"defer","t":"def defer[A](using A: Positive[A]): A -⚬ Deferred[A]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"deferReleaseUntil","t":"def deferReleaseUntil(ping: $[Ping]): $[AcquiredLock]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"deferUntil","t":"def deferUntil(b: $[Ping])(implicit A: Positive[A]): $[A]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"delayChoiceAndSidesUntilDone","t":"def delayChoiceAndSidesUntilDone[A, B](implicit A: Positive[A], B: Positive[B]): Done |*| A |&| B -⚬ A |&| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"delayChoiceAndSidesUntilNeed","t":"def delayChoiceAndSidesUntilNeed[A, B](implicit A: Negative[A], B: Negative[B]): A |&| B -⚬ Need |*| A |&| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"delayChoiceUntilDone","t":"def delayChoiceUntilDone[A, B]: Done |*| A |&| B -⚬ Done |*| A |&| Done |*| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"delayChoiceUntilNeed","t":"def delayChoiceUntilNeed[A, B]: Need |*| A |&| Need |*| B -⚬ Need |*| A |&| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"delayChoiceUntilPing","t":"def delayChoiceUntilPing[A, B]: Ping |*| A |&| B -⚬ A |&| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"delayChoiceUntilPong","t":"def delayChoiceUntilPong[A, B]: A |&| B -⚬ Pong |*| A |&| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"delayEitherAndSidesUntilDone","t":"def delayEitherAndSidesUntilDone[A, B](implicit A: Positive[A], B: Positive[B]): Done |*| A |+| B -⚬ A |+| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"delayEitherAndSidesUntilNeed","t":"def delayEitherAndSidesUntilNeed[A, B](implicit A: Negative[A], B: Negative[B]): A |+| B -⚬ Need |*| A |+| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"delayEitherUntilDone","t":"def delayEitherUntilDone[A, B]: Done |*| A |+| B -⚬ Done |*| A |+| Done |*| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"delayEitherUntilNeed","t":"def delayEitherUntilNeed[A, B]: Need |*| A |+| Need |*| B -⚬ Need |*| A |+| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"delayEitherUntilPing","t":"def delayEitherUntilPing[A, B]: Ping |*| A |+| B -⚬ A |+| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"delayEitherUntilPong","t":"def delayEitherUntilPong[A, B]: A |+| B -⚬ Pong |*| A |+| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"delayUsing","t":"def delayUsing[A](f: Done -⚬ Done)(using A: Positive[A]): A -⚬ A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"delayUsing","t":"def delayUsing[A](f: Need -⚬ Need)(using A: Negative[A]): A -⚬ A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"detain","t":"def detain[A](using A: Positive[A]): A -⚬ Detained[A]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"detainReleaseUntil","t":"def detainReleaseUntil(done: $[Done]): $[AcquiredLock]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"discardFst","t":"def discardFst[A, B](implicit A: Comonoid[A]): A |*| B -⚬ B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"discardSnd","t":"def discardSnd[A, B](implicit B: Comonoid[B]): A |*| B -⚬ A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"doneNeedDuality","t":"def doneNeedDuality: Dual[Done, Need]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"dsl","t":"val dsl: DSL","d":"libretto/CoreLib","k":"val"},
{"l":"libretto/CoreLib.html","n":"dualRec","t":"def dualRec[F[_], G[_]](ev: Dual1[F, G]): Dual[Rec[F], Rec[G]]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"dualSymmetric","t":"def dualSymmetric[A, B](ev: Dual[A, B]): Dual[B, A]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"eitherBifunctor","t":"val eitherBifunctor: Bifunctor[|+|]","d":"libretto/CoreLib","k":"val"},
{"l":"libretto/CoreLib.html","n":"eitherChoiceDuality","t":"def eitherChoiceDuality[A, B, Ȧ, Ḃ](implicit a: Dual[A, Ȧ], b: Dual[B, Ḃ]): Dual[A |+| B, Ȧ |&| Ḃ]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"fstFunctor","t":"def fstFunctor[B]: Transportive[|*|]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"getFst","t":"def getFst[A, B](implicit A: Cosemigroup[A]): A |*| B -⚬ A |*| A |*| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"getSnd","t":"def getSnd[A, B](implicit B: Cosemigroup[B]): A |*| B -⚬ B |*| A |*| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"idFunctor","t":"val idFunctor: Transportive[Id]","d":"libretto/CoreLib","k":"val"},
{"l":"libretto/CoreLib.html","n":"injectLOnPong","t":"def injectLOnPong[A, B]: A -⚬ Pong |*| A |+| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"injectLWhenDone","t":"def injectLWhenDone[A, B]: Done |*| A -⚬ Done |*| A |+| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"injectLWhenNeed","t":"def injectLWhenNeed[A, B]: Need |*| A -⚬ Need |*| A |+| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"injectROnPong","t":"def injectROnPong[A, B]: B -⚬ Pong |*| A |+| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"injectRWhenDone","t":"def injectRWhenDone[A, B]: Done |*| B -⚬ A |+| Done |*| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"injectRWhenNeed","t":"def injectRWhenNeed[A, B]: Need |*| B -⚬ Need |*| A |+| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"lInvert","t":"def lInvert[A, B](implicit ev: Dual[A, B]): One -⚬ B |*| A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"lInvertChoice","t":"def lInvertChoice[A, B, Ȧ, Ḃ](lInvertA: One -⚬ Ȧ |*| A, lInvertB: One -⚬ Ḃ |*| B): One -⚬ Ȧ |&| Ḃ |*| A |+| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"lInvertPair","t":"def lInvertPair[A, B, Ȧ, Ḃ](lInvertA: One -⚬ Ȧ |*| A, lInvertB: One -⚬ Ḃ |*| B): One -⚬ Ȧ |*| Ḃ |*| A |*| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"lInvertRec","t":"def lInvertRec[F[_], G[_]](lInvertSub: [x, y] => (x$1: One -⚬ x |*| y) => One -⚬ F[x] |*| G[y]): One -⚬ Rec[F] |*| Rec[G]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"matchingChoiceLR","t":"def matchingChoiceLR[A, B, C, D]: A |+| B |*| C |&| D -⚬ A |*| C |+| B |*| D","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"matchingChoiceRL","t":"def matchingChoiceRL[A, B, C, D]: A |&| B |*| C |+| D -⚬ A |*| C |+| B |*| D","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"notifyChoiceAndLeft","t":"def notifyChoiceAndLeft[A, B](notifyL: Pong |*| A -⚬ A): Pong |*| A |&| B -⚬ A |&| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"notifyChoiceAndLeft","t":"def notifyChoiceAndLeft[A, B](using A: Negative[A]): Pong |*| A |&| B -⚬ A |&| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"notifyChoiceAndRight","t":"def notifyChoiceAndRight[A, B](notifyR: Pong |*| B -⚬ B): Pong |*| A |&| B -⚬ A |&| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"notifyChoiceAndRight","t":"def notifyChoiceAndRight[A, B](using B: Negative[B]): Pong |*| A |&| B -⚬ A |&| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"notifyChoiceAndSides","t":"def notifyChoiceAndSides[A, B](notifyL: Pong |*| A -⚬ A, notifyR: Pong |*| B -⚬ B): Pong |*| A |&| B -⚬ A |&| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"notifyChoiceAndSides","t":"def notifyChoiceAndSides[A, B](using A: Negative[A], B: Negative[B]): Pong |*| A |&| B -⚬ A |&| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"notifyEitherAndLeft","t":"def notifyEitherAndLeft[A, B](notifyL: A -⚬ Ping |*| A): A |+| B -⚬ Ping |*| A |+| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"notifyEitherAndLeft","t":"def notifyEitherAndLeft[A, B](using A: Positive[A]): A |+| B -⚬ Ping |*| A |+| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"notifyEitherAndRight","t":"def notifyEitherAndRight[A, B](notifyR: B -⚬ Ping |*| B): A |+| B -⚬ Ping |*| A |+| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"notifyEitherAndRight","t":"def notifyEitherAndRight[A, B](using B: Positive[B]): A |+| B -⚬ Ping |*| A |+| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"notifyEitherAndSides","t":"def notifyEitherAndSides[A, B](notifyL: A -⚬ Ping |*| A, notifyR: B -⚬ Ping |*| B): A |+| B -⚬ Ping |*| A |+| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"notifyEitherAndSides","t":"def notifyEitherAndSides[A, B](using A: Positive[A], B: Positive[B]): A |+| B -⚬ Ping |*| A |+| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"notifyNegFst","t":"def notifyNegFst[A](using A: Negative[A]): Pong |*| A -⚬ A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"notifyNegSnd","t":"def notifyNegSnd[A](using A: Negative[A]): A |*| Pong -⚬ A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"notifyPosFst","t":"def notifyPosFst[A](using A: Positive[A]): A -⚬ Ping |*| A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"notifyPosSnd","t":"def notifyPosSnd[A](using A: Positive[A]): A -⚬ A |*| Ping","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"oneSelfDual","t":"def oneSelfDual: Dual[One, One]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"pairDuality","t":"def pairDuality[A, B, Ȧ, Ḃ](implicit a: Dual[A, Ȧ], b: Dual[B, Ḃ]): Dual[A |*| B, Ȧ |*| Ḃ]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"parFromOne","t":"def parFromOne[A, B](f: One -⚬ A, g: One -⚬ B): One -⚬ A |*| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"parToOne","t":"def parToOne[A, B](f: A -⚬ One, g: B -⚬ One): A |*| B -⚬ One","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"pool","t":"def pool[A : Positive, Ā](lInvert: One -⚬ Ā |*| A): LList1[A] -⚬ Unlimited[A |*| Ā] |*| LList1[A]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"rInvert","t":"def rInvert[A, B](implicit ev: Dual[A, B]): A |*| B -⚬ One","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"rInvertEither","t":"def rInvertEither[A, B, Ȧ, Ḃ](rInvertA: A |*| Ȧ -⚬ One, rInvertB: B |*| Ḃ -⚬ One): A |+| B |*| Ȧ |&| Ḃ -⚬ One","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"rInvertPair","t":"def rInvertPair[A, B, Ȧ, Ḃ](rInvertA: A |*| Ȧ -⚬ One, rInvertB: B |*| Ḃ -⚬ One): A |*| B |*| Ȧ |*| Ḃ -⚬ One","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"rInvertRec","t":"def rInvertRec[F[_], G[_]](rInvertSub: [x, y] => (x$1: x |*| y -⚬ One) => F[x] |*| G[y] -⚬ One): Rec[F] |*| Rec[G] -⚬ One","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"race","t":"def race[A, B](implicit A: Positive[A], B: Positive[B]): A |*| B -⚬ A |*| B |+| A |*| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"race","t":"def race[A : Positive, B : Positive, C](caseFstWins: A |*| B -⚬ C, caseSndWins: A |*| B -⚬ C): A |*| B -⚬ C","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"raceAgainstL","t":"def raceAgainstL[A](implicit A: Positive[A]): Done |*| A -⚬ A |+| A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"raceAgainstR","t":"def raceAgainstR[A](implicit A: Positive[A]): A |*| Done -⚬ A |+| A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"raceBy","t":"def raceBy[A, B](notifyA: A -⚬ Ping |*| A, notifyB: B -⚬ Ping |*| B): A |*| B -⚬ A |*| B |+| A |*| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"raceDone","t":"def raceDone: Done |*| Done -⚬ Done |+| Done","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"raceSignaledOrNot","t":"def raceSignaledOrNot[A](implicit A: Positive[A]): A -⚬ A |+| A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"raceWithL","t":"def raceWithL[X, A : Positive, B : Positive, C](caseFstWins: X |*| A |*| B -⚬ C, caseSndWins: X |*| A |*| B -⚬ C): X |*| A |*| B -⚬ C","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"raceWithR","t":"def raceWithR[A : Positive, B : Positive, Y, C](caseFstWins: A |*| B |*| Y -⚬ C, caseSndWins: A |*| B |*| Y -⚬ C): A |*| B |*| Y -⚬ C","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"rec2","t":"def rec2[A, B, C, D](f: (A -⚬ B, C -⚬ D) => A -⚬ B, g: (A -⚬ B, C -⚬ D) => C -⚬ D): (A -⚬ B, C -⚬ D)","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"releaseWhen","t":"def releaseWhen(trigger: $[Done]): $[A]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"resumeWhen","t":"def resumeWhen(trigger: $[Ping]): $[A]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"select","t":"def select[A, B](implicit A: Negative[A], B: Negative[B]): A |*| B |&| A |*| B -⚬ A |*| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"select","t":"def select[Z, A : Negative, B : Negative](caseFstWins: Z -⚬ A |*| B, caseSndWins: Z -⚬ A |*| B): Z -⚬ A |*| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"selectAgainstL","t":"def selectAgainstL[A](implicit A: Negative[A]): A |&| A -⚬ Need |*| A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"selectAgainstR","t":"def selectAgainstR[A](implicit A: Negative[A]): A |&| A -⚬ A |*| Need","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"selectBy","t":"def selectBy[A, B](notifyA: Pong |*| A -⚬ A, notifyB: Pong |*| B -⚬ B): A |*| B |&| A |*| B -⚬ A |*| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"selectNeed","t":"def selectNeed: Need |&| Need -⚬ Need |*| Need","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"selectSignaledOrNot","t":"def selectSignaledOrNot[A](implicit A: Negative[A]): A |&| A -⚬ A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"selectWithL","t":"def selectWithL[Z, X, A : Negative, B : Negative](caseFstWins: Z -⚬ X |*| A |*| B, caseSndWins: Z -⚬ X |*| A |*| B): Z -⚬ X |*| A |*| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"selectWithR","t":"def selectWithR[Z, A : Negative, B : Negative, Y](caseFstWins: Z -⚬ A |*| B |*| Y, caseSndWins: Z -⚬ A |*| B |*| Y): Z -⚬ A |*| B |*| Y","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"sequence","t":"def sequence[A : Positive, B : Positive]: A |*| B -⚬ A |*| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"sequence","t":"def sequence(b: $[B])(implicit A: Positive[A], B: Positive[B]): $[A |*| B]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"sequence","t":"def sequence(f: Done -⚬ B)(implicit A: Positive[A]): $[A |*| B]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"sequenceAfter","t":"def sequenceAfter(b: $[B])(implicit A: Positive[A], B: Positive[B]): $[A |*| B]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"sequence_NN","t":"def sequence_NN[A, B](using A: Negative[A], B: Negative[B]): A |*| B -⚬ A |*| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"sequence_NP","t":"def sequence_NP[A, B](using A: Negative[A], B: Positive[B]): A |*| B -⚬ A |*| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"sequence_PN","t":"def sequence_PN[A, B](using A: Positive[A], B: Negative[B]): A |*| B -⚬ A |*| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"sequence_PP","t":"def sequence_PP[A, B](using A: Positive[A], B: Positive[B]): A |*| B -⚬ A |*| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"signalDone","t":"def signalDone[A](using A: Positive[A]): A -⚬ A |*| Done","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"signalNegFst","t":"def signalNegFst[A](using A: Negative[A]): Need |*| A -⚬ A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"signalNegSnd","t":"def signalNegSnd[A](using A: Negative[A]): A |*| Need -⚬ A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"signalPosFst","t":"def signalPosFst[A](using A: Positive[A]): A -⚬ Done |*| A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"signalPosSnd","t":"def signalPosSnd[A](using A: Positive[A]): A -⚬ A |*| Done","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"sndFunctor","t":"def sndFunctor[A]: Transportive[[x] =>> A |*| x]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"split","t":"def split[A : Cosemigroup]: A -⚬ A |*| A","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"splitMap","t":"def splitMap[A : Cosemigroup, B, C](f: A -⚬ B, g: A -⚬ C): A -⚬ B |*| C","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"subordinateFst","t":"def subordinateFst[A, B, C, D]: A |*| B |&| C |*| D -⚬ A |+| C |*| B |&| D","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"subordinateSnd","t":"def subordinateSnd[A, B, C, D]: A |*| B |&| C |*| D -⚬ A |&| C |*| B |+| D","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"testBy","t":"def testBy[A, B, K : Positive](aKey: Getter[A, K], bKey: Getter[B, K], pred: K |*| K -⚬ Bool): A |*| B -⚬ A |*| B |+| A |*| B","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"waitFor","t":"def waitFor(b: $[Done])(implicit A: Positive[A]): $[A]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"when","t":"def when[A](trigger: $[Done])(f: Done -⚬ A): $[A]","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib.html","n":"ΛI","t":"def ΛI[A, B, C, D](f: A -⚬ B |*| C): A |*| D -⚬ B |*| C |*| D","d":"libretto/CoreLib","k":"def"},
{"l":"libretto/CoreLib$AcquiredLock$.html","n":"AcquiredLock","t":"object AcquiredLock","d":"libretto/CoreLib$AcquiredLock$","k":"object"},
{"l":"libretto/CoreLib$AcquiredLock$.html","n":"acquisition","t":"val acquisition: Positive[AcquiredLock]","d":"libretto/CoreLib$AcquiredLock$","k":"val"},
{"l":"libretto/CoreLib$AcquiredLock$.html","n":"deferAcquisition","t":"def deferAcquisition: Ping |*| AcquiredLock -⚬ AcquiredLock","d":"libretto/CoreLib$AcquiredLock$","k":"def"},
{"l":"libretto/CoreLib$AcquiredLock$.html","n":"deferRelease","t":"def deferRelease: Ping |*| AcquiredLock -⚬ AcquiredLock","d":"libretto/CoreLib$AcquiredLock$","k":"def"},
{"l":"libretto/CoreLib$AcquiredLock$.html","n":"detainAcquisition","t":"def detainAcquisition: Done |*| AcquiredLock -⚬ AcquiredLock","d":"libretto/CoreLib$AcquiredLock$","k":"def"},
{"l":"libretto/CoreLib$AcquiredLock$.html","n":"detainRelease","t":"def detainRelease: Done |*| AcquiredLock -⚬ AcquiredLock","d":"libretto/CoreLib$AcquiredLock$","k":"def"},
{"l":"libretto/CoreLib$AcquiredLock$.html","n":"notifyAcquisition","t":"def notifyAcquisition: AcquiredLock -⚬ Ping |*| AcquiredLock","d":"libretto/CoreLib$AcquiredLock$","k":"def"},
{"l":"libretto/CoreLib$AcquiredLock$.html","n":"release","t":"def release: AcquiredLock -⚬ Lock","d":"libretto/CoreLib$AcquiredLock$","k":"def"},
{"l":"libretto/CoreLib$Affine$.html","n":"Affine","t":"object Affine","d":"libretto/CoreLib$Affine$","k":"object"},
{"l":"libretto/CoreLib$Affine$.html","n":"affinePair","t":"def affinePair[A, B](implicit A: Affine[A], B: Affine[B]): Affine[A |*| B]","d":"libretto/CoreLib$Affine$","k":"def"},
{"l":"libretto/CoreLib$Affine$.html","n":"from","t":"def from[A](f: A -⚬ One): Affine[A]","d":"libretto/CoreLib$Affine$","k":"def"},
{"l":"libretto/CoreLib$Affine$.html","n":"fromNAffine","t":"def fromNAffine[A](implicit A: NAffine[A]): Affine[A]","d":"libretto/CoreLib$Affine$","k":"def"},
{"l":"libretto/CoreLib$Affine.html","n":"Affine","t":"trait Affine[A]","d":"libretto/CoreLib$Affine","k":"trait"},
{"l":"libretto/CoreLib$Affine.html","n":"discard","t":"def discard: A -⚬ One","d":"libretto/CoreLib$Affine","k":"def"},
{"l":"libretto/CoreLib$BiExternalizer.html","n":"BiExternalizer","t":"trait BiExternalizer[F[_, _]]","d":"libretto/CoreLib$BiExternalizer","k":"trait"},
{"l":"libretto/CoreLib$BiExternalizer.html","n":"fst","t":"def fst[B]: Externalizer[F]","d":"libretto/CoreLib$BiExternalizer","k":"def"},
{"l":"libretto/CoreLib$BiExternalizer.html","n":"lift","t":"def lift[A, B, C, D](f: A -⚬ B, g: C -⚬ D): F[A, C] => F[B, D]","d":"libretto/CoreLib$BiExternalizer","k":"def"},
{"l":"libretto/CoreLib$BiExternalizer.html","n":"snd","t":"def snd[A]: Externalizer[[_] =>> F[A, _$27]]","d":"libretto/CoreLib$BiExternalizer","k":"def"},
{"l":"libretto/CoreLib$Bifunctor$.html","n":"Bifunctor","t":"object Bifunctor","d":"libretto/CoreLib$Bifunctor$","k":"object"},
{"l":"libretto/CoreLib$Bifunctor$.html","n":"apply","t":"def apply[F[_, _]](implicit ev: Bifunctor[F]): Bifunctor[F]","d":"libretto/CoreLib$Bifunctor$","k":"def"},
{"l":"libretto/CoreLib$Bifunctor$.html","n":"pair","t":"val pair: Bifunctor[|*|]","d":"libretto/CoreLib$Bifunctor$","k":"val"},
{"l":"libretto/CoreLib$Bifunctor.html","n":"Bifunctor","t":"trait Bifunctor[F[_, _]]","d":"libretto/CoreLib$Bifunctor","k":"trait"},
{"l":"libretto/CoreLib$Bifunctor.html","n":"fst","t":"def fst[B]: Functor[F]","d":"libretto/CoreLib$Bifunctor","k":"def"},
{"l":"libretto/CoreLib$Bifunctor.html","n":"inside","t":"def inside[G[_]](implicit G: Functor[G]): Bifunctor[[x, y] =>> G[F[x, y]]]","d":"libretto/CoreLib$Bifunctor","k":"def"},
{"l":"libretto/CoreLib$Bifunctor.html","n":"lift","t":"def lift[A, B, C, D](f: A -⚬ B, g: C -⚬ D): F[A, C] -⚬ F[B, D]","d":"libretto/CoreLib$Bifunctor","k":"def"},
{"l":"libretto/CoreLib$Bifunctor.html","n":"snd","t":"def snd[A]: Functor[[_] =>> F[A, _$12]]","d":"libretto/CoreLib$Bifunctor","k":"def"},
{"l":"libretto/CoreLib$BimapSyntax.html","n":"BimapSyntax","t":"class BimapSyntax[F[_, _], A, B](self: A -⚬ B)","d":"libretto/CoreLib$BimapSyntax","k":"class"},
{"l":"libretto/CoreLib$BimapSyntax.html","n":"apply","t":"def apply[B1, B2, C, D](f: B1 -⚬ C, g: B2 -⚬ D)(implicit ev: B =:= F[B1, B2], F: Bifunctor[F]): A -⚬ F[C, D]","d":"libretto/CoreLib$BimapSyntax","k":"def"},
{"l":"libretto/CoreLib$Bool$.html","n":"Bool","t":"object Bool","d":"libretto/CoreLib$Bool$","k":"object"},
{"l":"libretto/CoreLib$Bool$.html","n":"constFalse","t":"val constFalse: Done -⚬ Bool","d":"libretto/CoreLib$Bool$","k":"val"},
{"l":"libretto/CoreLib$Bool$.html","n":"constTrue","t":"val constTrue: Done -⚬ Bool","d":"libretto/CoreLib$Bool$","k":"val"},
{"l":"libretto/CoreLib$Bool$.html","n":"ifThenElse","t":"def ifThenElse[A, B, C](ifTrue: Done |*| A -⚬ B, ifFalse: Done |*| A -⚬ C): Bool |*| A -⚬ B |+| C","d":"libretto/CoreLib$Bool$","k":"def"},
{"l":"libretto/CoreLib$Bool$.html","n":"switch","t":"def switch[R](caseTrue: Done -⚬ R, caseFalse: Done -⚬ R): Bool -⚬ R","d":"libretto/CoreLib$Bool$","k":"def"},
{"l":"libretto/CoreLib$Bool$.html","n":"switchWithL","t":"def switchWithL[A, R](caseTrue: A |*| Done -⚬ R, caseFalse: A |*| Done -⚬ R): A |*| Bool -⚬ R","d":"libretto/CoreLib$Bool$","k":"def"},
{"l":"libretto/CoreLib$Bool$.html","n":"switchWithR","t":"def switchWithR[A, R](caseTrue: Done |*| A -⚬ R, caseFalse: Done |*| A -⚬ R): Bool |*| A -⚬ R","d":"libretto/CoreLib$Bool$","k":"def"},
{"l":"libretto/CoreLib$Comonad.html","n":"Comonad","t":"trait Comonad[F[_]]","d":"libretto/CoreLib$Comonad","k":"trait"},
{"l":"libretto/CoreLib$Comonad.html","n":"duplicate","t":"def duplicate[A]: F[A] -⚬ F[F[A]]","d":"libretto/CoreLib$Comonad","k":"def"},
{"l":"libretto/CoreLib$Comonad.html","n":"extract","t":"def extract[A]: F[A] -⚬ A","d":"libretto/CoreLib$Comonad","k":"def"},
{"l":"libretto/CoreLib$Comonoid$.html","n":"Comonoid","t":"object Comonoid","d":"libretto/CoreLib$Comonoid$","k":"object"},
{"l":"libretto/CoreLib$Comonoid$.html","n":"comonoidNeed","t":"val comonoidNeed: Comonoid[Need]","d":"libretto/CoreLib$Comonoid$","k":"val"},
{"l":"libretto/CoreLib$Comonoid$.html","n":"comonoidOne","t":"val comonoidOne: Comonoid[One]","d":"libretto/CoreLib$Comonoid$","k":"val"},
{"l":"libretto/CoreLib$Comonoid$.html","n":"comonoidPong","t":"val comonoidPong: Comonoid[Pong]","d":"libretto/CoreLib$Comonoid$","k":"val"},
{"l":"libretto/CoreLib$Comonoid.html","n":"Comonoid","t":"trait Comonoid[A] extends Cosemigroup[A] with Affine[A]","d":"libretto/CoreLib$Comonoid","k":"trait"},
{"l":"libretto/CoreLib$Comonoid.html","n":"counit","t":"def counit: A -⚬ One","d":"libretto/CoreLib$Comonoid","k":"def"},
{"l":"libretto/CoreLib$Comonoid.html","n":"law_leftCounit","t":"def law_leftCounit: Equal[A -⚬ One |*| A]","d":"libretto/CoreLib$Comonoid","k":"def"},
{"l":"libretto/CoreLib$Comonoid.html","n":"law_rightCounit","t":"def law_rightCounit: Equal[A -⚬ A |*| One]","d":"libretto/CoreLib$Comonoid","k":"def"},
{"l":"libretto/CoreLib$Comparable.html","n":"Comparable","t":"trait Comparable[A, B]","d":"libretto/CoreLib$Comparable","k":"trait"},
{"l":"libretto/CoreLib$Comparable.html","n":"compare","t":"def compare: A |*| B -⚬ Compared[A, B]","d":"libretto/CoreLib$Comparable","k":"def"},
{"l":"libretto/CoreLib$Comparable.html","n":"contramap","t":"def contramap[S, T](f: Getter[S, A], g: Getter[T, B])(implicit A: PComonoid[A], B: PComonoid[B], AJ: Positive[A], BJ: Positive[B]): Comparable[S, T]","d":"libretto/CoreLib$Comparable","k":"def"},
{"l":"libretto/CoreLib$Compared$.html","n":"Compared","t":"object Compared","d":"libretto/CoreLib$Compared$","k":"object"},
{"l":"libretto/CoreLib$Compared$.html","n":"Compared","t":"type Compared[A, B]","d":"libretto/CoreLib$Compared$","k":"type"},
{"l":"libretto/CoreLib$Compared$.html","n":"bifunctorCompared","t":"def bifunctorCompared: Bifunctor[Compared]","d":"libretto/CoreLib$Compared$","k":"def"},
{"l":"libretto/CoreLib$Compared$.html","n":"compared","t":"def compared[A, B, C](caseLt: A |*| B -⚬ C, caseEq: A |*| B -⚬ C, caseGt: A |*| B -⚬ C): Compared[A, B] -⚬ C","d":"libretto/CoreLib$Compared$","k":"def"},
{"l":"libretto/CoreLib$Compared$.html","n":"elimWith","t":"def elimWith[A, B, C, D](caseLt: A |*| B |*| C -⚬ D, caseEq: A |*| B |*| C -⚬ D, caseGt: A |*| B |*| C -⚬ D): Compared[A, B] |*| C -⚬ D","d":"libretto/CoreLib$Compared$","k":"def"},
{"l":"libretto/CoreLib$Compared$.html","n":"enrichWith","t":"def enrichWith[A, B, C, S, T](f: A |*| B |*| C -⚬ S |*| T): Compared[A, B] |*| C -⚬ Compared[S, T]","d":"libretto/CoreLib$Compared$","k":"def"},
{"l":"libretto/CoreLib$Compared$.html","n":"equiv","t":"def equiv[A, B]: A |*| B -⚬ Compared[A, B]","d":"libretto/CoreLib$Compared$","k":"def"},
{"l":"libretto/CoreLib$Compared$.html","n":"gt","t":"def gt[A, B]: A |*| B -⚬ Compared[A, B]","d":"libretto/CoreLib$Compared$","k":"def"},
{"l":"libretto/CoreLib$Compared$.html","n":"lt","t":"def lt[A, B]: A |*| B -⚬ Compared[A, B]","d":"libretto/CoreLib$Compared$","k":"def"},
{"l":"libretto/CoreLib$ContraExternalizer$.html","n":"ContraExternalizer","t":"object ContraExternalizer","d":"libretto/CoreLib$ContraExternalizer$","k":"object"},
{"l":"libretto/CoreLib$ContraExternalizer$.html","n":"inportInstance","t":"def inportInstance[C]: ContraExternalizer[-⚬]","d":"libretto/CoreLib$ContraExternalizer$","k":"def"},
{"l":"libretto/CoreLib$ContraExternalizer.html","n":"ContraExternalizer","t":"trait ContraExternalizer[F[_]]","d":"libretto/CoreLib$ContraExternalizer","k":"trait"},
{"l":"libretto/CoreLib$ContraExternalizer.html","n":"lift","t":"def lift[A, B](f: A -⚬ B): F[B] => F[A]","d":"libretto/CoreLib$ContraExternalizer","k":"def"},
{"l":"libretto/CoreLib$ContraExternalizer.html","n":"∘","t":"def ∘[G[_]](that: Functor[G]): ContraExternalizer[[x] =>> F[G[x]]]","d":"libretto/CoreLib$ContraExternalizer","k":"def"},
{"l":"libretto/CoreLib$ContraExternalizer.html","n":"∘","t":"def ∘[G[_]](that: ContraFunctor[G]): Externalizer[[x] =>> F[G[x]]]","d":"libretto/CoreLib$ContraExternalizer","k":"def"},
{"l":"libretto/CoreLib$ContraFunctor.html","n":"ContraFunctor","t":"trait ContraFunctor[F[_]]","d":"libretto/CoreLib$ContraFunctor","k":"trait"},
{"l":"libretto/CoreLib$ContraFunctor.html","n":"lift","t":"def lift[A, B](f: A -⚬ B): F[B] -⚬ F[A]","d":"libretto/CoreLib$ContraFunctor","k":"def"},
{"l":"libretto/CoreLib$ContraFunctor.html","n":"∘","t":"def ∘[G[_]](that: Functor[G]): ContraFunctor[[x] =>> F[G[x]]]","d":"libretto/CoreLib$ContraFunctor","k":"def"},
{"l":"libretto/CoreLib$ContraFunctor.html","n":"∘","t":"def ∘[G[_]](that: ContraFunctor[G]): Functor[[x] =>> F[G[x]]]","d":"libretto/CoreLib$ContraFunctor","k":"def"},
{"l":"libretto/CoreLib$Cosemigroup$.html","n":"Cosemigroup","t":"object Cosemigroup","d":"libretto/CoreLib$Cosemigroup$","k":"object"},
{"l":"libretto/CoreLib$Cosemigroup$.html","n":"cosemigroupDone","t":"val cosemigroupDone: Cosemigroup[Done]","d":"libretto/CoreLib$Cosemigroup$","k":"val"},
{"l":"libretto/CoreLib$Cosemigroup$.html","n":"cosemigroupNeed","t":"val cosemigroupNeed: Cosemigroup[Need]","d":"libretto/CoreLib$Cosemigroup$","k":"val"},
{"l":"libretto/CoreLib$Cosemigroup$.html","n":"cosemigroupPing","t":"val cosemigroupPing: Cosemigroup[Ping]","d":"libretto/CoreLib$Cosemigroup$","k":"val"},
{"l":"libretto/CoreLib$Cosemigroup$.html","n":"cosemigroupPong","t":"val cosemigroupPong: Cosemigroup[Pong]","d":"libretto/CoreLib$Cosemigroup$","k":"val"},
{"l":"libretto/CoreLib$Cosemigroup.html","n":"Cosemigroup","t":"trait Cosemigroup[A]","d":"libretto/CoreLib$Cosemigroup","k":"trait"},
{"l":"libretto/CoreLib$Cosemigroup.html","n":"law_coAssociativity","t":"def law_coAssociativity: Equal[A -⚬ A |*| A |*| A]","d":"libretto/CoreLib$Cosemigroup","k":"def"},
{"l":"libretto/CoreLib$Cosemigroup.html","n":"split","t":"def split: A -⚬ A |*| A","d":"libretto/CoreLib$Cosemigroup","k":"def"},
{"l":"libretto/CoreLib$Deferrable$.html","n":"Deferrable","t":"object Deferrable","d":"libretto/CoreLib$Deferrable$","k":"object"},
{"l":"libretto/CoreLib$Deferrable$.html","n":"invert","t":"def invert[A](d: Positive[A]): Negative[A]","d":"libretto/CoreLib$Deferrable$","k":"def"},
{"l":"libretto/CoreLib$Deferrable$.html","n":"invert","t":"def invert[A](d: Negative[A]): Positive[A]","d":"libretto/CoreLib$Deferrable$","k":"def"},
{"l":"libretto/CoreLib$Deferrable$$Negative$.html","n":"Negative","t":"object Negative","d":"libretto/CoreLib$Deferrable$$Negative$","k":"object"},
{"l":"libretto/CoreLib$Deferrable$$Negative$.html","n":"byFst","t":"def byFst[A, B](implicit A: Negative[A]): Negative[A |*| B]","d":"libretto/CoreLib$Deferrable$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Deferrable$$Negative$.html","n":"bySnd","t":"def bySnd[A, B](implicit B: Negative[B]): Negative[A |*| B]","d":"libretto/CoreLib$Deferrable$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Deferrable$$Negative$.html","n":"deferrableNeed","t":"def deferrableNeed: Negative[Need]","d":"libretto/CoreLib$Deferrable$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Deferrable$$Negative$.html","n":"deferrablePong","t":"def deferrablePong: Negative[Pong]","d":"libretto/CoreLib$Deferrable$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Deferrable$$Negative$.html","n":"from","t":"def from[A](f: A -⚬ Pong |*| A): Negative[A]","d":"libretto/CoreLib$Deferrable$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Deferrable$$Negative.html","n":"Negative","t":"trait Negative[A]","d":"libretto/CoreLib$Deferrable$$Negative","k":"trait"},
{"l":"libretto/CoreLib$Deferrable$$Negative.html","n":"awaitPong","t":"def awaitPong: A -⚬ Pong |*| A","d":"libretto/CoreLib$Deferrable$$Negative","k":"def"},
{"l":"libretto/CoreLib$Deferrable$$Negative.html","n":"awaitPongFst","t":"def awaitPongFst: A -⚬ Pong |*| A","d":"libretto/CoreLib$Deferrable$$Negative","k":"def"},
{"l":"libretto/CoreLib$Deferrable$$Negative.html","n":"awaitPongSnd","t":"def awaitPongSnd: A -⚬ A |*| Pong","d":"libretto/CoreLib$Deferrable$$Negative","k":"def"},
{"l":"libretto/CoreLib$Deferrable$$Negative.html","n":"defer","t":"def defer: A -⚬ Deferred[A]","d":"libretto/CoreLib$Deferrable$$Negative","k":"def"},
{"l":"libretto/CoreLib$Deferrable$$Negative.html","n":"law_awaitPongComposition","t":"def law_awaitPongComposition: Equal[A -⚬ Pong |*| Pong |*| A]","d":"libretto/CoreLib$Deferrable$$Negative","k":"def"},
{"l":"libretto/CoreLib$Deferrable$$Negative.html","n":"law_awaitPongIdentity","t":"def law_awaitPongIdentity: Equal[A -⚬ One |*| A]","d":"libretto/CoreLib$Deferrable$$Negative","k":"def"},
{"l":"libretto/CoreLib$Deferrable$$Positive$.html","n":"Positive","t":"object Positive","d":"libretto/CoreLib$Deferrable$$Positive$","k":"object"},
{"l":"libretto/CoreLib$Deferrable$$Positive$.html","n":"byFst","t":"def byFst[A, B](implicit A: Positive[A]): Positive[A |*| B]","d":"libretto/CoreLib$Deferrable$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Deferrable$$Positive$.html","n":"bySnd","t":"def bySnd[A, B](implicit B: Positive[B]): Positive[A |*| B]","d":"libretto/CoreLib$Deferrable$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Deferrable$$Positive$.html","n":"deferrableDone","t":"def deferrableDone: Positive[Done]","d":"libretto/CoreLib$Deferrable$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Deferrable$$Positive$.html","n":"deferrablePing","t":"def deferrablePing: Positive[Ping]","d":"libretto/CoreLib$Deferrable$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Deferrable$$Positive$.html","n":"from","t":"def from[A](f: Ping |*| A -⚬ A): Positive[A]","d":"libretto/CoreLib$Deferrable$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Deferrable$$Positive.html","n":"Positive","t":"trait Positive[A]","d":"libretto/CoreLib$Deferrable$$Positive","k":"trait"},
{"l":"libretto/CoreLib$Deferrable$$Positive.html","n":"awaitPing","t":"def awaitPing: Ping |*| A -⚬ A","d":"libretto/CoreLib$Deferrable$$Positive","k":"def"},
{"l":"libretto/CoreLib$Deferrable$$Positive.html","n":"awaitPingFst","t":"def awaitPingFst: Ping |*| A -⚬ A","d":"libretto/CoreLib$Deferrable$$Positive","k":"def"},
{"l":"libretto/CoreLib$Deferrable$$Positive.html","n":"awaitPingSnd","t":"def awaitPingSnd: A |*| Ping -⚬ A","d":"libretto/CoreLib$Deferrable$$Positive","k":"def"},
{"l":"libretto/CoreLib$Deferrable$$Positive.html","n":"defer","t":"def defer: A -⚬ Deferred[A]","d":"libretto/CoreLib$Deferrable$$Positive","k":"def"},
{"l":"libretto/CoreLib$Deferrable$$Positive.html","n":"law_awaitPingComposition","t":"def law_awaitPingComposition: Equal[Ping |*| Ping |*| A -⚬ A]","d":"libretto/CoreLib$Deferrable$$Positive","k":"def"},
{"l":"libretto/CoreLib$Deferrable$$Positive.html","n":"law_awaitPingIdentity","t":"def law_awaitPingIdentity: Equal[One |*| A -⚬ A]","d":"libretto/CoreLib$Deferrable$$Positive","k":"def"},
{"l":"libretto/CoreLib$Deferred$.html","n":"Deferred","t":"object Deferred","d":"libretto/CoreLib$Deferred$","k":"object"},
{"l":"libretto/CoreLib$Deferred$.html","n":"apply","t":"def apply[A, B](f: Ping |*| A -⚬ B): A -⚬ Deferred[B]","d":"libretto/CoreLib$Deferred$","k":"def"},
{"l":"libretto/CoreLib$Deferred$.html","n":"deferrableDeferred","t":"def deferrableDeferred[A]: Negative[Deferred[A]]","d":"libretto/CoreLib$Deferred$","k":"def"},
{"l":"libretto/CoreLib$Deferred$.html","n":"forceResume","t":"def forceResume[A]: Deferred[A] -⚬ A","d":"libretto/CoreLib$Deferred$","k":"def"},
{"l":"libretto/CoreLib$Deferred$.html","n":"notifyResumeNeg","t":"def notifyResumeNeg[A]: Pong |*| Deferred[A] -⚬ Deferred[A]","d":"libretto/CoreLib$Deferred$","k":"def"},
{"l":"libretto/CoreLib$Deferred$.html","n":"notifyResumePos","t":"def notifyResumePos[A]: Deferred[A] -⚬ Ping |*| Deferred[A]","d":"libretto/CoreLib$Deferred$","k":"def"},
{"l":"libretto/CoreLib$Deferred$.html","n":"resumeBy","t":"def resumeBy[A]: Ping |*| Deferred[A] -⚬ A","d":"libretto/CoreLib$Deferred$","k":"def"},
{"l":"libretto/CoreLib$Deferred$.html","n":"signalingDeferred","t":"def signalingDeferred[A]: Negative[Deferred[A]]","d":"libretto/CoreLib$Deferred$","k":"def"},
{"l":"libretto/CoreLib$Deferred$.html","n":"thunk","t":"def thunk[A](f: Ping -⚬ A): One -⚬ Deferred[A]","d":"libretto/CoreLib$Deferred$","k":"def"},
{"l":"libretto/CoreLib$Deferred$.html","n":"untilPing","t":"def untilPing[A, B](f: Ping |*| A -⚬ B): A -⚬ Deferred[B]","d":"libretto/CoreLib$Deferred$","k":"def"},
{"l":"libretto/CoreLib$Deferred$.html","n":"untilPong","t":"def untilPong[A, B](f: A -⚬ Pong |*| B): A -⚬ Deferred[B]","d":"libretto/CoreLib$Deferred$","k":"def"},
{"l":"libretto/CoreLib$Detained$.html","n":"Detained","t":"object Detained","d":"libretto/CoreLib$Detained$","k":"object"},
{"l":"libretto/CoreLib$Detained$.html","n":"apply","t":"def apply[A, B](f: Done |*| A -⚬ B): A -⚬ Detained[B]","d":"libretto/CoreLib$Detained$","k":"def"},
{"l":"libretto/CoreLib$Detained$.html","n":"excludeFst","t":"def excludeFst[A, B]: Detained[A |*| B] -⚬ A |*| Detained[B]","d":"libretto/CoreLib$Detained$","k":"def"},
{"l":"libretto/CoreLib$Detained$.html","n":"excludeSnd","t":"def excludeSnd[A, B]: Detained[A |*| B] -⚬ Detained[A] |*| B","d":"libretto/CoreLib$Detained$","k":"def"},
{"l":"libretto/CoreLib$Detained$.html","n":"extendDetentionUntil","t":"def extendDetentionUntil[A]: Done |*| Detained[A] -⚬ Detained[A]","d":"libretto/CoreLib$Detained$","k":"def"},
{"l":"libretto/CoreLib$Detained$.html","n":"extendDetentionUntilNeed","t":"def extendDetentionUntilNeed[A]: Detained[A] -⚬ Need |*| Detained[A]","d":"libretto/CoreLib$Detained$","k":"def"},
{"l":"libretto/CoreLib$Detained$.html","n":"notifyReleaseNeg","t":"def notifyReleaseNeg[A]: Pong |*| Detained[A] -⚬ Detained[A]","d":"libretto/CoreLib$Detained$","k":"def"},
{"l":"libretto/CoreLib$Detained$.html","n":"notifyReleasePos","t":"def notifyReleasePos[A]: Detained[A] -⚬ Ping |*| Detained[A]","d":"libretto/CoreLib$Detained$","k":"def"},
{"l":"libretto/CoreLib$Detained$.html","n":"releaseAsap","t":"def releaseAsap[A]: Detained[A] -⚬ A","d":"libretto/CoreLib$Detained$","k":"def"},
{"l":"libretto/CoreLib$Detained$.html","n":"releaseBy","t":"def releaseBy[A]: Done |*| Detained[A] -⚬ A","d":"libretto/CoreLib$Detained$","k":"def"},
{"l":"libretto/CoreLib$Detained$.html","n":"signalingJunction","t":"def signalingJunction[A]: Negative[Detained[A]]","d":"libretto/CoreLib$Detained$","k":"def"},
{"l":"libretto/CoreLib$Detained$.html","n":"thunk","t":"def thunk[A](f: Done -⚬ A): One -⚬ Detained[A]","d":"libretto/CoreLib$Detained$","k":"def"},
{"l":"libretto/CoreLib$Detained$.html","n":"transportiveDetained","t":"def transportiveDetained: Transportive[Detained]","d":"libretto/CoreLib$Detained$","k":"def"},
{"l":"libretto/CoreLib$Detained$.html","n":"untilDone","t":"def untilDone[A, B](f: Done |*| A -⚬ B): A -⚬ Detained[B]","d":"libretto/CoreLib$Detained$","k":"def"},
{"l":"libretto/CoreLib$Detained$.html","n":"untilNeed","t":"def untilNeed[A, B](f: A -⚬ Need |*| B): A -⚬ Detained[B]","d":"libretto/CoreLib$Detained$","k":"def"},
{"l":"libretto/CoreLib$Dual$.html","n":"Dual","t":"object Dual","d":"libretto/CoreLib$Dual$","k":"object"},
{"l":"libretto/CoreLib$Dual$.html","n":"apply","t":"def apply[A, B](implicit ev: Dual[A, B]): Dual[A, B]","d":"libretto/CoreLib$Dual$","k":"def"},
{"l":"libretto/CoreLib$Dual.html","n":"Dual","t":"trait Dual[A, B]","d":"libretto/CoreLib$Dual","k":"trait"},
{"l":"libretto/CoreLib$Dual.html","n":"lInvert","t":"val lInvert: One -⚬ B |*| A","d":"libretto/CoreLib$Dual","k":"val"},
{"l":"libretto/CoreLib$Dual.html","n":"law_lr_id","t":"def law_lr_id: Equal[B -⚬ B]","d":"libretto/CoreLib$Dual","k":"def"},
{"l":"libretto/CoreLib$Dual.html","n":"law_rl_id","t":"def law_rl_id: Equal[A -⚬ A]","d":"libretto/CoreLib$Dual","k":"def"},
{"l":"libretto/CoreLib$Dual.html","n":"rInvert","t":"val rInvert: A |*| B -⚬ One","d":"libretto/CoreLib$Dual","k":"val"},
{"l":"libretto/CoreLib$Dual1.html","n":"Dual1","t":"trait Dual1[F[_], G[_]]","d":"libretto/CoreLib$Dual1","k":"trait"},
{"l":"libretto/CoreLib$Dual1.html","n":"apply","t":"def apply[A, Ā](ev: Dual[A, Ā]): Dual[F[A], G[Ā]]","d":"libretto/CoreLib$Dual1","k":"def"},
{"l":"libretto/CoreLib$Dual1.html","n":"lInvert","t":"def lInvert[A, Ā](lInvert: One -⚬ Ā |*| A): One -⚬ G[Ā] |*| F[A]","d":"libretto/CoreLib$Dual1","k":"def"},
{"l":"libretto/CoreLib$Dual1.html","n":"lInvertFlippedTArgs","t":"def lInvertFlippedTArgs: [Ā, A] => (lInvert: One -⚬ Ā |*| A) => One -⚬ G[Ā] |*| F[A]","d":"libretto/CoreLib$Dual1","k":"def"},
{"l":"libretto/CoreLib$Dual1.html","n":"lInvertVal","t":"val lInvertVal: [x, y] => (x$1: One -⚬ y |*| x) => One -⚬ G[y] |*| F[x]","d":"libretto/CoreLib$Dual1","k":"val"},
{"l":"libretto/CoreLib$Dual1.html","n":"rInvert","t":"def rInvert[A, Ā](rInvert: A |*| Ā -⚬ One): F[A] |*| G[Ā] -⚬ One","d":"libretto/CoreLib$Dual1","k":"def"},
{"l":"libretto/CoreLib$Dual1.html","n":"rInvertFlippedTAgs","t":"def rInvertFlippedTAgs: [Ā, A] => (rInvert: A |*| Ā -⚬ One) => F[A] |*| G[Ā] -⚬ One","d":"libretto/CoreLib$Dual1","k":"def"},
{"l":"libretto/CoreLib$Dual1.html","n":"rInvertVal","t":"val rInvertVal: [x, y] => (x$1: x |*| y -⚬ One) => F[x] |*| G[y] -⚬ One","d":"libretto/CoreLib$Dual1","k":"val"},
{"l":"libretto/CoreLib$Endless$.html","n":"Endless","t":"object Endless","d":"libretto/CoreLib$Endless$","k":"object"},
{"l":"libretto/CoreLib$Endless$.html","n":"close","t":"def close[A]: Endless[A] -⚬ One","d":"libretto/CoreLib$Endless$","k":"def"},
{"l":"libretto/CoreLib$Endless$.html","n":"comonoidEndless","t":"def comonoidEndless[A]: Comonoid[Endless[A]]","d":"libretto/CoreLib$Endless$","k":"def"},
{"l":"libretto/CoreLib$Endless$.html","n":"create","t":"def create[X, A](onClose: X -⚬ One, onPull: X -⚬ A |*| Endless[A]): X -⚬ Endless[A]","d":"libretto/CoreLib$Endless$","k":"def"},
{"l":"libretto/CoreLib$Endless$.html","n":"createWith","t":"def createWith[X, A, Y](onClose: X -⚬ Y, onPull: X -⚬ A |*| Endless[A] |*| Y): X -⚬ Endless[A] |*| Y","d":"libretto/CoreLib$Endless$","k":"def"},
{"l":"libretto/CoreLib$Endless$.html","n":"pull","t":"def pull[A]: Endless[A] -⚬ A |*| Endless[A]","d":"libretto/CoreLib$Endless$","k":"def"},
{"l":"libretto/CoreLib$Endless$.html","n":"signalingEndless","t":"def signalingEndless[A]: Negative[Endless[A]]","d":"libretto/CoreLib$Endless$","k":"def"},
{"l":"libretto/CoreLib$Endless$.html","n":"split","t":"def split[A]: Endless[A] -⚬ Endless[A] |*| Endless[A]","d":"libretto/CoreLib$Endless$","k":"def"},
{"l":"libretto/CoreLib$Endless$.html","n":"take","t":"def take[A](n: Int): Endless[A] -⚬ LList[A]","d":"libretto/CoreLib$Endless$","k":"def"},
{"l":"libretto/CoreLib$Endless$.html","n":"toUnlimited","t":"def toUnlimited[A]: Endless[A] -⚬ Unlimited[A]","d":"libretto/CoreLib$Endless$","k":"def"},
{"l":"libretto/CoreLib$Endless$.html","n":"unfold","t":"def unfold[S, A](f: S -⚬ A |*| S): S -⚬ Endless[A] |*| S","d":"libretto/CoreLib$Endless$","k":"def"},
{"l":"libretto/CoreLib$Externalizer$.html","n":"Externalizer","t":"object Externalizer","d":"libretto/CoreLib$Externalizer$","k":"object"},
{"l":"libretto/CoreLib$Externalizer$.html","n":"outportInstance","t":"def outportInstance[A]: Externalizer[[x] =>> A -⚬ x]","d":"libretto/CoreLib$Externalizer$","k":"def"},
{"l":"libretto/CoreLib$Externalizer.html","n":"Externalizer","t":"trait Externalizer[F[_]]","d":"libretto/CoreLib$Externalizer","k":"trait"},
{"l":"libretto/CoreLib$Externalizer.html","n":"lift","t":"def lift[A, B](f: A -⚬ B): F[A] => F[B]","d":"libretto/CoreLib$Externalizer","k":"def"},
{"l":"libretto/CoreLib$Externalizer.html","n":"∘","t":"def ∘[G[_]](that: Functor[G]): Externalizer[[x] =>> F[G[x]]]","d":"libretto/CoreLib$Externalizer","k":"def"},
{"l":"libretto/CoreLib$Externalizer.html","n":"∘","t":"def ∘[G[_]](that: ContraFunctor[G]): ContraExternalizer[[x] =>> F[G[x]]]","d":"libretto/CoreLib$Externalizer","k":"def"},
{"l":"libretto/CoreLib$Externalizer.html","n":"∘","t":"def ∘[G[_, _]](that: Bifunctor[G]): BiExternalizer[[x, y] =>> F[G[x, y]]]","d":"libretto/CoreLib$Externalizer","k":"def"},
{"l":"libretto/CoreLib$FocusedBi.html","n":"FocusedBi","t":"class FocusedBi[F[_, _], B1, B2](f: F[B1, B2])(F: BiExternalizer[F])","d":"libretto/CoreLib$FocusedBi","k":"class"},
{"l":"libretto/CoreLib$FocusedBi.html","n":"fst","t":"def fst: FocusedCo[F, B1]","d":"libretto/CoreLib$FocusedBi","k":"def"},
{"l":"libretto/CoreLib$FocusedBi.html","n":"map","t":"def map[C1, C2](g: B1 -⚬ C1, h: B2 -⚬ C2): F[C1, C2]","d":"libretto/CoreLib$FocusedBi","k":"def"},
{"l":"libretto/CoreLib$FocusedBi.html","n":"snd","t":"def snd: FocusedCo[[_] =>> F[B1, _$71], B2]","d":"libretto/CoreLib$FocusedBi","k":"def"},
{"l":"libretto/CoreLib$FocusedCo.html","n":"FocusedCo","t":"class FocusedCo[F[_], B](f: F[B])(implicit F: Externalizer[F])","d":"libretto/CoreLib$FocusedCo","k":"class"},
{"l":"libretto/CoreLib$FocusedCo.html","n":"apply","t":"def apply[C](g: B -⚬ C): F[C]","d":"libretto/CoreLib$FocusedCo","k":"def"},
{"l":"libretto/CoreLib$FocusedCo.html","n":"bi","t":"def bi[G[_, _]](implicit G: Bifunctor[G], U: Unapply2[B, G]): FocusedBi[[x, y] =>> F[G[x, y]], A, B]","d":"libretto/CoreLib$FocusedCo","k":"def"},
{"l":"libretto/CoreLib$FocusedCo.html","n":"co","t":"def co[G[_]](implicit G: Functor[G], U: Unapply[B, G]): FocusedCo[[x] =>> F[G[x]], A]","d":"libretto/CoreLib$FocusedCo","k":"def"},
{"l":"libretto/CoreLib$FocusedCo.html","n":"contra","t":"def contra[G[_]](implicit G: ContraFunctor[G], U: Unapply[B, G]): FocusedContra[[x] =>> F[G[x]], A]","d":"libretto/CoreLib$FocusedCo","k":"def"},
{"l":"libretto/CoreLib$FocusedCo.html","n":"injectL","t":"def injectL[C]: F[B |+| C]","d":"libretto/CoreLib$FocusedCo","k":"def"},
{"l":"libretto/CoreLib$FocusedCo.html","n":"injectR","t":"def injectR[C]: F[C |+| B]","d":"libretto/CoreLib$FocusedCo","k":"def"},
{"l":"libretto/CoreLib$FocusedCo.html","n":"map","t":"def map[C](g: B -⚬ C): F[C]","d":"libretto/CoreLib$FocusedCo","k":"def"},
{"l":"libretto/CoreLib$FocusedCo.html","n":"signalFst","t":"def signalFst(implicit B: Positive[B]): F[Done |*| B]","d":"libretto/CoreLib$FocusedCo","k":"def"},
{"l":"libretto/CoreLib$FocusedCo.html","n":"signalSnd","t":"def signalSnd(implicit B: Positive[B]): F[B |*| Done]","d":"libretto/CoreLib$FocusedCo","k":"def"},
{"l":"libretto/CoreLib$FocusedCo.html","n":"subst","t":"def subst[C](implicit ev: B =:= C): F[C]","d":"libretto/CoreLib$FocusedCo","k":"def"},
{"l":"libretto/CoreLib$FocusedCo.html","n":"unsubst","t":"def unsubst[C](implicit ev: C =:= B): F[C]","d":"libretto/CoreLib$FocusedCo","k":"def"},
{"l":"libretto/CoreLib$FocusedCo.html","n":"zoomCo","t":"def zoomCo[G[_], C](G: Functor[G])(implicit ev: B =:= G[C]): FocusedCo[[x] =>> F[G[x]], C]","d":"libretto/CoreLib$FocusedCo","k":"def"},
{"l":"libretto/CoreLib$FocusedCo.html","n":"zoomContra","t":"def zoomContra[G[_], C](G: ContraFunctor[G])(implicit ev: B =:= G[C]): FocusedContra[[x] =>> F[G[x]], C]","d":"libretto/CoreLib$FocusedCo","k":"def"},
{"l":"libretto/CoreLib$FocusedContra.html","n":"FocusedContra","t":"class FocusedContra[F[_], B](f: F[B])(implicit F: ContraExternalizer[F])","d":"libretto/CoreLib$FocusedContra","k":"class"},
{"l":"libretto/CoreLib$FocusedContra.html","n":"apply","t":"def apply[A](g: A -⚬ B): F[A]","d":"libretto/CoreLib$FocusedContra","k":"def"},
{"l":"libretto/CoreLib$FocusedContra.html","n":"co","t":"def co[G[_]](implicit G: Functor[G], U: Unapply[B, G]): FocusedContra[[x] =>> F[G[x]], A]","d":"libretto/CoreLib$FocusedContra","k":"def"},
{"l":"libretto/CoreLib$FocusedContra.html","n":"contra","t":"def contra[G[_]](implicit G: ContraFunctor[G], U: Unapply[B, G]): FocusedCo[[x] =>> F[G[x]], A]","d":"libretto/CoreLib$FocusedContra","k":"def"},
{"l":"libretto/CoreLib$FocusedContra.html","n":"contramap","t":"def contramap[A](g: A -⚬ B): F[A]","d":"libretto/CoreLib$FocusedContra","k":"def"},
{"l":"libretto/CoreLib$FocusedContra.html","n":"subst","t":"def subst[C](implicit ev: B =:= C): F[C]","d":"libretto/CoreLib$FocusedContra","k":"def"},
{"l":"libretto/CoreLib$FocusedContra.html","n":"unsubst","t":"def unsubst[C](implicit ev: C =:= B): F[C]","d":"libretto/CoreLib$FocusedContra","k":"def"},
{"l":"libretto/CoreLib$FocusedContra.html","n":"zoomCo","t":"def zoomCo[G[_], C](G: Functor[G])(implicit ev: B =:= G[C]): FocusedContra[[x] =>> F[G[x]], C]","d":"libretto/CoreLib$FocusedContra","k":"def"},
{"l":"libretto/CoreLib$FocusedContra.html","n":"zoomContra","t":"def zoomContra[G[_], C](G: ContraFunctor[G])(implicit ev: B =:= G[C]): FocusedCo[[x] =>> F[G[x]], C]","d":"libretto/CoreLib$FocusedContra","k":"def"},
{"l":"libretto/CoreLib$FocusedOnChoiceCo.html","n":"FocusedOnChoiceCo","t":"class FocusedOnChoiceCo[F[_], B1, B2](f: FocusedCo[F, B1 |&| B2])","d":"libretto/CoreLib$FocusedOnChoiceCo","k":"class"},
{"l":"libretto/CoreLib$FocusedOnChoiceCo.html","n":"assocLR","t":"def assocLR[X, Y](implicit ev: B1 =:= X |&| Y): F[X |&| Y |&| B2]","d":"libretto/CoreLib$FocusedOnChoiceCo","k":"def"},
{"l":"libretto/CoreLib$FocusedOnChoiceCo.html","n":"assocRL","t":"def assocRL[X, Y](implicit ev: B2 =:= X |&| Y): F[B1 |&| X |&| Y]","d":"libretto/CoreLib$FocusedOnChoiceCo","k":"def"},
{"l":"libretto/CoreLib$FocusedOnChoiceCo.html","n":"choiceL","t":"def choiceL: FocusedCo[[x] =>> F[x |&| B2], B1]","d":"libretto/CoreLib$FocusedOnChoiceCo","k":"def"},
{"l":"libretto/CoreLib$FocusedOnChoiceCo.html","n":"choiceR","t":"def choiceR: FocusedCo[[x] =>> F[B1 |&| x], B2]","d":"libretto/CoreLib$FocusedOnChoiceCo","k":"def"},
{"l":"libretto/CoreLib$FocusedOnChoiceContra.html","n":"FocusedOnChoiceContra","t":"class FocusedOnChoiceContra[A, F[_], B1, B2](f: FocusedContra[F, B1 |&| B2])","d":"libretto/CoreLib$FocusedOnChoiceContra","k":"class"},
{"l":"libretto/CoreLib$FocusedOnChoiceContra.html","n":"choiceL","t":"def choiceL: FocusedContra[[x] =>> F[x |&| B2], B1]","d":"libretto/CoreLib$FocusedOnChoiceContra","k":"def"},
{"l":"libretto/CoreLib$FocusedOnChoiceContra.html","n":"choiceR","t":"def choiceR: FocusedContra[[x] =>> F[B1 |&| x], B2]","d":"libretto/CoreLib$FocusedOnChoiceContra","k":"def"},
{"l":"libretto/CoreLib$FocusedOnDoneTimesCo.html","n":"FocusedOnDoneTimesCo","t":"class FocusedOnDoneTimesCo[F[_], B2](f: FocusedCo[F, Done |*| B2])(implicit j: Positive[B2])","d":"libretto/CoreLib$FocusedOnDoneTimesCo","k":"class"},
{"l":"libretto/CoreLib$FocusedOnDoneTimesCo.html","n":"awaitFst","t":"def awaitFst: F[B2]","d":"libretto/CoreLib$FocusedOnDoneTimesCo","k":"def"},
{"l":"libretto/CoreLib$FocusedOnPairCo.html","n":"FocusedOnPairCo","t":"class FocusedOnPairCo[F[_], B1, B2](f: FocusedCo[F, B1 |*| B2])","d":"libretto/CoreLib$FocusedOnPairCo","k":"class"},
{"l":"libretto/CoreLib$FocusedOnPairCo.html","n":"assocLR","t":"def assocLR[X, Y](implicit ev: B1 =:= X |*| Y): F[X |*| Y |*| B2]","d":"libretto/CoreLib$FocusedOnPairCo","k":"def"},
{"l":"libretto/CoreLib$FocusedOnPairCo.html","n":"assocRL","t":"def assocRL[X, Y](implicit ev: B2 =:= X |*| Y): F[B1 |*| X |*| Y]","d":"libretto/CoreLib$FocusedOnPairCo","k":"def"},
{"l":"libretto/CoreLib$FocusedOnPairCo.html","n":"awaitFst","t":"def awaitFst(neglect: B1 -⚬ Done)(implicit j: Positive[B2]): F[B2]","d":"libretto/CoreLib$FocusedOnPairCo","k":"def"},
{"l":"libretto/CoreLib$FocusedOnPairCo.html","n":"awaitSnd","t":"def awaitSnd(neglect: B2 -⚬ Done)(implicit j: Positive[B1]): F[B1]","d":"libretto/CoreLib$FocusedOnPairCo","k":"def"},
{"l":"libretto/CoreLib$FocusedOnPairCo.html","n":"fst","t":"def fst: FocusedCo[[x] =>> F[x |*| B2], B1]","d":"libretto/CoreLib$FocusedOnPairCo","k":"def"},
{"l":"libretto/CoreLib$FocusedOnPairCo.html","n":"snd","t":"def snd: FocusedCo[[x] =>> F[B1 |*| x], B2]","d":"libretto/CoreLib$FocusedOnPairCo","k":"def"},
{"l":"libretto/CoreLib$FocusedOnPairContra.html","n":"FocusedOnPairContra","t":"class FocusedOnPairContra[A, F[_], B1, B2](f: FocusedContra[F, B1 |*| B2])","d":"libretto/CoreLib$FocusedOnPairContra","k":"class"},
{"l":"libretto/CoreLib$FocusedOnPairContra.html","n":"fst","t":"def fst: FocusedContra[[x] =>> F[x |*| B2], B1]","d":"libretto/CoreLib$FocusedOnPairContra","k":"def"},
{"l":"libretto/CoreLib$FocusedOnPairContra.html","n":"snd","t":"def snd: FocusedContra[[x] =>> F[B1 |*| x], B2]","d":"libretto/CoreLib$FocusedOnPairContra","k":"def"},
{"l":"libretto/CoreLib$FocusedOnPlusCo.html","n":"FocusedOnPlusCo","t":"class FocusedOnPlusCo[F[_], B1, B2](f: FocusedCo[F, B1 |+| B2])","d":"libretto/CoreLib$FocusedOnPlusCo","k":"class"},
{"l":"libretto/CoreLib$FocusedOnPlusCo.html","n":"assocLR","t":"def assocLR[X, Y](implicit ev: B1 =:= X |+| Y): F[X |+| Y |+| B2]","d":"libretto/CoreLib$FocusedOnPlusCo","k":"def"},
{"l":"libretto/CoreLib$FocusedOnPlusCo.html","n":"assocRL","t":"def assocRL[X, Y](implicit ev: B2 =:= X |+| Y): F[B1 |+| X |+| Y]","d":"libretto/CoreLib$FocusedOnPlusCo","k":"def"},
{"l":"libretto/CoreLib$FocusedOnPlusCo.html","n":"left","t":"def left: FocusedCo[[x] =>> F[x |+| B2], B1]","d":"libretto/CoreLib$FocusedOnPlusCo","k":"def"},
{"l":"libretto/CoreLib$FocusedOnPlusCo.html","n":"right","t":"def right: FocusedCo[[x] =>> F[B1 |+| x], B2]","d":"libretto/CoreLib$FocusedOnPlusCo","k":"def"},
{"l":"libretto/CoreLib$FocusedOnPlusContra.html","n":"FocusedOnPlusContra","t":"class FocusedOnPlusContra[A, F[_], B1, B2](f: FocusedContra[F, B1 |+| B2])","d":"libretto/CoreLib$FocusedOnPlusContra","k":"class"},
{"l":"libretto/CoreLib$FocusedOnPlusContra.html","n":"left","t":"def left: FocusedContra[[x] =>> F[x |+| B2], B1]","d":"libretto/CoreLib$FocusedOnPlusContra","k":"def"},
{"l":"libretto/CoreLib$FocusedOnPlusContra.html","n":"right","t":"def right: FocusedContra[[x] =>> F[B1 |+| x], B2]","d":"libretto/CoreLib$FocusedOnPlusContra","k":"def"},
{"l":"libretto/CoreLib$FocusedOnTimesDoneCo.html","n":"FocusedOnTimesDoneCo","t":"class FocusedOnTimesDoneCo[F[_], B1](f: FocusedCo[F, B1 |*| Done])(implicit j: Positive[B1])","d":"libretto/CoreLib$FocusedOnTimesDoneCo","k":"class"},
{"l":"libretto/CoreLib$FocusedOnTimesDoneCo.html","n":"awaitSnd","t":"def awaitSnd: F[B1]","d":"libretto/CoreLib$FocusedOnTimesDoneCo","k":"def"},
{"l":"libretto/CoreLib$Functor$.html","n":"Functor","t":"object Functor","d":"libretto/CoreLib$Functor$","k":"object"},
{"l":"libretto/CoreLib$Functor$.html","n":"apply","t":"def apply[F[_]](implicit ev: Functor[F]): Functor[F]","d":"libretto/CoreLib$Functor$","k":"def"},
{"l":"libretto/CoreLib$Functor.html","n":"Functor","t":"trait Functor[F[_]]","d":"libretto/CoreLib$Functor","k":"trait"},
{"l":"libretto/CoreLib$Functor.html","n":"lift","t":"def lift[A, B](f: A -⚬ B): F[A] -⚬ F[B]","d":"libretto/CoreLib$Functor","k":"def"},
{"l":"libretto/CoreLib$Functor.html","n":"∘","t":"def ∘[G[_]](that: Functor[G]): Functor[[x] =>> F[G[x]]]","d":"libretto/CoreLib$Functor","k":"def"},
{"l":"libretto/CoreLib$Functor.html","n":"∘","t":"def ∘[G[_]](that: ContraFunctor[G]): ContraFunctor[[x] =>> F[G[x]]]","d":"libretto/CoreLib$Functor","k":"def"},
{"l":"libretto/CoreLib$Getter$.html","n":"Getter","t":"object Getter","d":"libretto/CoreLib$Getter$","k":"object"},
{"l":"libretto/CoreLib$Getter$.html","n":"identity","t":"def identity[A]: Getter[A, A]","d":"libretto/CoreLib$Getter$","k":"def"},
{"l":"libretto/CoreLib$Getter.html","n":"Getter","t":"trait Getter[S, A]","d":"libretto/CoreLib$Getter","k":"trait"},
{"l":"libretto/CoreLib$Getter.html","n":"andThen","t":"def andThen[B](that: Getter[A, B]): Getter[S, B]","d":"libretto/CoreLib$Getter","k":"def"},
{"l":"libretto/CoreLib$Getter.html","n":"awaitFst","t":"def awaitFst(implicit A: Positive[A]): Done |*| S -⚬ S","d":"libretto/CoreLib$Getter","k":"def"},
{"l":"libretto/CoreLib$Getter.html","n":"awaitSnd","t":"def awaitSnd(implicit A: Positive[A]): S |*| Done -⚬ S","d":"libretto/CoreLib$Getter","k":"def"},
{"l":"libretto/CoreLib$Getter.html","n":"compose","t":"def compose[T](that: Getter[T, S]): Getter[T, A]","d":"libretto/CoreLib$Getter","k":"def"},
{"l":"libretto/CoreLib$Getter.html","n":"extendJunction","t":"def extendJunction(implicit A: Positive[A]): Positive[S]","d":"libretto/CoreLib$Getter","k":"def"},
{"l":"libretto/CoreLib$Getter.html","n":"getL","t":"def getL[B](that: Getter[A, B])(implicit B: Cosemigroup[B]): S -⚬ B |*| S","d":"libretto/CoreLib$Getter","k":"def"},
{"l":"libretto/CoreLib$Getter.html","n":"getL","t":"def getL(implicit A: Cosemigroup[A]): S -⚬ A |*| S","d":"libretto/CoreLib$Getter","k":"def"},
{"l":"libretto/CoreLib$Getter.html","n":"getR","t":"def getR(implicit A: Cosemigroup[A]): S -⚬ S |*| A","d":"libretto/CoreLib$Getter","k":"def"},
{"l":"libretto/CoreLib$Getter.html","n":"|+|","t":"def |+|[T](that: Getter[T, A]): Getter[S |+| T, A]","d":"libretto/CoreLib$Getter","k":"def"},
{"l":"libretto/CoreLib$Junction$.html","n":"Junction","t":"object Junction","d":"libretto/CoreLib$Junction$","k":"object"},
{"l":"libretto/CoreLib$Junction$.html","n":"invert","t":"def invert[A](A: Positive[A]): Negative[A]","d":"libretto/CoreLib$Junction$","k":"def"},
{"l":"libretto/CoreLib$Junction$.html","n":"invert","t":"def invert[A](A: Negative[A]): Positive[A]","d":"libretto/CoreLib$Junction$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Negative$.html","n":"Negative","t":"object Negative","d":"libretto/CoreLib$Junction$$Negative$","k":"object"},
{"l":"libretto/CoreLib$Junction$$Negative$.html","n":"both","t":"def both[A, B](implicit A: Negative[A], B: Negative[B]): Negative[A |*| B]","d":"libretto/CoreLib$Junction$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Negative$.html","n":"byFst","t":"def byFst[A, B](implicit A: Negative[A]): Negative[A |*| B]","d":"libretto/CoreLib$Junction$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Negative$.html","n":"bySnd","t":"def bySnd[A, B](implicit B: Negative[B]): Negative[A |*| B]","d":"libretto/CoreLib$Junction$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Negative$.html","n":"delayChoice","t":"def delayChoice[A, B](implicit A: Negative[A], B: Negative[B]): Negative[A |&| B]","d":"libretto/CoreLib$Junction$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Negative$.html","n":"delayEither","t":"def delayEither[A, B](implicit A: Negative[A], B: Negative[B]): Negative[A |+| B]","d":"libretto/CoreLib$Junction$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Negative$.html","n":"delegateToChosen","t":"def delegateToChosen[A, B](implicit A: Negative[A], B: Negative[B]): Negative[A |&| B]","d":"libretto/CoreLib$Junction$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Negative$.html","n":"delegateToEither","t":"def delegateToEither[A, B](implicit A: Negative[A], B: Negative[B]): Negative[A |+| B]","d":"libretto/CoreLib$Junction$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Negative$.html","n":"from","t":"def from[A](await: A -⚬ Need |*| A): Negative[A]","d":"libretto/CoreLib$Junction$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Negative$.html","n":"junctionNeed","t":"def junctionNeed: Negative[Need]","d":"libretto/CoreLib$Junction$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Negative$.html","n":"rec","t":"def rec[F[_]](implicit F: Negative[F[Rec[F]]]): Negative[Rec[F]]","d":"libretto/CoreLib$Junction$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Negative$.html","n":"rec","t":"def rec[F[_]](implicit F: ForAll[[x] =>> Negative[F[x]]]): Negative[Rec[F]]","d":"libretto/CoreLib$Junction$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Negative$.html","n":"rec","t":"def rec[F[_]](f: Negative[Rec[F]] => Negative[F[Rec[F]]]): Negative[Rec[F]]","d":"libretto/CoreLib$Junction$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Negative.html","n":"Negative","t":"trait Negative[A] extends Negative[A]","d":"libretto/CoreLib$Junction$$Negative","k":"trait"},
{"l":"libretto/CoreLib$Junction$$Negative.html","n":"awaitNeg","t":"def awaitNeg: A -⚬ Need |*| A","d":"libretto/CoreLib$Junction$$Negative","k":"def"},
{"l":"libretto/CoreLib$Junction$$Negative.html","n":"awaitNegFst","t":"def awaitNegFst: A -⚬ Need |*| A","d":"libretto/CoreLib$Junction$$Negative","k":"def"},
{"l":"libretto/CoreLib$Junction$$Negative.html","n":"awaitNegSnd","t":"def awaitNegSnd: A -⚬ A |*| Need","d":"libretto/CoreLib$Junction$$Negative","k":"def"},
{"l":"libretto/CoreLib$Junction$$Negative.html","n":"detain","t":"def detain: A -⚬ Detained[A]","d":"libretto/CoreLib$Junction$$Negative","k":"def"},
{"l":"libretto/CoreLib$Junction$$Negative.html","n":"law_awaitComposition","t":"def law_awaitComposition: Equal[A -⚬ Need |*| Need |*| A]","d":"libretto/CoreLib$Junction$$Negative","k":"def"},
{"l":"libretto/CoreLib$Junction$$Negative.html","n":"law_awaitIdentity","t":"def law_awaitIdentity: Equal[A -⚬ One |*| A]","d":"libretto/CoreLib$Junction$$Negative","k":"def"},
{"l":"libretto/CoreLib$Junction$$Positive$.html","n":"Positive","t":"object Positive","d":"libretto/CoreLib$Junction$$Positive$","k":"object"},
{"l":"libretto/CoreLib$Junction$$Positive$.html","n":"both","t":"def both[A, B](implicit A: Positive[A], B: Positive[B]): Positive[A |*| B]","d":"libretto/CoreLib$Junction$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Positive$.html","n":"byFst","t":"def byFst[A, B](implicit A: Positive[A]): Positive[A |*| B]","d":"libretto/CoreLib$Junction$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Positive$.html","n":"bySnd","t":"def bySnd[A, B](implicit B: Positive[B]): Positive[A |*| B]","d":"libretto/CoreLib$Junction$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Positive$.html","n":"delayChoice","t":"def delayChoice[A, B](implicit A: Positive[A], B: Positive[B]): Positive[A |&| B]","d":"libretto/CoreLib$Junction$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Positive$.html","n":"delayEither","t":"def delayEither[A, B](implicit A: Positive[A], B: Positive[B]): Positive[A |+| B]","d":"libretto/CoreLib$Junction$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Positive$.html","n":"delegateToChosen","t":"def delegateToChosen[A, B](implicit A: Positive[A], B: Positive[B]): Positive[A |&| B]","d":"libretto/CoreLib$Junction$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Positive$.html","n":"delegateToEither","t":"def delegateToEither[A, B](implicit A: Positive[A], B: Positive[B]): Positive[A |+| B]","d":"libretto/CoreLib$Junction$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Positive$.html","n":"from","t":"def from[A](await: Done |*| A -⚬ A): Positive[A]","d":"libretto/CoreLib$Junction$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Positive$.html","n":"junctionDone","t":"def junctionDone: Positive[Done]","d":"libretto/CoreLib$Junction$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Positive$.html","n":"rec","t":"def rec[F[_]](implicit F: Positive[F[Rec[F]]]): Positive[Rec[F]]","d":"libretto/CoreLib$Junction$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Positive$.html","n":"rec","t":"def rec[F[_]](implicit F: ForAll[[x] =>> Positive[F[x]]]): Positive[Rec[F]]","d":"libretto/CoreLib$Junction$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Positive$.html","n":"rec","t":"def rec[F[_]](f: Positive[Rec[F]] => Positive[F[Rec[F]]]): Positive[Rec[F]]","d":"libretto/CoreLib$Junction$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Junction$$Positive.html","n":"Positive","t":"trait Positive[A] extends Positive[A]","d":"libretto/CoreLib$Junction$$Positive","k":"trait"},
{"l":"libretto/CoreLib$Junction$$Positive.html","n":"awaitPos","t":"def awaitPos: Done |*| A -⚬ A","d":"libretto/CoreLib$Junction$$Positive","k":"def"},
{"l":"libretto/CoreLib$Junction$$Positive.html","n":"awaitPosFst","t":"def awaitPosFst: Done |*| A -⚬ A","d":"libretto/CoreLib$Junction$$Positive","k":"def"},
{"l":"libretto/CoreLib$Junction$$Positive.html","n":"awaitPosSnd","t":"def awaitPosSnd: A |*| Done -⚬ A","d":"libretto/CoreLib$Junction$$Positive","k":"def"},
{"l":"libretto/CoreLib$Junction$$Positive.html","n":"detain","t":"def detain: A -⚬ Detained[A]","d":"libretto/CoreLib$Junction$$Positive","k":"def"},
{"l":"libretto/CoreLib$Junction$$Positive.html","n":"law_AwaitComposition","t":"def law_AwaitComposition: Equal[Done |*| Done |*| A -⚬ A]","d":"libretto/CoreLib$Junction$$Positive","k":"def"},
{"l":"libretto/CoreLib$Junction$$Positive.html","n":"law_awaitIdentity","t":"def law_awaitIdentity: Equal[One |*| A -⚬ A]","d":"libretto/CoreLib$Junction$$Positive","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"LList","t":"object LList","d":"libretto/CoreLib$LList$","k":"object"},
{"l":"libretto/CoreLib$LList$.html","n":"actOn","t":"def actOn[S, A](act: S |*| A -⚬ S): S |*| LList[A] -⚬ S","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"collect","t":"def collect[T, U](f: T -⚬ Maybe[U]): LList[T] -⚬ LList[U]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"concat","t":"def concat[T]: LList[T] |*| LList[T] -⚬ LList[T]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"cons","t":"def cons[T]: T |*| LList[T] -⚬ LList[T]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"consMaybe","t":"def consMaybe[T]: Maybe[T] |*| LList[T] -⚬ LList[T]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"fold","t":"def fold[T](implicit T: Monoid[T]): LList[T] -⚬ T","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"fold0","t":"def fold0[T](implicit T: Semigroup[T]): LList[T] -⚬ Maybe[T]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"foldL","t":"def foldL[S, T](f: S |*| T -⚬ S): S |*| LList[T] -⚬ S","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"foldMap","t":"def foldMap[T, U](f: T -⚬ U)(implicit U: Monoid[U]): LList[T] -⚬ U","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"foldMap0","t":"def foldMap0[T, U](f: T -⚬ U)(implicit U: Semigroup[U]): LList[T] -⚬ Maybe[U]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"fromList","t":"def fromList[S, T](fs: List[S -⚬ T])(using S: Comonoid[S]): S -⚬ LList[T]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"fromList0","t":"def fromList0[S, T](fs: List[S -⚬ T])(using S: Cosemigroup[S]): S -⚬ S |*| LList[T]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"fromListU","t":"def fromListU[S, T](fs: List[S -⚬ T]): Unlimited[S] -⚬ LList[T]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"halfRotateL","t":"def halfRotateL[A, B]: LList[A |*| B] -⚬ LList[B |*| A]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"insertBySignal","t":"def insertBySignal[T : Positive]: T |*| LList[T] -⚬ LList[T]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"map","t":"def map[T, U](f: T -⚬ U): LList[T] -⚬ LList[U]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"mapS","t":"def mapS[S, T, U](f: S |*| T -⚬ S |*| U): S |*| LList[T] -⚬ S |*| LList[U]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"mapSAppend","t":"def mapSAppend[S, T, U](f: S |*| T -⚬ S |*| U, tail: S -⚬ LList[U]): S |*| LList[T] -⚬ LList[U]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"merge","t":"def merge[T]: LList[T] |*| LList[T] -⚬ LList[T]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"monoidLList","t":"def monoidLList[A]: Monoid[LList[A]]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"nil","t":"def nil[T]: One -⚬ LList[T]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"of","t":"def of[S, T](fs: S -⚬ T*)(using S: Comonoid[S]): S -⚬ LList[T]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"signalingLList","t":"def signalingLList[T]: Positive[LList[T]]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"singleton","t":"def singleton[T]: T -⚬ LList[T]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"singletonOnSignal","t":"def singletonOnSignal[T](using T: Positive[T]): T -⚬ LList[T]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"sortBySignal","t":"def sortBySignal[T : Positive]: LList[T] -⚬ LList[T]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"splitEvenOdd","t":"def splitEvenOdd[A]: LList[A] -⚬ LList[A] |*| LList[A]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"switch","t":"def switch[T, R](caseNil: One -⚬ R, caseCons: T |*| LList[T] -⚬ R): LList[T] -⚬ R","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"switchWithL","t":"def switchWithL[A, T, R](caseNil: A -⚬ R, caseCons: A |*| T |*| LList[T] -⚬ R): A |*| LList[T] -⚬ R","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"switchWithR","t":"def switchWithR[A, T, R](caseNil: A -⚬ R, caseCons: T |*| LList[T] |*| A -⚬ R): LList[T] |*| A -⚬ R","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"transform","t":"def transform[T, A, U](f: A |*| T -⚬ U)(implicit A: Comonoid[A]): A |*| LList[T] -⚬ LList[U]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"transformCollect","t":"def transformCollect[T, A, U](f: A |*| T -⚬ Maybe[U])(implicit A: Comonoid[A]): A |*| LList[T] -⚬ LList[U]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"uncons","t":"def uncons[T]: LList[T] -⚬ Maybe[T |*| LList[T]]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList$.html","n":"unzip","t":"def unzip[A, B]: LList[A |*| B] -⚬ LList[A] |*| LList[B]","d":"libretto/CoreLib$LList$","k":"def"},
{"l":"libretto/CoreLib$LList1$.html","n":"LList1","t":"object LList1","d":"libretto/CoreLib$LList1$","k":"object"},
{"l":"libretto/CoreLib$LList1$.html","n":"apply","t":"def apply[T](x: $[T], xs: $[T]*): $[LList1[T]]","d":"libretto/CoreLib$LList1$","k":"def"},
{"l":"libretto/CoreLib$LList1$.html","n":"cons","t":"def cons[T]: T |*| LList[T] -⚬ LList1[T]","d":"libretto/CoreLib$LList1$","k":"def"},
{"l":"libretto/CoreLib$LList1$.html","n":"cons1","t":"def cons1[T]: T |*| LList1[T] -⚬ LList1[T]","d":"libretto/CoreLib$LList1$","k":"def"},
{"l":"libretto/CoreLib$LList1$.html","n":"fold","t":"def fold[T](using T: Semigroup[T]): LList1[T] -⚬ T","d":"libretto/CoreLib$LList1$","k":"def"},
{"l":"libretto/CoreLib$LList1$.html","n":"foldMap","t":"def foldMap[T, U](f: T -⚬ U)(using U: Semigroup[U]): LList1[T] -⚬ U","d":"libretto/CoreLib$LList1$","k":"def"},
{"l":"libretto/CoreLib$LList1$.html","n":"from","t":"def from[S, T](head: S -⚬ T, tail: List[S -⚬ T])(using S: Cosemigroup[S]): S -⚬ LList1[T]","d":"libretto/CoreLib$LList1$","k":"def"},
{"l":"libretto/CoreLib$LList1$.html","n":"from","t":"def from[S, T](fs: ::[S -⚬ T])(using S: Cosemigroup[S]): S -⚬ LList1[T]","d":"libretto/CoreLib$LList1$","k":"def"},
{"l":"libretto/CoreLib$LList1$.html","n":"fromExprList","t":"def fromExprList[T](h: $[T], t: List[$[T]]): $[LList1[T]]","d":"libretto/CoreLib$LList1$","k":"def"},
{"l":"libretto/CoreLib$LList1$.html","n":"halfRotateL","t":"def halfRotateL[A, B]: LList1[A |*| B] -⚬ LList1[B |*| A]","d":"libretto/CoreLib$LList1$","k":"def"},
{"l":"libretto/CoreLib$LList1$.html","n":"insertBySignal","t":"def insertBySignal[T : Positive]: T |*| LList[T] -⚬ LList1[T]","d":"libretto/CoreLib$LList1$","k":"def"},
{"l":"libretto/CoreLib$LList1$.html","n":"map","t":"def map[T, U](f: T -⚬ U): LList1[T] -⚬ LList1[U]","d":"libretto/CoreLib$LList1$","k":"def"},
{"l":"libretto/CoreLib$LList1$.html","n":"mapS","t":"def mapS[S, T, U](f: S |*| T -⚬ S |*| U): S |*| LList1[T] -⚬ S |*| LList1[U]","d":"libretto/CoreLib$LList1$","k":"def"},
{"l":"libretto/CoreLib$LList1$.html","n":"mapSAppend","t":"def mapSAppend[S, T, U](f: S |*| T -⚬ S |*| U, tail: S -⚬ LList[U]): S |*| LList1[T] -⚬ LList1[U]","d":"libretto/CoreLib$LList1$","k":"def"},
{"l":"libretto/CoreLib$LList1$.html","n":"of","t":"def of[S, T](head: S -⚬ T, tail: S -⚬ T*)(using S: Cosemigroup[S]): S -⚬ LList1[T]","d":"libretto/CoreLib$LList1$","k":"def"},
{"l":"libretto/CoreLib$LList1$.html","n":"singleton","t":"def singleton[T]: T -⚬ LList1[T]","d":"libretto/CoreLib$LList1$","k":"def"},
{"l":"libretto/CoreLib$LList1$.html","n":"switch","t":"def switch[T, R](case1: T -⚬ R, caseN: T |*| LList1[T] -⚬ R): LList1[T] -⚬ R","d":"libretto/CoreLib$LList1$","k":"def"},
{"l":"libretto/CoreLib$LList1$.html","n":"toLList","t":"def toLList[T]: LList1[T] -⚬ LList[T]","d":"libretto/CoreLib$LList1$","k":"def"},
{"l":"libretto/CoreLib$LList1$.html","n":"uncons","t":"def uncons[T]: LList1[T] -⚬ T |*| LList[T]","d":"libretto/CoreLib$LList1$","k":"def"},
{"l":"libretto/CoreLib$Lens$.html","n":"Lens","t":"object Lens","d":"libretto/CoreLib$Lens$","k":"object"},
{"l":"libretto/CoreLib$Lens$.html","n":"rec","t":"def rec[F[_]]: Lens[Rec[F], F[Rec[F]]]","d":"libretto/CoreLib$Lens$","k":"def"},
{"l":"libretto/CoreLib$Lens.html","n":"Lens","t":"trait Lens[S, A] extends Getter[S, A]","d":"libretto/CoreLib$Lens","k":"trait"},
{"l":"libretto/CoreLib$Lens.html","n":"andThen","t":"def andThen[B](that: Lens[A, B]): Lens[S, B]","d":"libretto/CoreLib$Lens","k":"def"},
{"l":"libretto/CoreLib$Lens.html","n":"compose","t":"def compose[T](that: Lens[T, S]): Lens[T, A]","d":"libretto/CoreLib$Lens","k":"def"},
{"l":"libretto/CoreLib$Lens.html","n":"modify","t":"def modify[X, Y](f: X |*| A -⚬ Y |*| A): X |*| S -⚬ Y |*| S","d":"libretto/CoreLib$Lens","k":"def"},
{"l":"libretto/CoreLib$Lens.html","n":"read","t":"def read[Y](f: A -⚬ Y |*| A): S -⚬ Y |*| S","d":"libretto/CoreLib$Lens","k":"def"},
{"l":"libretto/CoreLib$Lens.html","n":"write","t":"def write[X](f: X |*| A -⚬ A): X |*| S -⚬ S","d":"libretto/CoreLib$Lens","k":"def"},
{"l":"libretto/CoreLib$Lens.html","n":"|+|","t":"def |+|[T](that: Lens[T, A]): Lens[S |+| T, A]","d":"libretto/CoreLib$Lens","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"LinearFunctionOps","t":"class LinearFunctionOps[A, B](self: A -⚬ B)","d":"libretto/CoreLib$LinearFunctionOps","k":"class"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"<","t":"def <: FocusedContra[-⚬, A]","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":">","t":"def >: FocusedCo[[x] =>> A -⚬ x, B]","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"as","t":"def as[C](implicit ev: A -⚬ B =:= C): C","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"bimap","t":"def bimap[F[_, _]]: BimapSyntax[F, A, B]","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"choice","t":"def choice[C, D](f: B -⚬ C, g: B -⚬ D): A -⚬ C |&| D","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"chooseL","t":"def chooseL[B1, B2](implicit ev: B =:= B1 |&| B2): A -⚬ B1","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"chooseR","t":"def chooseR[B1, B2](implicit ev: B =:= B1 |&| B2): A -⚬ B2","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"coDistributeL","t":"def coDistributeL[B1, B2, B3](implicit ev: B =:= B1 |*| B2 |&| B1 |*| B3): A -⚬ B1 |*| B2 |&| B3","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"coDistributeR","t":"def coDistributeR[B1, B2, B3](implicit ev: B =:= B1 |*| B3 |&| B2 |*| B3): A -⚬ B1 |&| B2 |*| B3","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"coFactorL","t":"def coFactorL[B1, B2, B3](implicit ev: B =:= B1 |*| B2 |&| B3): A -⚬ B1 |*| B2 |&| B1 |*| B3","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"coFactorR","t":"def coFactorR[B1, B2, B3](implicit ev: B =:= B1 |&| B2 |*| B3): A -⚬ B1 |*| B3 |&| B2 |*| B3","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"distributeL","t":"def distributeL[B1, B2, B3](implicit ev: B =:= B1 |*| B2 |+| B3): A -⚬ B1 |*| B2 |+| B1 |*| B3","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"distributeR","t":"def distributeR[B1, B2, B3](implicit ev: B =:= B1 |+| B2 |*| B3): A -⚬ B1 |*| B3 |+| B2 |*| B3","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"either","t":"def either[B1, B2, C](f: B1 -⚬ C, g: B2 -⚬ C)(implicit ev: B =:= B1 |+| B2): A -⚬ C","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"elimFst","t":"def elimFst[B2](implicit ev: B =:= One |*| B2): A -⚬ B2","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"elimFst","t":"def elimFst[B1, B2](f: B1 -⚬ One)(implicit ev: B =:= B1 |*| B2): A -⚬ B2","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"elimSnd","t":"def elimSnd[B1](implicit ev: B =:= B1 |*| One): A -⚬ B1","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"elimSnd","t":"def elimSnd[B1, B2](f: B2 -⚬ One)(implicit ev: B =:= B1 |*| B2): A -⚬ B1","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"factorL","t":"def factorL[C, D1, D2](implicit ev: B =:= C |*| D1 |+| C |*| D2): A -⚬ C |*| D1 |+| D2","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"factorR","t":"def factorR[C1, C2, D](implicit ev: B =:= C1 |*| D |+| C2 |*| D): A -⚬ C1 |+| C2 |*| D","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"from","t":"def from[Z](implicit ev: A =:= Z): Z -⚬ B","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"injectL","t":"def injectL[C]: A -⚬ B |+| C","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"injectR","t":"def injectR[C]: A -⚬ C |+| B","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"introFst","t":"def introFst: A -⚬ One |*| B","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"introFst","t":"def introFst[C](f: One -⚬ C): A -⚬ C |*| B","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"introSnd","t":"def introSnd: A -⚬ B |*| One","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"introSnd","t":"def introSnd[C](f: One -⚬ C): A -⚬ B |*| C","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"pack","t":"def pack[F[_]](implicit ev: B =:= F[Rec[F]]): A -⚬ Rec[F]","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"par","t":"def par[B1, B2, C, D](f: B1 -⚬ C, g: B2 -⚬ D)(implicit ev: B =:= B1 |*| B2): A -⚬ C |*| D","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"race","t":"def race[B1 : Positive, B2 : Positive, C](caseFstWins: B1 |*| B2 -⚬ C, caseSndWins: B1 |*| B2 -⚬ C)(implicit evidence$26: Positive[B1], evidence$27: Positive[B2], ev: B =:= B1 |*| B2): A -⚬ C","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"select","t":"def select[C1 : Negative, C2 : Negative](caseFstWins: B -⚬ C1 |*| C2, caseSndWins: B -⚬ C1 |*| C2): A -⚬ C1 |*| C2","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"swap","t":"def swap[B1, B2](implicit ev: B =:= B1 |*| B2): A -⚬ B2 |*| B1","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"to","t":"def to[C](implicit ev: B =:= C): A -⚬ C","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"unpack","t":"def unpack[F[_]](implicit ev: B =:= Rec[F]): A -⚬ F[Rec[F]]","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionOps.html","n":"∘","t":"def ∘[Z](g: Z -⚬ A): Z -⚬ B","d":"libretto/CoreLib$LinearFunctionOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionToPairOps.html","n":"LinearFunctionToPairOps","t":"class LinearFunctionToPairOps[A, B1, B2](self: A -⚬ B1 |*| B2)","d":"libretto/CoreLib$LinearFunctionToPairOps","k":"class"},
{"l":"libretto/CoreLib$LinearFunctionToPairOps.html","n":"assocLR","t":"def assocLR[X, Y](implicit ev: B1 =:= X |*| Y): A -⚬ X |*| Y |*| B2","d":"libretto/CoreLib$LinearFunctionToPairOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionToPairOps.html","n":"assocRL","t":"def assocRL[X, Y](implicit ev: B2 =:= X |*| Y): A -⚬ B1 |*| X |*| Y","d":"libretto/CoreLib$LinearFunctionToPairOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionToPairOps.html","n":"awaitFst","t":"def awaitFst(neglect: B1 -⚬ Done)(implicit j: Positive[B2]): A -⚬ B2","d":"libretto/CoreLib$LinearFunctionToPairOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionToPairOps.html","n":"awaitFst","t":"def awaitFst(implicit ev: B1 =:= Done, j: Positive[B2]): A -⚬ B2","d":"libretto/CoreLib$LinearFunctionToPairOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionToPairOps.html","n":"awaitSnd","t":"def awaitSnd(neglect: B2 -⚬ Done)(implicit j: Positive[B1]): A -⚬ B1","d":"libretto/CoreLib$LinearFunctionToPairOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionToPairOps.html","n":"awaitSnd","t":"def awaitSnd(implicit ev: B2 =:= Done, j: Positive[B1]): A -⚬ B1","d":"libretto/CoreLib$LinearFunctionToPairOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionToPlusOps.html","n":"LinearFunctionToPlusOps","t":"class LinearFunctionToPlusOps[A, B1, B2](self: A -⚬ B1 |+| B2)","d":"libretto/CoreLib$LinearFunctionToPlusOps","k":"class"},
{"l":"libretto/CoreLib$LinearFunctionToPlusOps.html","n":"assocLR","t":"def assocLR[X, Y](implicit ev: B1 =:= X |+| Y): A -⚬ X |+| Y |+| B2","d":"libretto/CoreLib$LinearFunctionToPlusOps","k":"def"},
{"l":"libretto/CoreLib$LinearFunctionToPlusOps.html","n":"assocRL","t":"def assocRL[X, Y](implicit ev: B2 =:= X |+| Y): A -⚬ B1 |+| X |+| Y","d":"libretto/CoreLib$LinearFunctionToPlusOps","k":"def"},
{"l":"libretto/CoreLib$Lock$.html","n":"Lock","t":"object Lock","d":"libretto/CoreLib$Lock$","k":"object"},
{"l":"libretto/CoreLib$Lock$.html","n":"PComonoid_Lock","t":"val PComonoid_Lock: PComonoid[Lock]","d":"libretto/CoreLib$Lock$","k":"val"},
{"l":"libretto/CoreLib$Lock$.html","n":"acquire","t":"def acquire: Lock -⚬ AcquiredLock","d":"libretto/CoreLib$Lock$","k":"def"},
{"l":"libretto/CoreLib$Lock$.html","n":"close","t":"def close: Lock -⚬ Done","d":"libretto/CoreLib$Lock$","k":"def"},
{"l":"libretto/CoreLib$Lock$.html","n":"newLock","t":"def newLock: Done -⚬ Lock","d":"libretto/CoreLib$Lock$","k":"def"},
{"l":"libretto/CoreLib$Lock$.html","n":"share","t":"def share: Lock -⚬ Lock |*| Lock","d":"libretto/CoreLib$Lock$","k":"def"},
{"l":"libretto/CoreLib$Lock$.html","n":"tryAcquire","t":"def tryAcquire: Lock -⚬ AcquiredLock |+| Lock","d":"libretto/CoreLib$Lock$","k":"def"},
{"l":"libretto/CoreLib$Maybe$.html","n":"Maybe","t":"object Maybe","d":"libretto/CoreLib$Maybe$","k":"object"},
{"l":"libretto/CoreLib$Maybe$.html","n":"discard","t":"def discard[A](f: A -⚬ One): Maybe[A] -⚬ One","d":"libretto/CoreLib$Maybe$","k":"def"},
{"l":"libretto/CoreLib$Maybe$.html","n":"discard","t":"def discard[A](implicit A: Comonoid[A]): Maybe[A] -⚬ One","d":"libretto/CoreLib$Maybe$","k":"def"},
{"l":"libretto/CoreLib$Maybe$.html","n":"empty","t":"def empty[A]: One -⚬ Maybe[A]","d":"libretto/CoreLib$Maybe$","k":"def"},
{"l":"libretto/CoreLib$Maybe$.html","n":"getOrElse","t":"def getOrElse[A](f: One -⚬ A): Maybe[A] -⚬ A","d":"libretto/CoreLib$Maybe$","k":"def"},
{"l":"libretto/CoreLib$Maybe$.html","n":"just","t":"def just[A]: A -⚬ Maybe[A]","d":"libretto/CoreLib$Maybe$","k":"def"},
{"l":"libretto/CoreLib$Maybe$.html","n":"neglect","t":"def neglect[A](f: A -⚬ Done): Maybe[A] -⚬ Done","d":"libretto/CoreLib$Maybe$","k":"def"},
{"l":"libretto/CoreLib$Maybe$.html","n":"switchWithL","t":"def switchWithL[A, B, R](caseNone: A -⚬ R, caseJust: A |*| B -⚬ R): A |*| Maybe[B] -⚬ R","d":"libretto/CoreLib$Maybe$","k":"def"},
{"l":"libretto/CoreLib$Maybe$.html","n":"switchWithR","t":"def switchWithR[A, B, R](caseNone: B -⚬ R, caseJust: A |*| B -⚬ R): Maybe[A] |*| B -⚬ R","d":"libretto/CoreLib$Maybe$","k":"def"},
{"l":"libretto/CoreLib$Maybe$.html","n":"toEither","t":"def toEither[A]: Maybe[A] -⚬ One |+| A","d":"libretto/CoreLib$Maybe$","k":"def"},
{"l":"libretto/CoreLib$Monad.html","n":"Monad","t":"trait Monad[F[_]]","d":"libretto/CoreLib$Monad","k":"trait"},
{"l":"libretto/CoreLib$Monad.html","n":"flatten","t":"def flatten[A]: F[F[A]] -⚬ F[A]","d":"libretto/CoreLib$Monad","k":"def"},
{"l":"libretto/CoreLib$Monad.html","n":"pure","t":"def pure[A]: A -⚬ F[A]","d":"libretto/CoreLib$Monad","k":"def"},
{"l":"libretto/CoreLib$Monoid$.html","n":"Monoid","t":"object Monoid","d":"libretto/CoreLib$Monoid$","k":"object"},
{"l":"libretto/CoreLib$Monoid$.html","n":"monoidDone","t":"val monoidDone: Monoid[Done]","d":"libretto/CoreLib$Monoid$","k":"val"},
{"l":"libretto/CoreLib$Monoid$.html","n":"monoidOne","t":"val monoidOne: Monoid[One]","d":"libretto/CoreLib$Monoid$","k":"val"},
{"l":"libretto/CoreLib$Monoid$.html","n":"monoidPing","t":"val monoidPing: Monoid[Ping]","d":"libretto/CoreLib$Monoid$","k":"val"},
{"l":"libretto/CoreLib$Monoid.html","n":"Monoid","t":"trait Monoid[A] extends Semigroup[A]","d":"libretto/CoreLib$Monoid","k":"trait"},
{"l":"libretto/CoreLib$Monoid.html","n":"law_leftUnit","t":"def law_leftUnit: Equal[One |*| A -⚬ A]","d":"libretto/CoreLib$Monoid","k":"def"},
{"l":"libretto/CoreLib$Monoid.html","n":"law_rightUnit","t":"def law_rightUnit: Equal[A |*| One -⚬ A]","d":"libretto/CoreLib$Monoid","k":"def"},
{"l":"libretto/CoreLib$Monoid.html","n":"unit","t":"def unit: One -⚬ A","d":"libretto/CoreLib$Monoid","k":"def"},
{"l":"libretto/CoreLib$Multiple$.html","n":"Multiple","t":"object Multiple","d":"libretto/CoreLib$Multiple$","k":"object"},
{"l":"libretto/CoreLib$Multiple$.html","n":"append","t":"def append[A]: Multiple[A] |*| Multiple[A] -⚬ Multiple[A]","d":"libretto/CoreLib$Multiple$","k":"def"},
{"l":"libretto/CoreLib$Multiple$.html","n":"flatten","t":"def flatten[A]: Multiple[Multiple[A]] -⚬ Multiple[A]","d":"libretto/CoreLib$Multiple$","k":"def"},
{"l":"libretto/CoreLib$Multiple$.html","n":"monadMultiple","t":"val monadMultiple: Monad[Multiple]","d":"libretto/CoreLib$Multiple$","k":"val"},
{"l":"libretto/CoreLib$Multiple$.html","n":"monoidMultiple","t":"def monoidMultiple[A]: Monoid[Multiple[A]]","d":"libretto/CoreLib$Multiple$","k":"def"},
{"l":"libretto/CoreLib$Multiple$.html","n":"one","t":"def one[A]: A -⚬ Multiple[A]","d":"libretto/CoreLib$Multiple$","k":"def"},
{"l":"libretto/CoreLib$Multiple$.html","n":"switch","t":"def switch[A, R](case0: One -⚬ R, case1: A -⚬ R, caseN: Multiple[A] |*| Multiple[A] -⚬ R): Multiple[A] -⚬ R","d":"libretto/CoreLib$Multiple$","k":"def"},
{"l":"libretto/CoreLib$Multiple$.html","n":"zero","t":"def zero[A]: One -⚬ Multiple[A]","d":"libretto/CoreLib$Multiple$","k":"def"},
{"l":"libretto/CoreLib$NAffine$.html","n":"NAffine","t":"object NAffine","d":"libretto/CoreLib$NAffine$","k":"object"},
{"l":"libretto/CoreLib$NAffine$.html","n":"from","t":"def from[A](f: A -⚬ Need): NAffine[A]","d":"libretto/CoreLib$NAffine$","k":"def"},
{"l":"libretto/CoreLib$NAffine$.html","n":"nAffineNeed","t":"val nAffineNeed: NAffine[Need]","d":"libretto/CoreLib$NAffine$","k":"val"},
{"l":"libretto/CoreLib$NAffine$.html","n":"nAffinePair","t":"def nAffinePair[A, B](implicit A: NAffine[A], B: NAffine[B]): NAffine[A |*| B]","d":"libretto/CoreLib$NAffine$","k":"def"},
{"l":"libretto/CoreLib$NAffine.html","n":"NAffine","t":"trait NAffine[A]","d":"libretto/CoreLib$NAffine","k":"trait"},
{"l":"libretto/CoreLib$NAffine.html","n":"deflate","t":"def deflate: A -⚬ Need","d":"libretto/CoreLib$NAffine","k":"def"},
{"l":"libretto/CoreLib$NComonoid.html","n":"NComonoid","t":"trait NComonoid[A] extends Cosemigroup[A] with NAffine[A]","d":"libretto/CoreLib$NComonoid","k":"trait"},
{"l":"libretto/CoreLib$NComonoid.html","n":"comonoid","t":"def comonoid: Comonoid[A]","d":"libretto/CoreLib$NComonoid","k":"def"},
{"l":"libretto/CoreLib$NComonoid.html","n":"counit","t":"def counit: A -⚬ Need","d":"libretto/CoreLib$NComonoid","k":"def"},
{"l":"libretto/CoreLib$NComonoid.html","n":"law_leftCounit","t":"def law_leftCounit: Equal[A -⚬ One |*| A]","d":"libretto/CoreLib$NComonoid","k":"def"},
{"l":"libretto/CoreLib$NComonoid.html","n":"law_rightCounit","t":"def law_rightCounit: Equal[A -⚬ A |*| One]","d":"libretto/CoreLib$NComonoid","k":"def"},
{"l":"libretto/CoreLib$NMonoid$.html","n":"NMonoid","t":"object NMonoid","d":"libretto/CoreLib$NMonoid$","k":"object"},
{"l":"libretto/CoreLib$NMonoid$.html","n":"nMonoidNeed","t":"val nMonoidNeed: NMonoid[Need]","d":"libretto/CoreLib$NMonoid$","k":"val"},
{"l":"libretto/CoreLib$NMonoid.html","n":"NMonoid","t":"trait NMonoid[A] extends Semigroup[A]","d":"libretto/CoreLib$NMonoid","k":"trait"},
{"l":"libretto/CoreLib$NMonoid.html","n":"law_leftUnit","t":"def law_leftUnit: Equal[LTerminus |*| A -⚬ A]","d":"libretto/CoreLib$NMonoid","k":"def"},
{"l":"libretto/CoreLib$NMonoid.html","n":"law_rightUnit","t":"def law_rightUnit: Equal[A |*| LTerminus -⚬ A]","d":"libretto/CoreLib$NMonoid","k":"def"},
{"l":"libretto/CoreLib$NMonoid.html","n":"unit","t":"def unit: Need -⚬ A","d":"libretto/CoreLib$NMonoid","k":"def"},
{"l":"libretto/CoreLib$Optionally$.html","n":"Optionally","t":"object Optionally","d":"libretto/CoreLib$Optionally$","k":"object"},
{"l":"libretto/CoreLib$Optionally$.html","n":"fromDiscardable","t":"def fromDiscardable[A](discard: A -⚬ One): A -⚬ Optionally[A]","d":"libretto/CoreLib$Optionally$","k":"def"},
{"l":"libretto/CoreLib$Optionally$.html","n":"optIn","t":"def optIn[A]: Optionally[A] -⚬ A","d":"libretto/CoreLib$Optionally$","k":"def"},
{"l":"libretto/CoreLib$Optionally$.html","n":"optOut","t":"def optOut[A]: Optionally[A] -⚬ One","d":"libretto/CoreLib$Optionally$","k":"def"},
{"l":"libretto/CoreLib$PAffine$.html","n":"PAffine","t":"object PAffine","d":"libretto/CoreLib$PAffine$","k":"object"},
{"l":"libretto/CoreLib$PAffine$.html","n":"from","t":"def from[A](f: A -⚬ Done): PAffine[A]","d":"libretto/CoreLib$PAffine$","k":"def"},
{"l":"libretto/CoreLib$PAffine$.html","n":"fromAffine","t":"def fromAffine[A](implicit A: Affine[A]): PAffine[A]","d":"libretto/CoreLib$PAffine$","k":"def"},
{"l":"libretto/CoreLib$PAffine$.html","n":"pAffineDone","t":"val pAffineDone: PAffine[Done]","d":"libretto/CoreLib$PAffine$","k":"val"},
{"l":"libretto/CoreLib$PAffine$.html","n":"pAffinePair","t":"def pAffinePair[A, B](implicit A: PAffine[A], B: PAffine[B]): PAffine[A |*| B]","d":"libretto/CoreLib$PAffine$","k":"def"},
{"l":"libretto/CoreLib$PAffine.html","n":"PAffine","t":"trait PAffine[A]","d":"libretto/CoreLib$PAffine","k":"trait"},
{"l":"libretto/CoreLib$PAffine.html","n":"neglect","t":"def neglect: A -⚬ Done","d":"libretto/CoreLib$PAffine","k":"def"},
{"l":"libretto/CoreLib$PComonoid$.html","n":"PComonoid","t":"object PComonoid","d":"libretto/CoreLib$PComonoid$","k":"object"},
{"l":"libretto/CoreLib$PComonoid$.html","n":"pComonoidDone","t":"val pComonoidDone: PComonoid[Done]","d":"libretto/CoreLib$PComonoid$","k":"val"},
{"l":"libretto/CoreLib$PComonoid.html","n":"PComonoid","t":"trait PComonoid[A] extends Cosemigroup[A] with PAffine[A]","d":"libretto/CoreLib$PComonoid","k":"trait"},
{"l":"libretto/CoreLib$PComonoid.html","n":"counit","t":"def counit: A -⚬ Done","d":"libretto/CoreLib$PComonoid","k":"def"},
{"l":"libretto/CoreLib$PComonoid.html","n":"law_leftCounit","t":"def law_leftCounit: Equal[A -⚬ RTerminus |*| A]","d":"libretto/CoreLib$PComonoid","k":"def"},
{"l":"libretto/CoreLib$PComonoid.html","n":"law_rightCounit","t":"def law_rightCounit: Equal[A -⚬ A |*| RTerminus]","d":"libretto/CoreLib$PComonoid","k":"def"},
{"l":"libretto/CoreLib$PMaybe$.html","n":"PMaybe","t":"object PMaybe","d":"libretto/CoreLib$PMaybe$","k":"object"},
{"l":"libretto/CoreLib$PMaybe$.html","n":"empty","t":"def empty[A]: Done -⚬ PMaybe[A]","d":"libretto/CoreLib$PMaybe$","k":"def"},
{"l":"libretto/CoreLib$PMaybe$.html","n":"fromEither","t":"def fromEither[A]: Done |+| A -⚬ PMaybe[A]","d":"libretto/CoreLib$PMaybe$","k":"def"},
{"l":"libretto/CoreLib$PMaybe$.html","n":"getOrElse","t":"def getOrElse[A](f: Done -⚬ A): PMaybe[A] -⚬ A","d":"libretto/CoreLib$PMaybe$","k":"def"},
{"l":"libretto/CoreLib$PMaybe$.html","n":"just","t":"def just[A]: A -⚬ PMaybe[A]","d":"libretto/CoreLib$PMaybe$","k":"def"},
{"l":"libretto/CoreLib$PMaybe$.html","n":"lift","t":"def lift[A, B](f: A -⚬ B): PMaybe[A] -⚬ PMaybe[B]","d":"libretto/CoreLib$PMaybe$","k":"def"},
{"l":"libretto/CoreLib$PMaybe$.html","n":"neglect","t":"def neglect[A](f: A -⚬ Done): PMaybe[A] -⚬ Done","d":"libretto/CoreLib$PMaybe$","k":"def"},
{"l":"libretto/CoreLib$PMaybe$.html","n":"neglect","t":"def neglect[A](implicit A: PComonoid[A]): PMaybe[A] -⚬ Done","d":"libretto/CoreLib$PMaybe$","k":"def"},
{"l":"libretto/CoreLib$PMaybe$.html","n":"switch","t":"def switch[A, R](caseNone: Done -⚬ R, caseSome: A -⚬ R): PMaybe[A] -⚬ R","d":"libretto/CoreLib$PMaybe$","k":"def"},
{"l":"libretto/CoreLib$PMaybe$.html","n":"switchWithL","t":"def switchWithL[A, B, R](caseNone: A |*| Done -⚬ R, caseSome: A |*| B -⚬ R): A |*| PMaybe[B] -⚬ R","d":"libretto/CoreLib$PMaybe$","k":"def"},
{"l":"libretto/CoreLib$PMaybe$.html","n":"switchWithR","t":"def switchWithR[A, B, R](caseNone: Done |*| B -⚬ R, caseSome: A |*| B -⚬ R): PMaybe[A] |*| B -⚬ R","d":"libretto/CoreLib$PMaybe$","k":"def"},
{"l":"libretto/CoreLib$PMaybe$.html","n":"toEither","t":"def toEither[A]: PMaybe[A] -⚬ Done |+| A","d":"libretto/CoreLib$PMaybe$","k":"def"},
{"l":"libretto/CoreLib$PMonoid.html","n":"PMonoid","t":"trait PMonoid[A] extends Semigroup[A]","d":"libretto/CoreLib$PMonoid","k":"trait"},
{"l":"libretto/CoreLib$PMonoid.html","n":"law_leftUnit","t":"def law_leftUnit: Equal[One |*| A -⚬ A]","d":"libretto/CoreLib$PMonoid","k":"def"},
{"l":"libretto/CoreLib$PMonoid.html","n":"law_rightUnit","t":"def law_rightUnit: Equal[A |*| One -⚬ A]","d":"libretto/CoreLib$PMonoid","k":"def"},
{"l":"libretto/CoreLib$PMonoid.html","n":"monoid","t":"def monoid: Monoid[A]","d":"libretto/CoreLib$PMonoid","k":"def"},
{"l":"libretto/CoreLib$PMonoid.html","n":"unit","t":"def unit: Done -⚬ A","d":"libretto/CoreLib$PMonoid","k":"def"},
{"l":"libretto/CoreLib$PUnlimited$.html","n":"PUnlimited","t":"object PUnlimited","d":"libretto/CoreLib$PUnlimited$","k":"object"},
{"l":"libretto/CoreLib$PUnlimited$.html","n":"comonadPUnlimited","t":"val comonadPUnlimited: Comonad[PUnlimited]","d":"libretto/CoreLib$PUnlimited$","k":"val"},
{"l":"libretto/CoreLib$PUnlimited$.html","n":"create","t":"def create[X, A](case0: X -⚬ Done, case1: X -⚬ A, caseN: X -⚬ PUnlimited[A] |*| PUnlimited[A]): X -⚬ PUnlimited[A]","d":"libretto/CoreLib$PUnlimited$","k":"def"},
{"l":"libretto/CoreLib$PUnlimited$.html","n":"createWith","t":"def createWith[X, A, Y](case0: X -⚬ Done |*| Y, case1: X -⚬ A |*| Y, caseN: X -⚬ PUnlimited[A] |*| PUnlimited[A] |*| Y): X -⚬ PUnlimited[A] |*| Y","d":"libretto/CoreLib$PUnlimited$","k":"def"},
{"l":"libretto/CoreLib$PUnlimited$.html","n":"duplicate","t":"def duplicate[A]: PUnlimited[A] -⚬ PUnlimited[PUnlimited[A]]","d":"libretto/CoreLib$PUnlimited$","k":"def"},
{"l":"libretto/CoreLib$PUnlimited$.html","n":"getFst","t":"def getFst[A]: PUnlimited[A] -⚬ A |*| PUnlimited[A]","d":"libretto/CoreLib$PUnlimited$","k":"def"},
{"l":"libretto/CoreLib$PUnlimited$.html","n":"getSnd","t":"def getSnd[A]: PUnlimited[A] -⚬ PUnlimited[A] |*| A","d":"libretto/CoreLib$PUnlimited$","k":"def"},
{"l":"libretto/CoreLib$PUnlimited$.html","n":"neglect","t":"def neglect[A]: PUnlimited[A] -⚬ Done","d":"libretto/CoreLib$PUnlimited$","k":"def"},
{"l":"libretto/CoreLib$PUnlimited$.html","n":"pComonoidPUnlimited","t":"def pComonoidPUnlimited[A]: PComonoid[PUnlimited[A]]","d":"libretto/CoreLib$PUnlimited$","k":"def"},
{"l":"libretto/CoreLib$PUnlimited$.html","n":"single","t":"def single[A]: PUnlimited[A] -⚬ A","d":"libretto/CoreLib$PUnlimited$","k":"def"},
{"l":"libretto/CoreLib$PUnlimited$.html","n":"split","t":"def split[A]: PUnlimited[A] -⚬ PUnlimited[A] |*| PUnlimited[A]","d":"libretto/CoreLib$PUnlimited$","k":"def"},
{"l":"libretto/CoreLib$Semigroup$.html","n":"Semigroup","t":"object Semigroup","d":"libretto/CoreLib$Semigroup$","k":"object"},
{"l":"libretto/CoreLib$Semigroup$.html","n":"semigroupDone","t":"val semigroupDone: Semigroup[Done]","d":"libretto/CoreLib$Semigroup$","k":"val"},
{"l":"libretto/CoreLib$Semigroup$.html","n":"semigroupNeed","t":"val semigroupNeed: Semigroup[Need]","d":"libretto/CoreLib$Semigroup$","k":"val"},
{"l":"libretto/CoreLib$Semigroup$.html","n":"semigroupPing","t":"val semigroupPing: Semigroup[Ping]","d":"libretto/CoreLib$Semigroup$","k":"val"},
{"l":"libretto/CoreLib$Semigroup$.html","n":"semigroupPong","t":"val semigroupPong: Semigroup[Pong]","d":"libretto/CoreLib$Semigroup$","k":"val"},
{"l":"libretto/CoreLib$Semigroup.html","n":"Semigroup","t":"trait Semigroup[A]","d":"libretto/CoreLib$Semigroup","k":"trait"},
{"l":"libretto/CoreLib$Semigroup.html","n":"combine","t":"def combine: A |*| A -⚬ A","d":"libretto/CoreLib$Semigroup","k":"def"},
{"l":"libretto/CoreLib$Semigroup.html","n":"law_associativity","t":"def law_associativity: Equal[A |*| A |*| A -⚬ A]","d":"libretto/CoreLib$Semigroup","k":"def"},
{"l":"libretto/CoreLib$Signaling$.html","n":"Signaling","t":"object Signaling","d":"libretto/CoreLib$Signaling$","k":"object"},
{"l":"libretto/CoreLib$Signaling$.html","n":"invert","t":"def invert[A](A: Positive[A]): Negative[A]","d":"libretto/CoreLib$Signaling$","k":"def"},
{"l":"libretto/CoreLib$Signaling$.html","n":"invert","t":"def invert[A](A: Negative[A]): Positive[A]","d":"libretto/CoreLib$Signaling$","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Negative$.html","n":"Negative","t":"object Negative","d":"libretto/CoreLib$Signaling$$Negative$","k":"object"},
{"l":"libretto/CoreLib$Signaling$$Negative$.html","n":"both","t":"def both[A, B](implicit A: Negative[A], B: Negative[B]): Negative[A |*| B]","d":"libretto/CoreLib$Signaling$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Negative$.html","n":"byFst","t":"def byFst[A, B](implicit A: Negative[A]): Negative[A |*| B]","d":"libretto/CoreLib$Signaling$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Negative$.html","n":"bySnd","t":"def bySnd[A, B](implicit B: Negative[B]): Negative[A |*| B]","d":"libretto/CoreLib$Signaling$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Negative$.html","n":"choice","t":"def choice[A, B]: Negative[A |&| B]","d":"libretto/CoreLib$Signaling$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Negative$.html","n":"from","t":"def from[A](notifyFst: Pong |*| A -⚬ A): Negative[A]","d":"libretto/CoreLib$Signaling$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Negative$.html","n":"rec","t":"def rec[F[_]](implicit F: Negative[F[Rec[F]]]): Negative[Rec[F]]","d":"libretto/CoreLib$Signaling$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Negative$.html","n":"rec","t":"def rec[F[_]](implicit F: ForAll[[x] =>> Negative[F[x]]]): Negative[Rec[F]]","d":"libretto/CoreLib$Signaling$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Negative$.html","n":"rec","t":"def rec[F[_]](f: Negative[Rec[F]] => Negative[F[Rec[F]]]): Negative[Rec[F]]","d":"libretto/CoreLib$Signaling$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Negative$.html","n":"signalingNeed","t":"def signalingNeed: Negative[Need]","d":"libretto/CoreLib$Signaling$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Negative$.html","n":"signalingPong","t":"def signalingPong: Negative[Pong]","d":"libretto/CoreLib$Signaling$$Negative$","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Negative.html","n":"Negative","t":"trait Negative[A]","d":"libretto/CoreLib$Signaling$$Negative","k":"trait"},
{"l":"libretto/CoreLib$Signaling$$Negative.html","n":"law_signalComposition","t":"def law_signalComposition: Equal[Need |*| Need |*| A -⚬ A]","d":"libretto/CoreLib$Signaling$$Negative","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Negative.html","n":"law_signalIdentity","t":"def law_signalIdentity: Equal[LTerminus |*| A -⚬ A]","d":"libretto/CoreLib$Signaling$$Negative","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Negative.html","n":"notifyNegFst","t":"def notifyNegFst: Pong |*| A -⚬ A","d":"libretto/CoreLib$Signaling$$Negative","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Negative.html","n":"notifyNegSnd","t":"def notifyNegSnd: A |*| Pong -⚬ A","d":"libretto/CoreLib$Signaling$$Negative","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Negative.html","n":"signalNeg","t":"def signalNeg: Need |*| A -⚬ A","d":"libretto/CoreLib$Signaling$$Negative","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Negative.html","n":"signalNegFst","t":"def signalNegFst: Need |*| A -⚬ A","d":"libretto/CoreLib$Signaling$$Negative","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Negative.html","n":"signalNegSnd","t":"def signalNegSnd: A |*| Need -⚬ A","d":"libretto/CoreLib$Signaling$$Negative","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Positive$.html","n":"Positive","t":"object Positive","d":"libretto/CoreLib$Signaling$$Positive$","k":"object"},
{"l":"libretto/CoreLib$Signaling$$Positive$.html","n":"both","t":"def both[A, B](implicit A: Positive[A], B: Positive[B]): Positive[A |*| B]","d":"libretto/CoreLib$Signaling$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Positive$.html","n":"byFst","t":"def byFst[A, B](implicit A: Positive[A]): Positive[A |*| B]","d":"libretto/CoreLib$Signaling$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Positive$.html","n":"bySnd","t":"def bySnd[A, B](implicit B: Positive[B]): Positive[A |*| B]","d":"libretto/CoreLib$Signaling$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Positive$.html","n":"either","t":"def either[A, B]: Positive[A |+| B]","d":"libretto/CoreLib$Signaling$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Positive$.html","n":"from","t":"def from[A](notifyFst: A -⚬ Ping |*| A): Positive[A]","d":"libretto/CoreLib$Signaling$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Positive$.html","n":"rec","t":"def rec[F[_]](implicit F: Positive[F[Rec[F]]]): Positive[Rec[F]]","d":"libretto/CoreLib$Signaling$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Positive$.html","n":"rec","t":"def rec[F[_]](implicit F: ForAll[[x] =>> Positive[F[x]]]): Positive[Rec[F]]","d":"libretto/CoreLib$Signaling$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Positive$.html","n":"rec","t":"def rec[F[_]](f: Positive[Rec[F]] => Positive[F[Rec[F]]]): Positive[Rec[F]]","d":"libretto/CoreLib$Signaling$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Positive$.html","n":"signalingDone","t":"def signalingDone: Positive[Done]","d":"libretto/CoreLib$Signaling$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Positive$.html","n":"signalingPing","t":"def signalingPing: Positive[Ping]","d":"libretto/CoreLib$Signaling$$Positive$","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Positive.html","n":"Positive","t":"trait Positive[A]","d":"libretto/CoreLib$Signaling$$Positive","k":"trait"},
{"l":"libretto/CoreLib$Signaling$$Positive.html","n":"law_awaitComposition","t":"def law_awaitComposition: Equal[A -⚬ Done |*| Done |*| A]","d":"libretto/CoreLib$Signaling$$Positive","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Positive.html","n":"law_signalIdentity","t":"def law_signalIdentity: Equal[A -⚬ RTerminus |*| A]","d":"libretto/CoreLib$Signaling$$Positive","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Positive.html","n":"notifyPosFst","t":"def notifyPosFst: A -⚬ Ping |*| A","d":"libretto/CoreLib$Signaling$$Positive","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Positive.html","n":"notifyPosSnd","t":"def notifyPosSnd: A -⚬ A |*| Ping","d":"libretto/CoreLib$Signaling$$Positive","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Positive.html","n":"signalDone","t":"def signalDone: A -⚬ A |*| Done","d":"libretto/CoreLib$Signaling$$Positive","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Positive.html","n":"signalPos","t":"def signalPos: A -⚬ Done |*| A","d":"libretto/CoreLib$Signaling$$Positive","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Positive.html","n":"signalPosFst","t":"def signalPosFst: A -⚬ Done |*| A","d":"libretto/CoreLib$Signaling$$Positive","k":"def"},
{"l":"libretto/CoreLib$Signaling$$Positive.html","n":"signalPosSnd","t":"def signalPosSnd: A -⚬ A |*| Done","d":"libretto/CoreLib$Signaling$$Positive","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$.html","n":"SignalingJunction","t":"object SignalingJunction","d":"libretto/CoreLib$SignalingJunction$","k":"object"},
{"l":"libretto/CoreLib$SignalingJunction$$Negative$.html","n":"Negative","t":"object Negative","d":"libretto/CoreLib$SignalingJunction$$Negative$","k":"object"},
{"l":"libretto/CoreLib$SignalingJunction$$Negative$.html","n":"both","t":"def both[A, B](implicit A: Negative[A], B: Negative[B]): Negative[A |*| B]","d":"libretto/CoreLib$SignalingJunction$$Negative$","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Negative$.html","n":"byFst","t":"def byFst[A, B](implicit A: Negative[A]): Negative[A |*| B]","d":"libretto/CoreLib$SignalingJunction$$Negative$","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Negative$.html","n":"bySnd","t":"def bySnd[A, B](implicit B: Negative[B]): Negative[A |*| B]","d":"libretto/CoreLib$SignalingJunction$$Negative$","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Negative$.html","n":"choiceNeg","t":"def choiceNeg[A, B](implicit A: Negative[A], B: Negative[B]): Negative[A |&| B]","d":"libretto/CoreLib$SignalingJunction$$Negative$","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Negative$.html","n":"choicePos","t":"def choicePos[A, B](implicit A: Positive[A], B: Positive[B]): Negative[A |&| B]","d":"libretto/CoreLib$SignalingJunction$$Negative$","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Negative$.html","n":"from","t":"def from[A](s: Negative[A], j: Negative[A]): Negative[A]","d":"libretto/CoreLib$SignalingJunction$$Negative$","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Negative$.html","n":"rec","t":"def rec[F[_]](implicit F: Negative[F[Rec[F]]]): Negative[Rec[F]]","d":"libretto/CoreLib$SignalingJunction$$Negative$","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Negative$.html","n":"rec","t":"def rec[F[_]](implicit F: ForAll[[x] =>> Negative[F[x]]]): Negative[Rec[F]]","d":"libretto/CoreLib$SignalingJunction$$Negative$","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Negative$.html","n":"rec","t":"def rec[F[_]](f: Negative[Rec[F]] => Negative[F[Rec[F]]], g: Negative[Rec[F]] => Negative[F[Rec[F]]]): Negative[Rec[F]]","d":"libretto/CoreLib$SignalingJunction$$Negative$","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Negative$.html","n":"signalingJunctionNegativeNeed","t":"def signalingJunctionNegativeNeed: Negative[Need]","d":"libretto/CoreLib$SignalingJunction$$Negative$","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Negative.html","n":"Negative","t":"trait Negative[A] extends Negative[A] with Negative[A]","d":"libretto/CoreLib$SignalingJunction$$Negative","k":"trait"},
{"l":"libretto/CoreLib$SignalingJunction$$Negative.html","n":"delayUsing","t":"def delayUsing(f: Need -⚬ Need): A -⚬ A","d":"libretto/CoreLib$SignalingJunction$$Negative","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Negative.html","n":"law_negativeAwaitThenSignalIsId","t":"def law_negativeAwaitThenSignalIsId: Equal[A -⚬ A]","d":"libretto/CoreLib$SignalingJunction$$Negative","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Negative.html","n":"law_negativeSignalThenAwait","t":"def law_negativeSignalThenAwait: Equal[Need |*| A -⚬ Need |*| A]","d":"libretto/CoreLib$SignalingJunction$$Negative","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Positive$.html","n":"Positive","t":"object Positive","d":"libretto/CoreLib$SignalingJunction$$Positive$","k":"object"},
{"l":"libretto/CoreLib$SignalingJunction$$Positive$.html","n":"both","t":"def both[A, B](implicit A: Positive[A], B: Positive[B]): Positive[A |*| B]","d":"libretto/CoreLib$SignalingJunction$$Positive$","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Positive$.html","n":"byFst","t":"def byFst[A, B](implicit A: Positive[A]): Positive[A |*| B]","d":"libretto/CoreLib$SignalingJunction$$Positive$","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Positive$.html","n":"bySnd","t":"def bySnd[A, B](implicit B: Positive[B]): Positive[A |*| B]","d":"libretto/CoreLib$SignalingJunction$$Positive$","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Positive$.html","n":"eitherNeg","t":"def eitherNeg[A, B](implicit A: Negative[A], B: Negative[B]): Positive[A |+| B]","d":"libretto/CoreLib$SignalingJunction$$Positive$","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Positive$.html","n":"eitherPos","t":"def eitherPos[A, B](implicit A: Positive[A], B: Positive[B]): Positive[A |+| B]","d":"libretto/CoreLib$SignalingJunction$$Positive$","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Positive$.html","n":"from","t":"def from[A](s: Positive[A], j: Positive[A]): Positive[A]","d":"libretto/CoreLib$SignalingJunction$$Positive$","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Positive$.html","n":"rec","t":"def rec[F[_]](implicit F: Positive[F[Rec[F]]]): Positive[Rec[F]]","d":"libretto/CoreLib$SignalingJunction$$Positive$","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Positive$.html","n":"rec","t":"def rec[F[_]](implicit F: ForAll[[x] =>> Positive[F[x]]]): Positive[Rec[F]]","d":"libretto/CoreLib$SignalingJunction$$Positive$","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Positive$.html","n":"rec","t":"def rec[F[_]](f: Positive[Rec[F]] => Positive[F[Rec[F]]], g: Positive[Rec[F]] => Positive[F[Rec[F]]]): Positive[Rec[F]]","d":"libretto/CoreLib$SignalingJunction$$Positive$","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Positive$.html","n":"signalingJunctionPositiveDone","t":"def signalingJunctionPositiveDone: Positive[Done]","d":"libretto/CoreLib$SignalingJunction$$Positive$","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Positive.html","n":"Positive","t":"trait Positive[A] extends Positive[A] with Positive[A]","d":"libretto/CoreLib$SignalingJunction$$Positive","k":"trait"},
{"l":"libretto/CoreLib$SignalingJunction$$Positive.html","n":"delayUsing","t":"def delayUsing(f: Done -⚬ Done): A -⚬ A","d":"libretto/CoreLib$SignalingJunction$$Positive","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Positive.html","n":"law_positiveAwaitThenSignal","t":"def law_positiveAwaitThenSignal: Equal[Done |*| A -⚬ Done |*| A]","d":"libretto/CoreLib$SignalingJunction$$Positive","k":"def"},
{"l":"libretto/CoreLib$SignalingJunction$$Positive.html","n":"law_positiveSignalThenAwaitIsId","t":"def law_positiveSignalThenAwaitIsId: Equal[A -⚬ A]","d":"libretto/CoreLib$SignalingJunction$$Positive","k":"def"},
{"l":"libretto/CoreLib$Transportive$.html","n":"Transportive","t":"object Transportive","d":"libretto/CoreLib$Transportive$","k":"object"},
{"l":"libretto/CoreLib$Transportive$.html","n":"apply","t":"def apply[F[_]](implicit F: Transportive[F]): Transportive[F]","d":"libretto/CoreLib$Transportive$","k":"def"},
{"l":"libretto/CoreLib$Transportive$.html","n":"fst","t":"def fst[B]: Transportive[|*|]","d":"libretto/CoreLib$Transportive$","k":"def"},
{"l":"libretto/CoreLib$Transportive$.html","n":"snd","t":"def snd[A]: Transportive[[x] =>> A |*| x]","d":"libretto/CoreLib$Transportive$","k":"def"},
{"l":"libretto/CoreLib$Transportive.html","n":"Transportive","t":"trait Transportive[F[_]] extends Functor[F]","d":"libretto/CoreLib$Transportive","k":"trait"},
{"l":"libretto/CoreLib$Transportive.html","n":"excludeFst","t":"def excludeFst[A, B]: F[A |*| B] -⚬ A |*| F[B]","d":"libretto/CoreLib$Transportive","k":"def"},
{"l":"libretto/CoreLib$Transportive.html","n":"excludeSnd","t":"def excludeSnd[A, B]: F[A |*| B] -⚬ F[A] |*| B","d":"libretto/CoreLib$Transportive","k":"def"},
{"l":"libretto/CoreLib$Transportive.html","n":"getL","t":"def getL[A](implicit A: Cosemigroup[A]): F[A] -⚬ A |*| F[A]","d":"libretto/CoreLib$Transportive","k":"def"},
{"l":"libretto/CoreLib$Transportive.html","n":"getR","t":"def getR[A](implicit A: Cosemigroup[A]): F[A] -⚬ F[A] |*| A","d":"libretto/CoreLib$Transportive","k":"def"},
{"l":"libretto/CoreLib$Transportive.html","n":"inL","t":"def inL[A, B]: A |*| F[B] -⚬ F[A |*| B]","d":"libretto/CoreLib$Transportive","k":"def"},
{"l":"libretto/CoreLib$Transportive.html","n":"inR","t":"def inR[A, B]: F[A] |*| B -⚬ F[A |*| B]","d":"libretto/CoreLib$Transportive","k":"def"},
{"l":"libretto/CoreLib$Transportive.html","n":"includeFst","t":"def includeFst[A, B]: A |*| F[B] -⚬ F[A |*| B]","d":"libretto/CoreLib$Transportive","k":"def"},
{"l":"libretto/CoreLib$Transportive.html","n":"includeSnd","t":"def includeSnd[A, B]: F[A] |*| B -⚬ F[A |*| B]","d":"libretto/CoreLib$Transportive","k":"def"},
{"l":"libretto/CoreLib$Transportive.html","n":"lens","t":"def lens[A]: Lens[F[A], A]","d":"libretto/CoreLib$Transportive","k":"def"},
{"l":"libretto/CoreLib$Transportive.html","n":"outL","t":"def outL[A, B]: F[A |*| B] -⚬ A |*| F[B]","d":"libretto/CoreLib$Transportive","k":"def"},
{"l":"libretto/CoreLib$Transportive.html","n":"outR","t":"def outR[A, B]: F[A |*| B] -⚬ F[A] |*| B","d":"libretto/CoreLib$Transportive","k":"def"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"Unlimited","t":"object Unlimited","d":"libretto/CoreLib$Unlimited$","k":"object"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"comonadUnlimited","t":"val comonadUnlimited: Comonad[Unlimited]","d":"libretto/CoreLib$Unlimited$","k":"val"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"comonoidUnlimited","t":"def comonoidUnlimited[A]: Comonoid[Unlimited[A]]","d":"libretto/CoreLib$Unlimited$","k":"def"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"create","t":"def create[X, A](case0: X -⚬ One, case1: X -⚬ A, caseN: X -⚬ Unlimited[A] |*| Unlimited[A]): X -⚬ Unlimited[A]","d":"libretto/CoreLib$Unlimited$","k":"def"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"createWith","t":"def createWith[X, A, Y](case0: X -⚬ Y, case1: X -⚬ A |*| Y, caseN: X -⚬ Unlimited[A] |*| Unlimited[A] |*| Y): X -⚬ Unlimited[A] |*| Y","d":"libretto/CoreLib$Unlimited$","k":"def"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"createWith","t":"def createWith[X : Cosemigroup, A, Y : Semigroup](case0: X -⚬ Y, case1: X -⚬ A |*| Y): X -⚬ Unlimited[A] |*| Y","d":"libretto/CoreLib$Unlimited$","k":"def"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"deferrableUnlimited","t":"def deferrableUnlimited[A]: Negative[Unlimited[A]]","d":"libretto/CoreLib$Unlimited$","k":"def"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"discard","t":"def discard[A]: Unlimited[A] -⚬ One","d":"libretto/CoreLib$Unlimited$","k":"def"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"discardWhenDone","t":"def discardWhenDone[A]: Done |*| Unlimited[A] -⚬ Done","d":"libretto/CoreLib$Unlimited$","k":"def"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"duplicate","t":"def duplicate[A]: Unlimited[A] -⚬ Unlimited[Unlimited[A]]","d":"libretto/CoreLib$Unlimited$","k":"def"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"fromComonoid","t":"def fromComonoid[A](using A: Comonoid[A]): A -⚬ Unlimited[A]","d":"libretto/CoreLib$Unlimited$","k":"def"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"getFst","t":"def getFst[A]: Unlimited[A] -⚬ A |*| Unlimited[A]","d":"libretto/CoreLib$Unlimited$","k":"def"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"getFstWhenDone","t":"def getFstWhenDone[A]: Done |*| Unlimited[A] -⚬ Done |*| A |*| Unlimited[A]","d":"libretto/CoreLib$Unlimited$","k":"def"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"getSnd","t":"def getSnd[A]: Unlimited[A] -⚬ Unlimited[A] |*| A","d":"libretto/CoreLib$Unlimited$","k":"def"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"getSndWhenDone","t":"def getSndWhenDone[A]: Done |*| Unlimited[A] -⚬ Done |*| Unlimited[A] |*| A","d":"libretto/CoreLib$Unlimited$","k":"def"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"getSome","t":"def getSome[A]: Unlimited[A] -⚬ A |*| Unlimited[A]","d":"libretto/CoreLib$Unlimited$","k":"def"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"map","t":"def map[A, B](f: A -⚬ B): Unlimited[A] -⚬ Unlimited[B]","d":"libretto/CoreLib$Unlimited$","k":"def"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"signalingUnlimited","t":"def signalingUnlimited[A]: Negative[Unlimited[A]]","d":"libretto/CoreLib$Unlimited$","k":"def"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"single","t":"def single[A]: Unlimited[A] -⚬ A","d":"libretto/CoreLib$Unlimited$","k":"def"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"singleWhenDone","t":"def singleWhenDone[A]: Done |*| Unlimited[A] -⚬ Done |*| A","d":"libretto/CoreLib$Unlimited$","k":"def"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"split","t":"def split[A]: Unlimited[A] -⚬ Unlimited[A] |*| Unlimited[A]","d":"libretto/CoreLib$Unlimited$","k":"def"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"splitWhenDone","t":"def splitWhenDone[A]: Done |*| Unlimited[A] -⚬ Done |*| Unlimited[A] |*| Unlimited[A]","d":"libretto/CoreLib$Unlimited$","k":"def"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"unfold","t":"def unfold[S, A](f: S -⚬ A |*| S): S -⚬ Unlimited[A] |*| S","d":"libretto/CoreLib$Unlimited$","k":"def"},
{"l":"libretto/CoreLib$Unlimited$.html","n":"zip","t":"def zip[A, B]: Unlimited[A] |*| Unlimited[B] -⚬ Unlimited[A |*| B]","d":"libretto/CoreLib$Unlimited$","k":"def"},
{"l":"libretto/CoreLib$|&|$.html","n":"|&|","t":"object |&|","d":"libretto/CoreLib$|&|$","k":"object"},
{"l":"libretto/CoreLib$|&|$.html","n":"IXI","t":"def IXI[A, B, C, D]: A |&| B |&| C |&| D -⚬ A |&| C |&| B |&| D","d":"libretto/CoreLib$|&|$","k":"def"},
{"l":"libretto/CoreLib$|&|$.html","n":"assocLR","t":"def assocLR[A, B, C]: A |&| B |&| C -⚬ A |&| B |&| C","d":"libretto/CoreLib$|&|$","k":"def"},
{"l":"libretto/CoreLib$|&|$.html","n":"assocRL","t":"def assocRL[A, B, C]: A |&| B |&| C -⚬ A |&| B |&| C","d":"libretto/CoreLib$|&|$","k":"def"},
{"l":"libretto/CoreLib$|&|$.html","n":"bifunctor","t":"val bifunctor: Bifunctor[|&|]","d":"libretto/CoreLib$|&|$","k":"val"},
{"l":"libretto/CoreLib$|&|$.html","n":"bimap","t":"def bimap[A, B, C, D](f: A -⚬ B, g: C -⚬ D): A |&| C -⚬ B |&| D","d":"libretto/CoreLib$|&|$","k":"def"},
{"l":"libretto/CoreLib$|&|$.html","n":"left","t":"def left[B]: Functor[|&|]","d":"libretto/CoreLib$|&|$","k":"def"},
{"l":"libretto/CoreLib$|&|$.html","n":"lmap","t":"def lmap[A, B, A1](f: A -⚬ A1): A |&| B -⚬ A1 |&| B","d":"libretto/CoreLib$|&|$","k":"def"},
{"l":"libretto/CoreLib$|&|$.html","n":"notify","t":"def notify[A, B]: Pong |*| A |&| B -⚬ A |&| B","d":"libretto/CoreLib$|&|$","k":"def"},
{"l":"libretto/CoreLib$|&|$.html","n":"notifyL","t":"def notifyL[A, B]: Pong |*| A |&| B -⚬ A |&| B","d":"libretto/CoreLib$|&|$","k":"def"},
{"l":"libretto/CoreLib$|&|$.html","n":"notifyR","t":"def notifyR[A, B]: A |&| Pong |*| B -⚬ A |&| B","d":"libretto/CoreLib$|&|$","k":"def"},
{"l":"libretto/CoreLib$|&|$.html","n":"right","t":"def right[A]: Functor[[x] =>> A |&| x]","d":"libretto/CoreLib$|&|$","k":"def"},
{"l":"libretto/CoreLib$|&|$.html","n":"rmap","t":"def rmap[A, B, B1](f: B -⚬ B1): A |&| B -⚬ A |&| B1","d":"libretto/CoreLib$|&|$","k":"def"},
{"l":"libretto/CoreLib$|&|$.html","n":"signal","t":"def signal[A, B]: Need |*| A |&| B -⚬ A |&| B","d":"libretto/CoreLib$|&|$","k":"def"},
{"l":"libretto/CoreLib$|&|$.html","n":"signalL","t":"def signalL[A, B]: Need |*| A |&| B -⚬ A |&| B","d":"libretto/CoreLib$|&|$","k":"def"},
{"l":"libretto/CoreLib$|&|$.html","n":"signalR","t":"def signalR[A, B]: A |&| Need |*| B -⚬ A |&| B","d":"libretto/CoreLib$|&|$","k":"def"},
{"l":"libretto/CoreLib$|&|$.html","n":"swap","t":"def swap[A, B]: A |&| B -⚬ B |&| A","d":"libretto/CoreLib$|&|$","k":"def"},
{"l":"libretto/CoreLib$|+|$.html","n":"|+|","t":"object |+|","d":"libretto/CoreLib$|+|$","k":"object"},
{"l":"libretto/CoreLib$|+|$.html","n":"IXI","t":"def IXI[A, B, C, D]: A |+| B |+| C |+| D -⚬ A |+| C |+| B |+| D","d":"libretto/CoreLib$|+|$","k":"def"},
{"l":"libretto/CoreLib$|+|$.html","n":"assocLR","t":"def assocLR[A, B, C]: A |+| B |+| C -⚬ A |+| B |+| C","d":"libretto/CoreLib$|+|$","k":"def"},
{"l":"libretto/CoreLib$|+|$.html","n":"assocRL","t":"def assocRL[A, B, C]: A |+| B |+| C -⚬ A |+| B |+| C","d":"libretto/CoreLib$|+|$","k":"def"},
{"l":"libretto/CoreLib$|+|$.html","n":"bifunctor","t":"val bifunctor: Bifunctor[|+|]","d":"libretto/CoreLib$|+|$","k":"val"},
{"l":"libretto/CoreLib$|+|$.html","n":"bimap","t":"def bimap[A, B, C, D](f: A -⚬ B, g: C -⚬ D): A |+| C -⚬ B |+| D","d":"libretto/CoreLib$|+|$","k":"def"},
{"l":"libretto/CoreLib$|+|$.html","n":"left","t":"def left[B]: Functor[|+|]","d":"libretto/CoreLib$|+|$","k":"def"},
{"l":"libretto/CoreLib$|+|$.html","n":"lmap","t":"def lmap[A, B, A1](f: A -⚬ A1): A |+| B -⚬ A1 |+| B","d":"libretto/CoreLib$|+|$","k":"def"},
{"l":"libretto/CoreLib$|+|$.html","n":"notify","t":"def notify[A, B]: A |+| B -⚬ Ping |*| A |+| B","d":"libretto/CoreLib$|+|$","k":"def"},
{"l":"libretto/CoreLib$|+|$.html","n":"notifyL","t":"def notifyL[A, B]: A |+| B -⚬ Ping |*| A |+| B","d":"libretto/CoreLib$|+|$","k":"def"},
{"l":"libretto/CoreLib$|+|$.html","n":"notifyR","t":"def notifyR[A, B]: A |+| B -⚬ A |+| Ping |*| B","d":"libretto/CoreLib$|+|$","k":"def"},
{"l":"libretto/CoreLib$|+|$.html","n":"right","t":"def right[A]: Functor[[x] =>> A |+| x]","d":"libretto/CoreLib$|+|$","k":"def"},
{"l":"libretto/CoreLib$|+|$.html","n":"rmap","t":"def rmap[A, B, B1](f: B -⚬ B1): A |+| B -⚬ A |+| B1","d":"libretto/CoreLib$|+|$","k":"def"},
{"l":"libretto/CoreLib$|+|$.html","n":"signal","t":"def signal[A, B]: A |+| B -⚬ Done |*| A |+| B","d":"libretto/CoreLib$|+|$","k":"def"},
{"l":"libretto/CoreLib$|+|$.html","n":"signalL","t":"def signalL[A, B]: A |+| B -⚬ Done |*| A |+| B","d":"libretto/CoreLib$|+|$","k":"def"},
{"l":"libretto/CoreLib$|+|$.html","n":"signalR","t":"def signalR[A, B]: A |+| B -⚬ A |+| Done |*| B","d":"libretto/CoreLib$|+|$","k":"def"},
{"l":"libretto/CoreLib$|+|$.html","n":"swap","t":"def swap[A, B]: A |+| B -⚬ B |+| A","d":"libretto/CoreLib$|+|$","k":"def"},
{"l":"libretto/CoreLib$|+|$.html","n":"switchWithL","t":"def switchWithL[A, B, L, C](caseLeft: L |*| A -⚬ C, caseRight: L |*| B -⚬ C): L |*| A |+| B -⚬ C","d":"libretto/CoreLib$|+|$","k":"def"},
{"l":"libretto/CoreLib$|+|$.html","n":"switchWithR","t":"def switchWithR[A, B, R, C](caseLeft: A |*| R -⚬ C, caseRight: B |*| R -⚬ C): A |+| B |*| R -⚬ C","d":"libretto/CoreLib$|+|$","k":"def"},
{"l":"libretto/CoreStreams$.html","n":"CoreStreams","t":"object CoreStreams","d":"libretto/CoreStreams$","k":"object"},
{"l":"libretto/CoreStreams$.html","n":"apply","t":"def apply(dsl: CoreDSL, lib: CoreLib[dsl]): CoreStreams[dsl, lib]","d":"libretto/CoreStreams$","k":"def"},
{"l":"libretto/CoreStreams.html","n":"CoreStreams","t":"class CoreStreams[DSL <: CoreDSL, Lib <: CoreLib[DSL]](val dsl: DSL, val lib: Lib & CoreLib[DSL])","d":"libretto/CoreStreams","k":"class"},
{"l":"libretto/CoreStreams.html","n":"LDemanding","t":"type LDemanding[A] = Need |&| A |*| LSubscriber[A]","d":"libretto/CoreStreams","k":"type"},
{"l":"libretto/CoreStreams.html","n":"LPollable","t":"type LPollable[A] = Rec[[_] =>> LPollableF[A, _$1]]","d":"libretto/CoreStreams","k":"type"},
{"l":"libretto/CoreStreams.html","n":"LPollableF","t":"type LPollableF[A, X] = Done |&| Done |+| A |*| X","d":"libretto/CoreStreams","k":"type"},
{"l":"libretto/CoreStreams.html","n":"LPolled","t":"type LPolled[A] = Done |+| A |*| LPollable[A]","d":"libretto/CoreStreams","k":"type"},
{"l":"libretto/CoreStreams.html","n":"LSubscriber","t":"type LSubscriber[A] = Rec[[_] =>> LSubscriberF[A, _$2]]","d":"libretto/CoreStreams","k":"type"},
{"l":"libretto/CoreStreams.html","n":"LSubscriberF","t":"type LSubscriberF[A, X] = Need |+| Need |&| A |*| X","d":"libretto/CoreStreams","k":"type"},
{"l":"libretto/CoreStreams.html","n":"dsl","t":"val dsl: DSL","d":"libretto/CoreStreams","k":"val"},
{"l":"libretto/CoreStreams.html","n":"lInvertLPollable","t":"def lInvertLPollable[A, B](lInvertElem: One -⚬ B |*| A): One -⚬ LPollable[A] |*| LSubscriber[B]","d":"libretto/CoreStreams","k":"def"},
{"l":"libretto/CoreStreams.html","n":"lInvertLPollableF","t":"def lInvertLPollableF[A, B, x, y](lInvertA: One -⚬ B |*| A, lInvertSub: One -⚬ y |*| x): One -⚬ LPollableF[A, x] |*| LSubscriberF[B, y]","d":"libretto/CoreStreams","k":"def"},
{"l":"libretto/CoreStreams.html","n":"lib","t":"val lib: Lib & CoreLib[DSL]","d":"libretto/CoreStreams","k":"val"},
{"l":"libretto/CoreStreams.html","n":"pollableSubscriberDuality","t":"def pollableSubscriberDuality[A, B](implicit BA: Dual[B, A]): Dual[LPollable[B], LSubscriber[A]]","d":"libretto/CoreStreams","k":"def"},
{"l":"libretto/CoreStreams.html","n":"rInvertLSubscriber","t":"def rInvertLSubscriber[A, B](rInvertElem: A |*| B -⚬ One): LSubscriber[B] |*| LPollable[A] -⚬ One","d":"libretto/CoreStreams","k":"def"},
{"l":"libretto/CoreStreams.html","n":"rInvertLSubscriberF","t":"def rInvertLSubscriberF[A, B, x, y](rInvertA: A |*| B -⚬ One, rInvertSub: x |*| y -⚬ One): LSubscriberF[B, y] |*| LPollableF[A, x] -⚬ One","d":"libretto/CoreStreams","k":"def"},
{"l":"libretto/CoreStreams.html","n":"subscriberPollableDuality","t":"def subscriberPollableDuality[A, B](implicit AB: Dual[A, B]): Dual[LSubscriber[B], LPollable[A]]","d":"libretto/CoreStreams","k":"def"},
{"l":"libretto/CoreStreams$LDemanding$.html","n":"LDemanding","t":"object LDemanding","d":"libretto/CoreStreams$LDemanding$","k":"object"},
{"l":"libretto/CoreStreams$LDemanding$.html","n":"exposeDemand","t":"def exposeDemand[A]: LDemanding[A] -⚬ A |*| LSubscriber[A]","d":"libretto/CoreStreams$LDemanding$","k":"def"},
{"l":"libretto/CoreStreams$LDemanding$.html","n":"negativeLDemanding","t":"def negativeLDemanding[A](implicit A: Negative[A]): Negative[LDemanding[A]]","d":"libretto/CoreStreams$LDemanding$","k":"def"},
{"l":"libretto/CoreStreams$LDemanding$.html","n":"supply","t":"def supply[A, B](rInvert: A |*| B -⚬ One): A |*| LDemanding[B] -⚬ Need |+| LDemanding[B]","d":"libretto/CoreStreams$LDemanding$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"LPollable","t":"object LPollable","d":"libretto/CoreStreams$LPollable$","k":"object"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"close","t":"def close[A]: LPollable[A] -⚬ Done","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"concat","t":"def concat[A]: LPollable[A] |*| LPollable[A] -⚬ LPollable[A]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"concatenate","t":"def concatenate[A]: LPollable[A] |*| Detained[LPollable[A]] -⚬ LPollable[A]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"cons","t":"def cons[A](implicit A: PAffine[A]): A |*| LPollable[A] -⚬ LPollable[A]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"delayBy","t":"def delayBy[A](implicit ev: Positive[A]): Done |*| LPollable[A] -⚬ LPollable[A]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"delayClosedBy","t":"def delayClosedBy[A]: Done |*| LPollable[A] -⚬ LPollable[A]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"delayedPoll","t":"def delayedPoll[A : Positive]: Done |*| LPollable[A] -⚬ LPolled[A]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"detain","t":"def detain[A : Positive]: LPollable[A] -⚬ Detained[LPollable[A]]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"detainClosed","t":"def detainClosed[A]: LPollable[A] -⚬ Detained[LPollable[A]]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"drain","t":"def drain[A](implicit A: PComonoid[A]): LPollable[A] -⚬ Done","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"empty","t":"def empty[A]: Done -⚬ LPollable[A]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"emptyF","t":"def emptyF[A]: Done -⚬ LPollableF[A, LPollable[A]]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"forEachSequentially","t":"def forEachSequentially[A : Positive](f: A -⚬ Done): LPollable[A] -⚬ Done","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"from","t":"def from[A, B](onClose: A -⚬ Done, onPoll: A -⚬ LPolled[B]): A -⚬ LPollable[B]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"fromLList","t":"def fromLList[A](implicit A: PAffine[A]): LList[A] -⚬ LPollable[A]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"map","t":"def map[A, B](f: A -⚬ B): LPollable[A] -⚬ LPollable[B]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"merge","t":"def merge[A](implicit A1: Positive[A], A2: PAffine[A]): LPollable[A] |*| LPollable[A] -⚬ LPollable[A]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"mergeAll","t":"def mergeAll[A](implicit A1: Positive[A], A2: PAffine[A]): LList[LPollable[A]] -⚬ LPollable[A]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"negativeLPollable","t":"def negativeLPollable[A](implicit A: Positive[A]): Negative[LPollable[A]]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"negativeSignaling","t":"def negativeSignaling[A]: Negative[LPollable[A]]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"notifyAction","t":"def notifyAction[A]: Pong |*| LPollable[A] -⚬ LPollable[A]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"of","t":"def of[A](as: One -⚬ A*)(implicit A: PAffine[A]): One -⚬ LPollable[A]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"pAffineLPollable","t":"def pAffineLPollable[A]: PAffine[LPollable[A]]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"pack","t":"def pack[A]: Done |&| LPolled[A] -⚬ LPollable[A]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"partition","t":"def partition[A, B]: LPollable[A |+| B] -⚬ LPollable[A] |*| LPollable[B]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"poll","t":"def poll[A]: LPollable[A] -⚬ LPolled[A]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"positiveJunction","t":"def positiveJunction[A](implicit A: Positive[A]): Positive[LPollable[A]]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"repeatedly","t":"def repeatedly[A](f: Done -⚬ A): Done -⚬ LPollable[A]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPollable$.html","n":"unpack","t":"def unpack[A]: LPollable[A] -⚬ Done |&| LPolled[A]","d":"libretto/CoreStreams$LPollable$","k":"def"},
{"l":"libretto/CoreStreams$LPolled$.html","n":"LPolled","t":"object LPolled","d":"libretto/CoreStreams$LPolled$","k":"object"},
{"l":"libretto/CoreStreams$LPolled$.html","n":"close","t":"def close[A](neglect: A -⚬ Done): LPolled[A] -⚬ Done","d":"libretto/CoreStreams$LPolled$","k":"def"},
{"l":"libretto/CoreStreams$LPolled$.html","n":"cons","t":"def cons[A]: A |*| LPollable[A] -⚬ LPolled[A]","d":"libretto/CoreStreams$LPolled$","k":"def"},
{"l":"libretto/CoreStreams$LPolled$.html","n":"delayBy","t":"def delayBy[A](implicit ev: Positive[A]): Done |*| LPolled[A] -⚬ LPolled[A]","d":"libretto/CoreStreams$LPolled$","k":"def"},
{"l":"libretto/CoreStreams$LPolled$.html","n":"delayClosedBy","t":"def delayClosedBy[A](delayLPollableClosed: Done |*| LPollable[A] -⚬ LPollable[A]): Done |*| LPolled[A] -⚬ LPolled[A]","d":"libretto/CoreStreams$LPolled$","k":"def"},
{"l":"libretto/CoreStreams$LPolled$.html","n":"empty","t":"def empty[A]: Done -⚬ LPolled[A]","d":"libretto/CoreStreams$LPolled$","k":"def"},
{"l":"libretto/CoreStreams$LPolled$.html","n":"feedTo","t":"def feedTo[A, B](f: A |*| B -⚬ PMaybe[B]): LPolled[A] |*| B -⚬ Done |*| Maybe[B]","d":"libretto/CoreStreams$LPolled$","k":"def"},
{"l":"libretto/CoreStreams$LPolled$.html","n":"merge","t":"def merge[A](mergePollables: LPollable[A] |*| LPollable[A] -⚬ LPollable[A])(implicit A1: Positive[A], A2: PAffine[A]): LPolled[A] |*| LPolled[A] -⚬ LPolled[A]","d":"libretto/CoreStreams$LPolled$","k":"def"},
{"l":"libretto/CoreStreams$LPolled$.html","n":"positiveLPolled","t":"def positiveLPolled[A](implicit A: Positive[A]): Positive[LPolled[A]]","d":"libretto/CoreStreams$LPolled$","k":"def"},
{"l":"libretto/CoreStreams$LPolled$.html","n":"switch","t":"def switch[A, R](caseEmpty: Done -⚬ R, caseCons: A |*| LPollable[A] -⚬ R): LPolled[A] -⚬ R","d":"libretto/CoreStreams$LPolled$","k":"def"},
{"l":"libretto/CoreStreams$LPolled$.html","n":"unpoll","t":"def unpoll[A](implicit A: PAffine[A]): LPolled[A] -⚬ LPollable[A]","d":"libretto/CoreStreams$LPolled$","k":"def"},
{"l":"libretto/CoreStreams$LSubscriber$.html","n":"LSubscriber","t":"object LSubscriber","d":"libretto/CoreStreams$LSubscriber$","k":"object"},
{"l":"libretto/CoreStreams$LSubscriber$.html","n":"close","t":"def close[A]: LSubscriber[A] -⚬ Need","d":"libretto/CoreStreams$LSubscriber$","k":"def"},
{"l":"libretto/CoreStreams$LSubscriber$.html","n":"nAffineLSubscriber","t":"def nAffineLSubscriber[A]: NAffine[LSubscriber[A]]","d":"libretto/CoreStreams$LSubscriber$","k":"def"},
{"l":"libretto/CoreStreams$LSubscriber$.html","n":"positiveLSubscriber","t":"def positiveLSubscriber[A](implicit A: Negative[A]): Positive[LSubscriber[A]]","d":"libretto/CoreStreams$LSubscriber$","k":"def"},
{"l":"libretto/CoreStreams$LSubscriber$.html","n":"positiveLSubscriberF","t":"def positiveLSubscriberF[A, X](implicit A: Negative[A]): Positive[LSubscriberF[A, X]]","d":"libretto/CoreStreams$LSubscriber$","k":"def"},
{"l":"libretto/CoreStreams$LSubscriber$.html","n":"switch","t":"def switch[A, R](onDemand: LDemanding[A] -⚬ R, onUnsubscribe: Need -⚬ R): LSubscriber[A] -⚬ R","d":"libretto/CoreStreams$LSubscriber$","k":"def"},
{"l":"libretto/CoreStreams$LSubscriber$.html","n":"universalPositiveLSubscriberF","t":"def universalPositiveLSubscriberF[A](implicit A: Negative[A]): ForAll[[x] =>> Positive[LSubscriberF[A, x]]]","d":"libretto/CoreStreams$LSubscriber$","k":"def"},
{"l":"libretto/CoreStreams$LSubscriber$.html","n":"unsubscribed","t":"def unsubscribed[A]: Need -⚬ LSubscriber[A]","d":"libretto/CoreStreams$LSubscriber$","k":"def"},
{"l":"libretto/CrashDSL.html","n":"CrashDSL","t":"trait CrashDSL extends CoreDSL","d":"libretto/CrashDSL","k":"trait"},
{"l":"libretto/CrashDSL.html","n":"crashNow","t":"def crashNow[A, B](msg: String): A -⚬ B","d":"libretto/CrashDSL","k":"def"},
{"l":"libretto/CrashDSL.html","n":"crashWhenDone","t":"def crashWhenDone[A, B](msg: String): Done |*| A -⚬ B","d":"libretto/CrashDSL","k":"def"},
{"l":"libretto/CrashDSL.html","n":"crashWhenNeed","t":"def crashWhenNeed[A, B](msg: String): A -⚬ Need |*| B","d":"libretto/CrashDSL","k":"def"},
{"l":"libretto/CrashDSL.html","n":"crashd","t":"def crashd(msg: String): Done -⚬ Done","d":"libretto/CrashDSL","k":"def"},
{"l":"libretto/CrashDSL.html","n":"crashn","t":"def crashn(msg: String): Need -⚬ Need","d":"libretto/CrashDSL","k":"def"},
{"l":"libretto/Equal.html","n":"Equal","t":"class Equal[A](a1: A, a2: A)","d":"libretto/Equal","k":"class"},
{"l":"libretto/ForAll.html","n":"ForAll","t":"trait ForAll[+F[_]]","d":"libretto/ForAll","k":"trait"},
{"l":"libretto/ForAll.html","n":"apply","t":"def apply[A]: F[A]","d":"libretto/ForAll","k":"def"},
{"l":"libretto/InvertDSL.html","n":"InvertDSL","t":"trait InvertDSL extends ClosedDSL","d":"libretto/InvertDSL","k":"trait"},
{"l":"libretto/InvertDSL.html","n":"-","t":"type -[A]","d":"libretto/InvertDSL","k":"type"},
{"l":"libretto/InvertDSL.html","n":"=⚬","t":"type =⚬[A, B] = -[A] |*| B","d":"libretto/InvertDSL","k":"type"},
{"l":"libretto/InvertDSL.html","n":"DemandExprOps","t":"def DemandExprOps[B](expr: $[-[B]]): DemandExprOps[B]","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"backvert","t":"def backvert[A]: A |*| -[A] -⚬ One","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"contrapositive","t":"def contrapositive[A, B](f: A -⚬ B): -[B] -⚬ -[A]","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"demand","t":"def demand[A]: One -⚬ -[A] |*| A","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"demandChoice","t":"def demandChoice[A, B]: -[A] |+| -[B] -⚬ -[A |&| B]","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"demandChosen","t":"def demandChosen[A, B]: -[A |&| B] -⚬ -[A] |+| -[B]","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"demandEither","t":"def demandEither[A, B]: -[A] |&| -[B] -⚬ -[A |+| B]","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"demandSeparately","t":"def demandSeparately[A, B]: -[A |*| B] -⚬ -[A] |*| -[B]","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"demandTogether","t":"def demandTogether[A, B]: -[A] |*| -[B] -⚬ -[A |*| B]","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"die","t":"def die[A]: -[-[A]] -⚬ A","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"dii","t":"def dii[A]: A -⚬ -[-[A]]","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"distributeInversion","t":"def distributeInversion[A, B]: -[A |*| B] -⚬ -[A] |*| -[B]","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"distributeInversionInto_|&|","t":"def distributeInversionInto_|&|[A, B]: -[A |&| B] -⚬ -[A] |+| -[B]","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"distributeInversionInto_|+|","t":"def distributeInversionInto_|+|[A, B]: -[A |+| B] -⚬ -[A] |&| -[B]","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"doneAsInvertedNeed","t":"def doneAsInvertedNeed: Done -⚬ -[Need]","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"doubleDemandElimination","t":"def doubleDemandElimination[A]: -[-[A]] -⚬ A","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"doubleDemandIntroduction","t":"def doubleDemandIntroduction[A]: A -⚬ -[-[A]]","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"factorInversionOutOf_|&|","t":"def factorInversionOutOf_|&|[A, B]: -[A] |&| -[B] -⚬ -[A |+| B]","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"factorInversionOutOf_|+|","t":"def factorInversionOutOf_|+|[A, B]: -[A] |+| -[B] -⚬ -[A |&| B]","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"factorOutInversion","t":"def factorOutInversion[A, B]: -[A] |*| -[B] -⚬ -[A |*| B]","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"forevert","t":"def forevert[A]: One -⚬ -[A] |*| A","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"invertClosure","t":"def invertClosure[A, B]: -[A =⚬ B] -⚬ B =⚬ A","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"invertedDoneAsNeed","t":"def invertedDoneAsNeed: -[Done] -⚬ Need","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"invertedNeedAsDone","t":"def invertedNeedAsDone: -[Need] -⚬ Done","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"invertedPingAsPong","t":"def invertedPingAsPong: -[Ping] -⚬ Pong","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"invertedPongAsPing","t":"def invertedPongAsPing: -[Pong] -⚬ Ping","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"needAsInvertedDone","t":"def needAsInvertedDone: Need -⚬ -[Done]","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"packDemand","t":"def packDemand[F[_]]: -[F[Rec[F]]] -⚬ -[Rec[F]]","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"pingAsInvertedPong","t":"def pingAsInvertedPong: Ping -⚬ -[Pong]","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"pongAsInvertedPing","t":"def pongAsInvertedPing: Pong -⚬ -[Ping]","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"supply","t":"def supply[A]: A |*| -[A] -⚬ One","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"toChoiceOfDemands","t":"def toChoiceOfDemands[A, B]: -[A |+| B] -⚬ -[A] |&| -[B]","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"unContrapositive","t":"def unContrapositive[A, B](f: -[A] -⚬ -[B]): B -⚬ A","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"unInvertClosure","t":"def unInvertClosure[A, B]: A =⚬ B -⚬ -[B =⚬ A]","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL.html","n":"unpackDemand","t":"def unpackDemand[F[_]]: -[Rec[F]] -⚬ -[F[Rec[F]]]","d":"libretto/InvertDSL","k":"def"},
{"l":"libretto/InvertDSL$DemandExprOps.html","n":"DemandExprOps","t":"class DemandExprOps[B](expr: $[-[B]])","d":"libretto/InvertDSL$DemandExprOps","k":"class"},
{"l":"libretto/InvertDSL$DemandExprOps.html","n":"contramap","t":"def contramap[A](f: A -⚬ B)(implicit file: File, line: Line): $[-[A]]","d":"libretto/InvertDSL$DemandExprOps","k":"def"},
{"l":"libretto/InvertLib$.html","n":"InvertLib","t":"object InvertLib","d":"libretto/InvertLib$","k":"object"},
{"l":"libretto/InvertLib$.html","n":"apply","t":"def apply(coreLib: CoreLib[_ <: InvertDSL]): InvertLib[coreLib]","d":"libretto/InvertLib$","k":"def"},
{"l":"libretto/InvertLib.html","n":"InvertLib","t":"class InvertLib[CoreLib <: CoreLib[_ <: InvertDSL]](val coreLib: CoreLib)","d":"libretto/InvertLib","k":"class"},
{"l":"libretto/InvertLib.html","n":"contraFunctoDemand","t":"val contraFunctoDemand: ContraFunctor[-]","d":"libretto/InvertLib","k":"val"},
{"l":"libretto/InvertLib.html","n":"coreLib","t":"val coreLib: CoreLib","d":"libretto/InvertLib","k":"val"},
{"l":"libretto/InvertLib.html","n":"pool","t":"def pool[A : Positive]: LList1[A] -⚬ Unlimited[A |*| -[A]] |*| LList1[A]","d":"libretto/InvertLib","k":"def"},
{"l":"libretto/Runner.html","n":"Runner","t":"trait Runner[DSL <: CoreDSL, F[_]]","d":"libretto/Runner","k":"trait"},
{"l":"libretto/Runner.html","n":"dsl","t":"val dsl: DSL","d":"libretto/Runner","k":"val"},
{"l":"libretto/Runner.html","n":"run","t":"def run(prg: Done -⚬ Done): F[Unit]","d":"libretto/Runner","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"ScalaDSL","t":"trait ScalaDSL extends TimerDSL with CrashDSL with InvertDSL","d":"libretto/ScalaDSL","k":"trait"},
{"l":"libretto/ScalaDSL.html","n":"Neg","t":"type Neg[A] = -[Val[A]]","d":"libretto/ScalaDSL","k":"type"},
{"l":"libretto/ScalaDSL.html","n":"Res","t":"type Res[A]","d":"libretto/ScalaDSL","k":"type"},
{"l":"libretto/ScalaDSL.html","n":"Val","t":"type Val[A]","d":"libretto/ScalaDSL","k":"type"},
{"l":"libretto/ScalaDSL.html","n":"acquire","t":"def acquire[A, R, B](acquire: A => (R, B), release: Option[R => Unit]): Val[A] -⚬ Res[R] |*| Val[B]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"acquireAsync","t":"def acquireAsync[A, R, B](acquire: A => Async[(R, B)], release: Option[R => Async[Unit]]): Val[A] -⚬ Res[R] |*| Val[B]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"blocking","t":"def blocking[A, B](f: A => B): Val[A] -⚬ Val[B]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"constNeg","t":"def constNeg[A](a: A): Neg[A] -⚬ Need","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"constVal","t":"def constVal[A](a: A): Done -⚬ Val[A]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"contramapNeg","t":"def contramapNeg[A, B](f: A => B): Neg[B] -⚬ Neg[A]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"debugPrint","t":"def debugPrint(msg: String): Ping -⚬ One","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"delay","t":"def delay: Val[FiniteDuration] -⚬ Done","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"delayNeed","t":"def delayNeed: Need -⚬ Neg[FiniteDuration]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"dup","t":"def dup[A]: Val[A] -⚬ Val[A] |*| Val[A]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"dupNeg","t":"def dupNeg[A]: Neg[A] |*| Neg[A] -⚬ Neg[A]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"effect","t":"def effect[R, A, B](f: (R, A) => B): Res[R] |*| Val[A] -⚬ Res[R] |*| Val[B]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"effectAsync","t":"def effectAsync[R, A, B](f: (R, A) => Async[B]): Res[R] |*| Val[A] -⚬ Res[R] |*| Val[B]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"effectWr","t":"def effectWr[R, A](f: (R, A) => Unit): Res[R] |*| Val[A] -⚬ Res[R]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"effectWrAsync","t":"def effectWrAsync[R, A](f: (R, A) => Async[Unit]): Res[R] |*| Val[A] -⚬ Res[R]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"fulfill","t":"def fulfill[A]: Val[A] |*| Neg[A] -⚬ One","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"inflate","t":"def inflate[A]: Need -⚬ Neg[A]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"liftEither","t":"def liftEither[A, B]: Val[Either[A, B]] -⚬ Val[A] |+| Val[B]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"liftNegPair","t":"def liftNegPair[A, B]: Neg[(A, B)] -⚬ Neg[A] |*| Neg[B]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"liftPair","t":"def liftPair[A, B]: Val[(A, B)] -⚬ Val[A] |*| Val[B]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"mapVal","t":"def mapVal[A, B](f: A => B): Val[A] -⚬ Val[B]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"neglect","t":"def neglect[A]: Val[A] -⚬ Done","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"notifyNeg","t":"def notifyNeg[A]: Pong |*| Neg[A] -⚬ Neg[A]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"notifyVal","t":"def notifyVal[A]: Val[A] -⚬ Ping |*| Val[A]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"promise","t":"def promise[A]: One -⚬ Neg[A] |*| Val[A]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"release","t":"def release[R]: Res[R] -⚬ Done","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"release","t":"def release[R, A, B](f: (R, A) => B): Res[R] |*| Val[A] -⚬ Val[B]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"releaseAsync","t":"def releaseAsync[R, A, B](f: (R, A) => Async[B]): Res[R] |*| Val[A] -⚬ Val[B]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"splitResource","t":"def splitResource[R, A, S, T, B](f: (R, A) => (S, T, B), release1: Option[S => Unit], release2: Option[T => Unit]): Res[R] |*| Val[A] -⚬ Res[S] |*| Res[T] |*| Val[B]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"splitResourceAsync","t":"def splitResourceAsync[R, A, S, T, B](f: (R, A) => Async[(S, T, B)], release1: Option[S => Async[Unit]], release2: Option[T => Async[Unit]]): Res[R] |*| Val[A] -⚬ Res[S] |*| Res[T] |*| Val[B]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"transformResource","t":"def transformResource[R, A, S, B](f: (R, A) => (S, B), release: Option[S => Unit]): Res[R] |*| Val[A] -⚬ Res[S] |*| Val[B]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"transformResourceAsync","t":"def transformResourceAsync[R, A, S, B](f: (R, A) => Async[(S, B)], release: Option[S => Async[Unit]]): Res[R] |*| Val[A] -⚬ Res[S] |*| Val[B]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"tryAcquire","t":"def tryAcquire[A, R, B, E](acquire: A => Either[E, (R, B)], release: Option[R => Unit]): Val[A] -⚬ Val[E] |+| Res[R] |*| Val[B]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"tryAcquireAsync","t":"def tryAcquireAsync[A, R, B, E](acquire: A => Async[Either[E, (R, B)]], release: Option[R => Async[Unit]]): Val[A] -⚬ Val[E] |+| Res[R] |*| Val[B]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"trySplitResource","t":"def trySplitResource[R, A, S, T, B, E](f: (R, A) => Either[E, (S, T, B)], release1: Option[S => Unit], release2: Option[T => Unit]): Res[R] |*| Val[A] -⚬ Val[E] |+| Res[S] |*| Res[T] |*| Val[B]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"trySplitResourceAsync","t":"def trySplitResourceAsync[R, A, S, T, B, E](f: (R, A) => Async[Either[E, (S, T, B)]], release1: Option[S => Async[Unit]], release2: Option[T => Async[Unit]]): Res[R] |*| Val[A] -⚬ Val[E] |+| Res[S] |*| Res[T] |*| Val[B]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"tryTransformResource","t":"def tryTransformResource[R, A, S, B, E](f: (R, A) => Either[E, (S, B)], release: Option[S => Unit]): Res[R] |*| Val[A] -⚬ Val[E] |+| Res[S] |*| Val[B]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"tryTransformResourceAsync","t":"def tryTransformResourceAsync[R, A, S, B, E](f: (R, A) => Async[Either[E, (S, B)]], release: Option[S => Async[Unit]]): Res[R] |*| Val[A] -⚬ Val[E] |+| Res[S] |*| Val[B]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"unliftEither","t":"def unliftEither[A, B]: Val[A] |+| Val[B] -⚬ Val[Either[A, B]]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"unliftNegPair","t":"def unliftNegPair[A, B]: Neg[A] |*| Neg[B] -⚬ Neg[(A, B)]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaDSL.html","n":"unliftPair","t":"def unliftPair[A, B]: Val[A] |*| Val[B] -⚬ Val[(A, B)]","d":"libretto/ScalaDSL","k":"def"},
{"l":"libretto/ScalaLib$.html","n":"ScalaLib","t":"object ScalaLib","d":"libretto/ScalaLib$","k":"object"},
{"l":"libretto/ScalaLib$.html","n":"apply","t":"def apply(dsl: ScalaDSL, coreLib: CoreLib[dsl]): ScalaLib[dsl, coreLib]","d":"libretto/ScalaLib$","k":"def"},
{"l":"libretto/ScalaLib.html","n":"ScalaLib","t":"class ScalaLib[DSL <: ScalaDSL, CoreLib <: CoreLib[DSL]](val dsl: DSL, val coreLib: CoreLib & CoreLib[DSL])","d":"libretto/ScalaLib","k":"class"},
{"l":"libretto/ScalaLib.html","n":"*","t":"def *[B](b: $[Val[B]]): $[Val[(A, B)]]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"RefCounted","t":"type RefCounted[R]","d":"libretto/ScalaLib","k":"type"},
{"l":"libretto/ScalaLib.html","n":"acquire0","t":"def acquire0[A, R](acquire: A => R, release: Option[R => Unit]): Val[A] -⚬ Res[R]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"acquireAsync0","t":"def acquireAsync0[A, R](acquire: A => Async[R], release: Option[R => Async[Unit]]): Val[A] -⚬ Res[R]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"alsoPrintLine","t":"def alsoPrintLine: Val[String] -⚬ Val[String]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"alsoPrintLine","t":"def alsoPrintLine[A](f: A => String): Val[A] -⚬ Val[A]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"alsoPrintLine","t":"def alsoPrintLine[A](s: String)(implicit S: Positive[A], J: Positive[A]): A -⚬ A","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"comparableVal","t":"def comparableVal[A](implicit A: Ordering[A]): Comparable[Val[A], Val[A]]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"const","t":"def const[A](a: A): One -⚬ Val[A]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"constList","t":"def constList[A](as: List[A]): One -⚬ LList[Val[A]]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"constList1","t":"def constList1[A](a: A, as: List[A]): Done -⚬ LList1[Val[A]]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"constList1","t":"def constList1[A](as: ::[A]): Done -⚬ LList1[Val[A]]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"constList1Of","t":"def constList1Of[A](a: A, as: A*): Done -⚬ LList1[Val[A]]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"constListOf","t":"def constListOf[A](as: A*): One -⚬ LList[Val[A]]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"constListOf1","t":"def constListOf1[A](a: A, as: A*): Done -⚬ LList[Val[A]]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"coreLib","t":"val coreLib: CoreLib & CoreLib[DSL]","d":"libretto/ScalaLib","k":"val"},
{"l":"libretto/ScalaLib.html","n":"delayVal","t":"def delayVal[A](by: Done -⚬ Done): Val[A] -⚬ Val[A]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"delayVal","t":"def delayVal[A](by: FiniteDuration): Val[A] -⚬ Val[A]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"dsl","t":"val dsl: DSL","d":"libretto/ScalaLib","k":"val"},
{"l":"libretto/ScalaLib.html","n":"effect0","t":"def effect0[R](f: R => Unit): Res[R] -⚬ Res[R]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"effectAsync0","t":"def effectAsync0[R](f: R => Async[Unit]): Res[R] -⚬ Res[R]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"effectRd","t":"def effectRd[R, B](f: R => B): Res[R] -⚬ Res[R] |*| Val[B]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"equivBy","t":"def equivBy[A, B, K](aKey: Getter[A, Val[K]], bKey: Getter[B, Val[K]])(implicit ord: Ordering[K]): A |*| B -⚬ A |*| B |+| A |*| B","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"gtBy","t":"def gtBy[A, B, K](aKey: Getter[A, Val[K]], bKey: Getter[B, Val[K]])(implicit ord: Ordering[K]): A |*| B -⚬ A |*| B |+| A |*| B","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"gteqBy","t":"def gteqBy[A, B, K](aKey: Getter[A, Val[K]], bKey: Getter[B, Val[K]])(implicit ord: Ordering[K]): A |*| B -⚬ A |*| B |+| A |*| B","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"isEq","t":"def isEq[A](implicit ord: Ordering[A]): Val[A] |*| Val[A] -⚬ Bool","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"isGt","t":"def isGt[A](implicit ord: Ordering[A]): Val[A] |*| Val[A] -⚬ Bool","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"isGteq","t":"def isGteq[A](implicit ord: Ordering[A]): Val[A] |*| Val[A] -⚬ Bool","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"isLt","t":"def isLt[A](implicit ord: Ordering[A]): Val[A] |*| Val[A] -⚬ Bool","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"isLteq","t":"def isLteq[A](implicit ord: Ordering[A]): Val[A] |*| Val[A] -⚬ Bool","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"junctionNeg","t":"def junctionNeg[A]: Negative[Neg[A]]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"junctionVal","t":"def junctionVal[A]: Positive[Val[A]]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"liftBipredicate","t":"def liftBipredicate[A, B](p: (A, B) => Boolean): Val[A] |*| Val[B] -⚬ Bool","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"liftBoolean","t":"def liftBoolean: Val[Boolean] -⚬ Bool","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"ltBy","t":"def ltBy[A, B, K](aKey: Getter[A, Val[K]], bKey: Getter[B, Val[K]])(implicit ord: Ordering[K]): A |*| B -⚬ A |*| B |+| A |*| B","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"lteqBy","t":"def lteqBy[A, B, K](aKey: Getter[A, Val[K]], bKey: Getter[B, Val[K]])(implicit ord: Ordering[K]): A |*| B -⚬ A |*| B |+| A |*| B","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"mVal","t":"def mVal[A, R](init: A => R): Val[A] -⚬ Res[R]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"maybeToOption","t":"def maybeToOption[A]: Maybe[Val[A]] -⚬ Val[Option[A]]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"mergeDemands","t":"def mergeDemands[A]: Neg[A] |*| Neg[A] -⚬ Neg[A]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"nMonoidNeg","t":"def nMonoidNeg[A]: NMonoid[Neg[A]]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"negValDuality","t":"def negValDuality[A]: Dual[Neg[A], Val[A]]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"optionToPMaybe","t":"def optionToPMaybe[A]: Val[Option[A]] -⚬ PMaybe[Val[A]]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"pComonoidVal","t":"def pComonoidVal[A]: PComonoid[Val[A]]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"pMaybeToOption","t":"def pMaybeToOption[A]: PMaybe[Val[A]] -⚬ Val[Option[A]]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"printLine","t":"def printLine: Val[String] -⚬ Done","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"printLine","t":"def printLine(s: String): Done -⚬ Done","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"printLine","t":"def printLine[A](f: A => String): Val[A] -⚬ Done","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"putStr","t":"def putStr: Val[String] -⚬ Done","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"putStr","t":"def putStr(s: String): Done -⚬ Done","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"readLine","t":"def readLine: Done -⚬ Val[String]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"release0","t":"def release0[R, B](release: R => B): Res[R] -⚬ Val[B]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"releaseAsync0","t":"def releaseAsync0[R, B](release: R => Async[B]): Res[R] -⚬ Val[B]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"signalingJunctionNegativeNeg","t":"def signalingJunctionNegativeNeg[A]: Negative[Neg[A]]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"signalingJunctionPositiveVal","t":"def signalingJunctionPositiveVal[A]: Positive[Val[A]]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"signalingNeg","t":"def signalingNeg[A]: Negative[Neg[A]]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"signalingVal","t":"def signalingVal[A]: Positive[Val[A]]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"sortBy","t":"def sortBy[A, B, K : Ordering](aKey: Getter[A, Val[K]], bKey: Getter[B, Val[K]]): A |*| B -⚬ A |*| B |+| B |*| A","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"splitResource0","t":"def splitResource0[R, S, T](f: R => (S, T), release1: Option[S => Unit], release2: Option[T => Unit]): Res[R] -⚬ Res[S] |*| Res[T]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"splitResourceAsync0","t":"def splitResourceAsync0[R, S, T](f: R => Async[(S, T)], release1: Option[S => Async[Unit]], release2: Option[T => Async[Unit]]): Res[R] -⚬ Res[S] |*| Res[T]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"testByVals","t":"def testByVals[A, B, K](aKey: Getter[A, Val[K]], bKey: Getter[B, Val[K]], pred: (K, K) => Boolean): A |*| B -⚬ A |*| B |+| A |*| B","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"toScalaList","t":"def toScalaList[A]: LList[Val[A]] -⚬ Val[List[A]]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"transformResource0","t":"def transformResource0[R, S](f: R => S, release: Option[S => Unit]): Res[R] -⚬ Res[S]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"transformResourceAsync0","t":"def transformResourceAsync0[R, S](f: R => Async[S], release: Option[S => Async[Unit]]): Res[R] -⚬ Res[S]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"unliftBoolean","t":"def unliftBoolean: Bool -⚬ Val[Boolean]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib.html","n":"valNegDuality","t":"def valNegDuality[A]: Dual[Val[A], Neg[A]]","d":"libretto/ScalaLib","k":"def"},
{"l":"libretto/ScalaLib$RefCounted$.html","n":"RefCounted","t":"object RefCounted","d":"libretto/ScalaLib$RefCounted$","k":"object"},
{"l":"libretto/ScalaLib$RefCounted$.html","n":"acquire","t":"def acquire[A, R, B](acquire: A => (R, B), release: R => Unit): Val[A] -⚬ RefCounted[R] |*| Val[B]","d":"libretto/ScalaLib$RefCounted$","k":"def"},
{"l":"libretto/ScalaLib$RefCounted$.html","n":"acquire0","t":"def acquire0[A, R](acquire: A => R, release: R => Unit): Val[A] -⚬ RefCounted[R]","d":"libretto/ScalaLib$RefCounted$","k":"def"},
{"l":"libretto/ScalaLib$RefCounted$.html","n":"dupRef","t":"def dupRef[R]: RefCounted[R] -⚬ RefCounted[R] |*| RefCounted[R]","d":"libretto/ScalaLib$RefCounted$","k":"def"},
{"l":"libretto/ScalaLib$RefCounted$.html","n":"effect","t":"def effect[R, A, B](f: (R, A) => B): RefCounted[R] |*| Val[A] -⚬ RefCounted[R] |*| Val[B]","d":"libretto/ScalaLib$RefCounted$","k":"def"},
{"l":"libretto/ScalaLib$RefCounted$.html","n":"effectAsync","t":"def effectAsync[R, A, B](f: (R, A) => Async[B]): RefCounted[R] |*| Val[A] -⚬ RefCounted[R] |*| Val[B]","d":"libretto/ScalaLib$RefCounted$","k":"def"},
{"l":"libretto/ScalaLib$RefCounted$.html","n":"release","t":"def release[R]: RefCounted[R] -⚬ Done","d":"libretto/ScalaLib$RefCounted$","k":"def"},
{"l":"libretto/ScalaLib$Val$.html","n":"Val","t":"object Val","d":"libretto/ScalaLib$Val$","k":"object"},
{"l":"libretto/ScalaLib$Val$.html","n":"isEq","t":"def isEq[A](a: A): Val[A] -⚬ Val[a] |+| Val[A]","d":"libretto/ScalaLib$Val$","k":"def"},
{"l":"libretto/ScalaLib$Val$.html","n":"switch","t":"def switch[A, B](cases: List[(A, Done -⚬ B)]): Val[A] -⚬ PMaybe[B]","d":"libretto/ScalaLib$Val$","k":"def"},
{"l":"libretto/ScalaLib$ValMatcher$.html","n":"ValMatcher","t":"object ValMatcher","d":"libretto/ScalaLib$ValMatcher$","k":"object"},
{"l":"libretto/ScalaLib$ValMatcher$.html","n":"caseAny","t":"def caseAny[V, A, R](f: Val[V] |*| A -⚬ R): ValMatcher[V, V, A, R]","d":"libretto/ScalaLib$ValMatcher$","k":"def"},
{"l":"libretto/ScalaLib$ValMatcher$.html","n":"caseEq","t":"def caseEq[V, A, R](v: V)(f: Val[v] |*| A -⚬ R): ValMatcher[Any, v, A, R]","d":"libretto/ScalaLib$ValMatcher$","k":"def"},
{"l":"libretto/ScalaLib$ValMatcher.html","n":"ValMatcher","t":"trait ValMatcher[-U >: V, V, A, R]","d":"libretto/ScalaLib$ValMatcher","k":"trait"},
{"l":"libretto/ScalaLib$ValMatcher.html","n":"&","t":"def &[W >: V <: U, V2 <: W, B](that: ValMatcher[W, V2, B, R]): ValMatcher[W, V | V2, A |&| B, R]","d":"libretto/ScalaLib$ValMatcher","k":"def"},
{"l":"libretto/ScalaLib$ValMatcher.html","n":"contramap","t":"def contramap[Z](f: Z -⚬ A): ValMatcher[U, V, Z, R]","d":"libretto/ScalaLib$ValMatcher","k":"def"},
{"l":"libretto/ScalaLib$ValMatcher.html","n":"contramapVal","t":"def contramapVal[W](f: W => V): ValMatcher[W, W, A, R]","d":"libretto/ScalaLib$ValMatcher","k":"def"},
{"l":"libretto/ScalaLib$ValMatcher.html","n":"get","t":"def get: Val[V] |*| A -⚬ R","d":"libretto/ScalaLib$ValMatcher","k":"def"},
{"l":"libretto/ScalaLib$ValMatcher.html","n":"map","t":"def map[S](f: R -⚬ S): ValMatcher[U, V, A, S]","d":"libretto/ScalaLib$ValMatcher","k":"def"},
{"l":"libretto/ScalaLib$ValMatcher.html","n":"otherwise","t":"def otherwise[W >: V <: U](f: Val[W] |*| A -⚬ R): ValMatcher[W, W, A, R]","d":"libretto/ScalaLib$ValMatcher","k":"def"},
{"l":"libretto/ScalaLib$ValMatcher.html","n":"typeTest","t":"def typeTest: TypeTest[U, V]","d":"libretto/ScalaLib$ValMatcher","k":"def"},
{"l":"libretto/ScalaLib$ValMatcher.html","n":"|","t":"def |[W >: V <: U, V2 <: W](that: ValMatcher[W, V2, A, R]): ValMatcher[W, V | V2, A, R]","d":"libretto/ScalaLib$ValMatcher","k":"def"},
{"l":"libretto/ScalaRunner.html","n":"ScalaRunner","t":"trait ScalaRunner[DSL <: ScalaDSL, F[_]] extends Runner[DSL, F]","d":"libretto/ScalaRunner","k":"trait"},
{"l":"libretto/ScalaRunner.html","n":"dsl","t":"val dsl: DSL","d":"libretto/ScalaRunner","k":"val"},
{"l":"libretto/ScalaRunner.html","n":"runScala","t":"def runScala[A](prg: Done -⚬ Val[A]): F[A]","d":"libretto/ScalaRunner","k":"def"},
{"l":"libretto/ScalaStreams$.html","n":"ScalaStreams","t":"object ScalaStreams","d":"libretto/ScalaStreams$","k":"object"},
{"l":"libretto/ScalaStreams$.html","n":"apply","t":"def apply(dsl: ScalaDSL, coreLib: CoreLib[dsl], scalaLib: ScalaLib[dsl, coreLib], coreStreams: CoreStreams[dsl, coreLib]): ScalaStreams[dsl, coreLib, scalaLib, coreStreams]","d":"libretto/ScalaStreams$","k":"def"},
{"l":"libretto/ScalaStreams.html","n":"ScalaStreams","t":"class ScalaStreams[DSL <: ScalaDSL, Lib <: CoreLib[DSL], SLib <: ScalaLib[DSL, Lib], Streams <: CoreStreams[DSL, Lib]](val dsl: DSL, val coreLib: Lib & CoreLib[DSL], val scalaLib: SLib & ScalaLib[DSL, Lib & CoreLib[DSL]], val coreStreams: Streams & CoreStreams[DSL, Lib & CoreLib[DSL]])","d":"libretto/ScalaStreams","k":"class"},
{"l":"libretto/ScalaStreams.html","n":"Consumer","t":"type Consumer[A] = Rec[[_] =>> ConsumerF[A, _$2]]","d":"libretto/ScalaStreams","k":"type"},
{"l":"libretto/ScalaStreams.html","n":"ConsumerF","t":"type ConsumerF[A, X] = Need |&| Need |+| Neg[A] |*| X","d":"libretto/ScalaStreams","k":"type"},
{"l":"libretto/ScalaStreams.html","n":"Demanding","t":"type Demanding[A] = LDemanding[Neg[A]]","d":"libretto/ScalaStreams","k":"type"},
{"l":"libretto/ScalaStreams.html","n":"Pollable","t":"type Pollable[A] = LPollable[Val[A]]","d":"libretto/ScalaStreams","k":"type"},
{"l":"libretto/ScalaStreams.html","n":"PollableF","t":"type PollableF[A, X] = LPollableF[Val[A], X]","d":"libretto/ScalaStreams","k":"type"},
{"l":"libretto/ScalaStreams.html","n":"Polled","t":"type Polled[A] = LPolled[Val[A]]","d":"libretto/ScalaStreams","k":"type"},
{"l":"libretto/ScalaStreams.html","n":"Producing","t":"type Producing[A] = Rec[[_] =>> ProducingF[A, _$1]]","d":"libretto/ScalaStreams","k":"type"},
{"l":"libretto/ScalaStreams.html","n":"ProducingF","t":"type ProducingF[A, X] = Done |+| Done |&| Val[A] |*| X","d":"libretto/ScalaStreams","k":"type"},
{"l":"libretto/ScalaStreams.html","n":"Subscriber","t":"type Subscriber[A] = LSubscriber[Neg[A]]","d":"libretto/ScalaStreams","k":"type"},
{"l":"libretto/ScalaStreams.html","n":"SubscriberF","t":"type SubscriberF[A, X] = LSubscriberF[Neg[A], X]","d":"libretto/ScalaStreams","k":"type"},
{"l":"libretto/ScalaStreams.html","n":"consumerProducingDuality","t":"def consumerProducingDuality[A]: Dual[Consumer[A], Producing[A]]","d":"libretto/ScalaStreams","k":"def"},
{"l":"libretto/ScalaStreams.html","n":"coreLib","t":"val coreLib: Lib & CoreLib[DSL]","d":"libretto/ScalaStreams","k":"val"},
{"l":"libretto/ScalaStreams.html","n":"coreStreams","t":"val coreStreams: Streams & CoreStreams[DSL, Lib & CoreLib[DSL]]","d":"libretto/ScalaStreams","k":"val"},
{"l":"libretto/ScalaStreams.html","n":"dsl","t":"val dsl: DSL","d":"libretto/ScalaStreams","k":"val"},
{"l":"libretto/ScalaStreams.html","n":"lInvertConsumerF","t":"def lInvertConsumerF[A, x, y](lInvertSub: One -⚬ y |*| x): One -⚬ ConsumerF[A, y] |*| ProducingF[A, x]","d":"libretto/ScalaStreams","k":"def"},
{"l":"libretto/ScalaStreams.html","n":"lInvertPollable","t":"def lInvertPollable[A]: One -⚬ Pollable[A] |*| Subscriber[A]","d":"libretto/ScalaStreams","k":"def"},
{"l":"libretto/ScalaStreams.html","n":"producingConsumerDuality","t":"def producingConsumerDuality[A]: Dual[Producing[A], Consumer[A]]","d":"libretto/ScalaStreams","k":"def"},
{"l":"libretto/ScalaStreams.html","n":"rInvertProducingF","t":"def rInvertProducingF[A, x, y](rInvertSub: x |*| y -⚬ One): ProducingF[A, x] |*| ConsumerF[A, y] -⚬ One","d":"libretto/ScalaStreams","k":"def"},
{"l":"libretto/ScalaStreams.html","n":"rInvertSubscriber","t":"def rInvertSubscriber[A]: Subscriber[A] |*| Pollable[A] -⚬ One","d":"libretto/ScalaStreams","k":"def"},
{"l":"libretto/ScalaStreams.html","n":"relayCompletion","t":"def relayCompletion[A, B]: Pollable[A] |*| Subscriber[B] -⚬ One |+| Val[A] |*| Pollable[A] |*| Neg[B] |*| Subscriber[B]","d":"libretto/ScalaStreams","k":"def"},
{"l":"libretto/ScalaStreams.html","n":"scalaLib","t":"val scalaLib: SLib & ScalaLib[DSL, Lib & CoreLib[DSL]]","d":"libretto/ScalaStreams","k":"val"},
{"l":"libretto/ScalaStreams$Demanding$.html","n":"Demanding","t":"object Demanding","d":"libretto/ScalaStreams$Demanding$","k":"object"},
{"l":"libretto/ScalaStreams$Demanding$.html","n":"close","t":"def close[A]: Demanding[A] -⚬ Need","d":"libretto/ScalaStreams$Demanding$","k":"def"},
{"l":"libretto/ScalaStreams$Demanding$.html","n":"merge","t":"def merge[A]: Demanding[A] |*| Demanding[A] -⚬ Demanding[A]","d":"libretto/ScalaStreams$Demanding$","k":"def"},
{"l":"libretto/ScalaStreams$Demanding$.html","n":"negativeDemanding","t":"def negativeDemanding[A]: Negative[Demanding[A]]","d":"libretto/ScalaStreams$Demanding$","k":"def"},
{"l":"libretto/ScalaStreams$Demanding$.html","n":"supply","t":"def supply[A]: Val[A] |*| Demanding[A] -⚬ Need |+| Demanding[A]","d":"libretto/ScalaStreams$Demanding$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"Pollable","t":"object Pollable","d":"libretto/ScalaStreams$Pollable$","k":"object"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"BroadcastByKey","t":"type BroadcastByKey[K, V]","d":"libretto/ScalaStreams$Pollable$","k":"type"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"broadcast","t":"def broadcast[A]: Pollable[A] -⚬ PUnlimited[Pollable[A]]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"broadcastByKey","t":"def broadcastByKey[A, K : Ordering, V](f: Val[A] -⚬ Val[K] |*| Val[V]): Pollable[A] -⚬ BroadcastByKey[K, V]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"close","t":"def close[A]: Pollable[A] -⚬ Done","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"concat","t":"def concat[A]: Pollable[A] |*| Pollable[A] -⚬ Pollable[A]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"cons","t":"def cons[A]: Val[A] |*| Pollable[A] -⚬ Pollable[A]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"delay","t":"def delay[A](d: FiniteDuration): Pollable[A] -⚬ Pollable[A]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"delayBy","t":"def delayBy[A]: Done |*| Pollable[A] -⚬ Pollable[A]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"delayedPoll","t":"def delayedPoll[A]: Done |*| Pollable[A] -⚬ Polled[A]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"detain","t":"def detain[A]: Pollable[A] -⚬ Detained[Pollable[A]]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"drain","t":"def drain[A]: Pollable[A] -⚬ Done","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"dropUntilFirstDemand","t":"def dropUntilFirstDemand[A]: Pollable[A] -⚬ Pollable[A]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"dup","t":"def dup[A]: Pollable[A] -⚬ Pollable[A] |*| Pollable[A]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"empty","t":"def empty[A]: Done -⚬ Pollable[A]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"emptyF","t":"def emptyF[A]: Done -⚬ PollableF[A, Pollable[A]]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"forEachSequentially","t":"def forEachSequentially[A](f: Val[A] -⚬ Done): Pollable[A] -⚬ Done","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"fromLList","t":"def fromLList[A]: LList[Val[A]] -⚬ Pollable[A]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"fromList","t":"def fromList[A]: Val[List[A]] -⚬ Pollable[A]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"fromList","t":"def fromList[A](as: List[A]): Done -⚬ Pollable[A]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"map","t":"def map[A, B](f: A => B): Pollable[A] -⚬ Pollable[B]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"merge","t":"def merge[A]: Pollable[A] |*| Pollable[A] -⚬ Pollable[A]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"mergeAll","t":"def mergeAll[A]: LList[Pollable[A]] -⚬ Pollable[A]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"negativePollable","t":"def negativePollable[A]: Negative[Pollable[A]]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"of","t":"def of[A](as: A*): Done -⚬ Pollable[A]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"partition","t":"def partition[A, B]: Pollable[Either[A, B]] -⚬ Pollable[A] |*| Pollable[B]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"poll","t":"def poll[A]: Pollable[A] -⚬ Polled[A]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"prepend","t":"def prepend[A]: Val[A] |*| Pollable[A] -⚬ Pollable[A]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"repeatedly","t":"def repeatedly[A](f: Done -⚬ Val[A]): Done -⚬ Pollable[A]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"statefulMap","t":"def statefulMap[S, A, B](f: (S, A) => (S, B))(initialState: S): Pollable[A] -⚬ Pollable[B]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$.html","n":"toList","t":"def toList[A]: Pollable[A] -⚬ Val[List[A]]","d":"libretto/ScalaStreams$Pollable$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$$BroadcastByKey$.html","n":"BroadcastByKey","t":"object BroadcastByKey","d":"libretto/ScalaStreams$Pollable$$BroadcastByKey$","k":"object"},
{"l":"libretto/ScalaStreams$Pollable$$BroadcastByKey$.html","n":"close","t":"def close[K, V]: BroadcastByKey[K, V] -⚬ Done","d":"libretto/ScalaStreams$Pollable$$BroadcastByKey$","k":"def"},
{"l":"libretto/ScalaStreams$Pollable$$BroadcastByKey$.html","n":"subscribe","t":"def subscribe[K, V](k: K): BroadcastByKey[K, V] -⚬ BroadcastByKey[K, V] |*| Pollable[V]","d":"libretto/ScalaStreams$Pollable$$BroadcastByKey$","k":"def"},
{"l":"libretto/ScalaStreams$Polled$.html","n":"Polled","t":"object Polled","d":"libretto/ScalaStreams$Polled$","k":"object"},
{"l":"libretto/ScalaStreams$Polled$.html","n":"close","t":"def close[A]: Polled[A] -⚬ Done","d":"libretto/ScalaStreams$Polled$","k":"def"},
{"l":"libretto/ScalaStreams$Polled$.html","n":"cons","t":"def cons[A]: Val[A] |*| Pollable[A] -⚬ Polled[A]","d":"libretto/ScalaStreams$Polled$","k":"def"},
{"l":"libretto/ScalaStreams$Polled$.html","n":"delayBy","t":"def delayBy[A]: Done |*| Polled[A] -⚬ Polled[A]","d":"libretto/ScalaStreams$Polled$","k":"def"},
{"l":"libretto/ScalaStreams$Polled$.html","n":"empty","t":"def empty[A]: Done -⚬ Polled[A]","d":"libretto/ScalaStreams$Polled$","k":"def"},
{"l":"libretto/ScalaStreams$Polled$.html","n":"merge","t":"def merge[A](mergePollables: Pollable[A] |*| Pollable[A] -⚬ Pollable[A]): Polled[A] |*| Polled[A] -⚬ Polled[A]","d":"libretto/ScalaStreams$Polled$","k":"def"},
{"l":"libretto/ScalaStreams$Polled$.html","n":"positivePolled","t":"def positivePolled[A]: Positive[Polled[A]]","d":"libretto/ScalaStreams$Polled$","k":"def"},
{"l":"libretto/ScalaStreams$Polled$.html","n":"unpoll","t":"def unpoll[A]: Polled[A] -⚬ Pollable[A]","d":"libretto/ScalaStreams$Polled$","k":"def"},
{"l":"libretto/ScalaStreams$Subscriber$.html","n":"Subscriber","t":"object Subscriber","d":"libretto/ScalaStreams$Subscriber$","k":"object"},
{"l":"libretto/ScalaStreams$Subscriber$.html","n":"close","t":"def close[A]: Subscriber[A] -⚬ Need","d":"libretto/ScalaStreams$Subscriber$","k":"def"},
{"l":"libretto/ScalaStreams$Subscriber$.html","n":"merge","t":"def merge[A]: Subscriber[A] |*| Subscriber[A] -⚬ Subscriber[A]","d":"libretto/ScalaStreams$Subscriber$","k":"def"},
{"l":"libretto/ScalaStreams$Subscriber$.html","n":"positiveSubscriber","t":"def positiveSubscriber[A]: Positive[Subscriber[A]]","d":"libretto/ScalaStreams$Subscriber$","k":"def"},
{"l":"libretto/StarterApp.html","n":"StarterApp","t":"class StarterApp extends StarterAppBase","d":"libretto/StarterApp","k":"class"},
{"l":"libretto/StarterApp.html","n":"blueprint","t":"def blueprint: Done -⚬ Done","d":"libretto/StarterApp","k":"def"},
{"l":"libretto/StarterApp.html","n":"main","t":"def main(args: Array[String]): Unit","d":"libretto/StarterApp","k":"def"},
{"l":"libretto/StarterAppBase.html","n":"StarterAppBase","t":"class StarterAppBase","d":"libretto/StarterAppBase","k":"class"},
{"l":"libretto/StarterAppBase.html","n":"$","t":"type $ >: ($) <: ($)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"$Ops","t":"type $Ops >: $Ops <: $Ops","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"*","t":"def *[B](b: $[Val[B]]): $[Val[(A, B)]]","d":"libretto/StarterAppBase","k":"def"},
{"l":"libretto/StarterAppBase.html","n":"-","t":"type - >: (-) <: (-)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"-⚬","t":"type -⚬ >: (-⚬) <: (-⚬)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"/\\","t":"def /\\[C](g: A -⚬ C)(using x$3: Cosemigroup[A]): A -⚬ B |*| C","d":"libretto/StarterAppBase","k":"def"},
{"l":"libretto/StarterAppBase.html","n":"=⚬","t":"type =⚬ >: (=⚬) <: (=⚬)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"AcquiredLock","t":"type AcquiredLock >: AcquiredLock <: AcquiredLock","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Affine","t":"type Affine >: (Affine) <: (Affine)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"BiExternalizer","t":"type BiExternalizer >: ([F[_, _]] =>> BiExternalizer[F]) <: ([F[_, _]] =>> BiExternalizer[F])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Bifunctor","t":"type Bifunctor >: ([F[_, _]] =>> Bifunctor[F]) <: ([F[_, _]] =>> Bifunctor[F])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"BimapSyntax","t":"type BimapSyntax >: ([F[_, _], A, B] =>> BimapSyntax[F, A, B]) <: ([F[_, _], A, B] =>> BimapSyntax[F, A, B])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Bool","t":"type Bool >: Bool <: Bool","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"ClosedLinearFunctionOps","t":"type ClosedLinearFunctionOps >: (ClosedLinearFunctionOps) <: (ClosedLinearFunctionOps)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"ClosureOps","t":"type ClosureOps >: ClosureOps <: ClosureOps","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Comonad","t":"type Comonad >: ([F[_]] =>> Comonad[F]) <: ([F[_]] =>> Comonad[F])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Comonoid","t":"type Comonoid >: (Comonoid) <: (Comonoid)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Comparable","t":"type Comparable >: (Comparable) <: (Comparable)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Consumer","t":"type Consumer >: (Consumer) <: (Consumer)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"ConsumerF","t":"type ConsumerF >: (ConsumerF) <: (ConsumerF)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"ContraExternalizer","t":"type ContraExternalizer >: ([F[_]] =>> ContraExternalizer[F]) <: ([F[_]] =>> ContraExternalizer[F])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"ContraFunctor","t":"type ContraFunctor >: ([F[_]] =>> ContraFunctor[F]) <: ([F[_]] =>> ContraFunctor[F])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Cosemigroup","t":"type Cosemigroup >: (Cosemigroup) <: (Cosemigroup)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Deferred","t":"type Deferred >: (Deferred) <: (Deferred)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"DemandExprOps","t":"type DemandExprOps >: (DemandExprOps) <: (DemandExprOps)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Demanding","t":"type Demanding >: (Demanding) <: (Demanding)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Detained","t":"type Detained >: (Detained) <: (Detained)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Done","t":"type Done >: Done <: Done","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Dual","t":"type Dual >: (Dual) <: (Dual)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Dual1","t":"type Dual1 >: ([F[_], G[_]] =>> Dual1[F, G]) <: ([F[_], G[_]] =>> Dual1[F, G])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Endless","t":"type Endless >: (Endless) <: (Endless)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Externalizer","t":"type Externalizer >: ([F[_]] =>> Externalizer[F]) <: ([F[_]] =>> Externalizer[F])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"FocusedBi","t":"type FocusedBi >: ([F[_, _], B1, B2] =>> FocusedBi[F, B1, B2]) <: ([F[_, _], B1, B2] =>> FocusedBi[F, B1, B2])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"FocusedCo","t":"type FocusedCo >: ([F[_], B] =>> FocusedCo[F, B]) <: ([F[_], B] =>> FocusedCo[F, B])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"FocusedContra","t":"type FocusedContra >: ([F[_], B] =>> FocusedContra[F, B]) <: ([F[_], B] =>> FocusedContra[F, B])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"FocusedOnChoiceCo","t":"type FocusedOnChoiceCo >: ([F[_], B1, B2] =>> FocusedOnChoiceCo[F, B1, B2]) <: ([F[_], B1, B2] =>> FocusedOnChoiceCo[F, B1, B2])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"FocusedOnChoiceContra","t":"type FocusedOnChoiceContra >: ([A, F[_], B1, B2] =>> FocusedOnChoiceContra[A, F, B1, B2]) <: ([A, F[_], B1, B2] =>> FocusedOnChoiceContra[A, F, B1, B2])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"FocusedOnDoneTimesCo","t":"type FocusedOnDoneTimesCo >: ([F[_], B2] =>> FocusedOnDoneTimesCo[F, B2]) <: ([F[_], B2] =>> FocusedOnDoneTimesCo[F, B2])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"FocusedOnFunctionCo","t":"type FocusedOnFunctionCo >: ([F[_], A, B] =>> FocusedOnFunctionCo[F, A, B]) <: ([F[_], A, B] =>> FocusedOnFunctionCo[F, A, B])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"FocusedOnFunctionContra","t":"type FocusedOnFunctionContra >: ([F[_], A, B] =>> FocusedOnFunctionContra[F, A, B]) <: ([F[_], A, B] =>> FocusedOnFunctionContra[F, A, B])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"FocusedOnPairCo","t":"type FocusedOnPairCo >: ([F[_], B1, B2] =>> FocusedOnPairCo[F, B1, B2]) <: ([F[_], B1, B2] =>> FocusedOnPairCo[F, B1, B2])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"FocusedOnPairContra","t":"type FocusedOnPairContra >: ([A, F[_], B1, B2] =>> FocusedOnPairContra[A, F, B1, B2]) <: ([A, F[_], B1, B2] =>> FocusedOnPairContra[A, F, B1, B2])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"FocusedOnPlusCo","t":"type FocusedOnPlusCo >: ([F[_], B1, B2] =>> FocusedOnPlusCo[F, B1, B2]) <: ([F[_], B1, B2] =>> FocusedOnPlusCo[F, B1, B2])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"FocusedOnPlusContra","t":"type FocusedOnPlusContra >: ([A, F[_], B1, B2] =>> FocusedOnPlusContra[A, F, B1, B2]) <: ([A, F[_], B1, B2] =>> FocusedOnPlusContra[A, F, B1, B2])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"FocusedOnTimesDoneCo","t":"type FocusedOnTimesDoneCo >: ([F[_], B1] =>> FocusedOnTimesDoneCo[F, B1]) <: ([F[_], B1] =>> FocusedOnTimesDoneCo[F, B1])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Functor","t":"type Functor >: ([F[_]] =>> Functor[F]) <: ([F[_]] =>> Functor[F])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Getter","t":"type Getter >: (Getter) <: (Getter)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Id","t":"type Id >: (Id) <: (Id)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"LDemanding","t":"type LDemanding >: (LDemanding) <: (LDemanding)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"LList","t":"type LList >: (LList) <: (LList)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"LList1","t":"type LList1 >: (LList1) <: (LList1)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"LPollable","t":"type LPollable >: (LPollable) <: (LPollable)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"LPollableF","t":"type LPollableF >: (LPollableF) <: (LPollableF)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"LPolled","t":"type LPolled >: (LPolled) <: (LPolled)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"LSubscriber","t":"type LSubscriber >: (LSubscriber) <: (LSubscriber)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"LSubscriberF","t":"type LSubscriberF >: (LSubscriberF) <: (LSubscriberF)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"LTerminus","t":"type LTerminus >: LTerminus <: LTerminus","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Lens","t":"type Lens >: (Lens) <: (Lens)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"LinearFunctionOps","t":"type LinearFunctionOps >: (LinearFunctionOps) <: (LinearFunctionOps)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"LinearFunctionToPairOps","t":"type LinearFunctionToPairOps >: (LinearFunctionToPairOps) <: (LinearFunctionToPairOps)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"LinearFunctionToPlusOps","t":"type LinearFunctionToPlusOps >: (LinearFunctionToPlusOps) <: (LinearFunctionToPlusOps)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Lock","t":"type Lock >: Lock <: Lock","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Maybe","t":"type Maybe >: (Maybe) <: (Maybe)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Monad","t":"type Monad >: ([F[_]] =>> Monad[F]) <: ([F[_]] =>> Monad[F])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Monoid","t":"type Monoid >: (Monoid) <: (Monoid)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Multiple","t":"type Multiple >: (Multiple) <: (Multiple)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"NAffine","t":"type NAffine >: (NAffine) <: (NAffine)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"NComonoid","t":"type NComonoid >: (NComonoid) <: (NComonoid)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"NMonoid","t":"type NMonoid >: (NMonoid) <: (NMonoid)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Need","t":"type Need >: Need <: Need","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Neg","t":"type Neg >: (Neg) <: (Neg)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"NoCaptureException","t":"type NoCaptureException >: NoCaptureException <: NoCaptureException","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"NotLinearException","t":"type NotLinearException >: NotLinearException <: NotLinearException","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"One","t":"type One >: One <: One","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Optionally","t":"type Optionally >: (Optionally) <: (Optionally)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"PAffine","t":"type PAffine >: (PAffine) <: (PAffine)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"PComonoid","t":"type PComonoid >: (PComonoid) <: (PComonoid)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"PMaybe","t":"type PMaybe >: (PMaybe) <: (PMaybe)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"PMonoid","t":"type PMonoid >: (PMonoid) <: (PMonoid)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"PUnlimited","t":"type PUnlimited >: (PUnlimited) <: (PUnlimited)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Ping","t":"type Ping >: Ping <: Ping","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Pollable","t":"type Pollable >: (Pollable) <: (Pollable)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"PollableF","t":"type PollableF >: (PollableF) <: (PollableF)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Polled","t":"type Polled >: (Polled) <: (Polled)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Pong","t":"type Pong >: Pong <: Pong","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Producing","t":"type Producing >: (Producing) <: (Producing)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"ProducingF","t":"type ProducingF >: (ProducingF) <: (ProducingF)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"RTerminus","t":"type RTerminus >: RTerminus <: RTerminus","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Rec","t":"type Rec >: ([F[_]] =>> Rec[F]) <: ([F[_]] =>> Rec[F])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"RefCounted","t":"type RefCounted >: (RefCounted) <: (RefCounted)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Res","t":"type Res >: (Res) <: (Res)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Semigroup","t":"type Semigroup >: (Semigroup) <: (Semigroup)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Subscriber","t":"type Subscriber >: (Subscriber) <: (Subscriber)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"SubscriberF","t":"type SubscriberF >: (SubscriberF) <: (SubscriberF)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Transportive","t":"type Transportive >: ([F[_]] =>> Transportive[F]) <: ([F[_]] =>> Transportive[F])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"UnboundVariablesException","t":"type UnboundVariablesException >: UnboundVariablesException <: UnboundVariablesException","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Unlimited","t":"type Unlimited >: (Unlimited) <: (Unlimited)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Val","t":"type Val >: (Val) <: (Val)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"ValMatcher","t":"type ValMatcher >: ([U >: V, V, A, R] =>> ValMatcher[U, V, A, R]) <: ([U >: V, V, A, R] =>> ValMatcher[U, V, A, R])","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"Zero","t":"type Zero >: Zero <: Zero","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"\\/","t":"def \\/[B](g: B -⚬ C)(using x$3: Semigroup[C]): A |*| B -⚬ C","d":"libretto/StarterAppBase","k":"def"},
{"l":"libretto/StarterAppBase.html","n":"blockUntil","t":"def blockUntil(b: $[Ping]): $[A]","d":"libretto/StarterAppBase","k":"def"},
{"l":"libretto/StarterAppBase.html","n":"deferReleaseUntil","t":"def deferReleaseUntil(ping: $[Ping]): $[AcquiredLock]","d":"libretto/StarterAppBase","k":"def"},
{"l":"libretto/StarterAppBase.html","n":"deferUntil","t":"def deferUntil(b: $[Ping])(implicit A: Positive[A]): $[A]","d":"libretto/StarterAppBase","k":"def"},
{"l":"libretto/StarterAppBase.html","n":"detainReleaseUntil","t":"def detainReleaseUntil(done: $[Done]): $[AcquiredLock]","d":"libretto/StarterAppBase","k":"def"},
{"l":"libretto/StarterAppBase.html","n":"releaseWhen","t":"def releaseWhen(trigger: $[Done]): $[A]","d":"libretto/StarterAppBase","k":"def"},
{"l":"libretto/StarterAppBase.html","n":"resumeWhen","t":"def resumeWhen(trigger: $[Ping]): $[A]","d":"libretto/StarterAppBase","k":"def"},
{"l":"libretto/StarterAppBase.html","n":"sequence","t":"def sequence(b: $[B])(implicit A: Positive[A], B: Positive[B]): $[A |*| B]","d":"libretto/StarterAppBase","k":"def"},
{"l":"libretto/StarterAppBase.html","n":"sequence","t":"def sequence(f: Done -⚬ B)(implicit A: Positive[A]): $[A |*| B]","d":"libretto/StarterAppBase","k":"def"},
{"l":"libretto/StarterAppBase.html","n":"sequenceAfter","t":"def sequenceAfter(b: $[B])(implicit A: Positive[A], B: Positive[B]): $[A |*| B]","d":"libretto/StarterAppBase","k":"def"},
{"l":"libretto/StarterAppBase.html","n":"waitFor","t":"def waitFor(b: $[Done])(implicit A: Positive[A]): $[A]","d":"libretto/StarterAppBase","k":"def"},
{"l":"libretto/StarterAppBase.html","n":"|&|","t":"type |&| >: (|&|) <: (|&|)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"|*|","t":"type |*| >: (|*|) <: (|*|)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"|+|","t":"type |+| >: (|+|) <: (|+|)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"⊕","t":"type ⊕ >: (|+|) <: (|+|)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppBase.html","n":"⊗","t":"type ⊗ >: (|*|) <: (|*|)","d":"libretto/StarterAppBase","k":"type"},
{"l":"libretto/StarterAppScala.html","n":"StarterAppScala","t":"class StarterAppScala[A] extends StarterAppBase","d":"libretto/StarterAppScala","k":"class"},
{"l":"libretto/StarterAppScala.html","n":"blueprint","t":"def blueprint: Done -⚬ Val[A]","d":"libretto/StarterAppScala","k":"def"},
{"l":"libretto/StarterAppScala.html","n":"main","t":"def main(args: Array[String]): Unit","d":"libretto/StarterAppScala","k":"def"},
{"l":"libretto/StarterKit$.html","n":"StarterKit","t":"object StarterKit extends StarterKit","d":"libretto/StarterKit$","k":"object"},
{"l":"libretto/StarterKit.html","n":"StarterKit","t":"class StarterKit extends AbstractStarterKit","d":"libretto/StarterKit","k":"class"},
{"l":"libretto/TimerDSL.html","n":"TimerDSL","t":"trait TimerDSL extends CoreDSL","d":"libretto/TimerDSL","k":"trait"},
{"l":"libretto/TimerDSL.html","n":"delay","t":"def delay(d: FiniteDuration): Done -⚬ Done","d":"libretto/TimerDSL","k":"def"},
{"l":"libretto/TimerDSL.html","n":"delayNeed","t":"def delayNeed(d: FiniteDuration): Need -⚬ Need","d":"libretto/TimerDSL","k":"def"},
{"l":"libretto/unapply$.html","n":"unapply","t":"object unapply","d":"libretto/unapply$","k":"object"},
{"l":"libretto/unapply$$Unapply$.html","n":"Unapply","t":"object Unapply","d":"libretto/unapply$$Unapply$","k":"object"},
{"l":"libretto/unapply$$Unapply$.html","n":"unapplyInstance","t":"def unapplyInstance[F[_], X]: Unapply[F[X], F] { type A = X;  }","d":"libretto/unapply$$Unapply$","k":"def"},
{"l":"libretto/unapply$$Unapply.html","n":"Unapply","t":"trait Unapply[FA, F[_]]","d":"libretto/unapply$$Unapply","k":"trait"},
{"l":"libretto/unapply$$Unapply.html","n":"A","t":"type A","d":"libretto/unapply$$Unapply","k":"type"},
{"l":"libretto/unapply$$Unapply.html","n":"ev","t":"def ev: FA =:= F[A]","d":"libretto/unapply$$Unapply","k":"def"},
{"l":"libretto/unapply$$Unapply2$.html","n":"Unapply2","t":"object Unapply2","d":"libretto/unapply$$Unapply2$","k":"object"},
{"l":"libretto/unapply$$Unapply2$.html","n":"unapply2Instance","t":"def unapply2Instance[F[_, _], X, Y]: Unapply2[F[X, Y], F] { type A = X; type B = Y;  }","d":"libretto/unapply$$Unapply2$","k":"def"},
{"l":"libretto/unapply$$Unapply2.html","n":"Unapply2","t":"trait Unapply2[FAB, F[_, _]]","d":"libretto/unapply$$Unapply2","k":"trait"},
{"l":"libretto/unapply$$Unapply2.html","n":"A","t":"type A","d":"libretto/unapply$$Unapply2","k":"type"},
{"l":"libretto/unapply$$Unapply2.html","n":"B","t":"type B","d":"libretto/unapply$$Unapply2","k":"type"},
{"l":"libretto/unapply$$Unapply2.html","n":"ev","t":"def ev: FAB =:= F[A, B]","d":"libretto/unapply$$Unapply2","k":"def"},
{"l":"libretto/impl.html","n":"libretto.impl","t":"package libretto.impl","d":"libretto/impl","k":"package"},
{"l":"libretto/impl/Category.html","n":"Category","t":"trait Category[->[_, _]] extends Semigroupoid[->]","d":"libretto/impl/Category","k":"trait"},
{"l":"libretto/impl/Category.html","n":"id","t":"def id[A]: A -> A","d":"libretto/impl/Category","k":"def"},
{"l":"libretto/impl/ClosedSemigroupalCategory.html","n":"ClosedSemigroupalCategory","t":"trait ClosedSemigroupalCategory[->[_, _], |*|[_, _], -->[_, _]] extends SemigroupalCategory[->, |*|]","d":"libretto/impl/ClosedSemigroupalCategory","k":"trait"},
{"l":"libretto/impl/ClosedSemigroupalCategory.html","n":"curry","t":"def curry[A, B, C](f: A |*| B -> C): A -> B --> C","d":"libretto/impl/ClosedSemigroupalCategory","k":"def"},
{"l":"libretto/impl/ClosedSemigroupalCategory.html","n":"eval","t":"def eval[A, B]: A --> B |*| A -> B","d":"libretto/impl/ClosedSemigroupalCategory","k":"def"},
{"l":"libretto/impl/ClosedSemigroupalCategory.html","n":"uncurry","t":"def uncurry[A, B, C](f: A -> B --> C): A |*| B -> C","d":"libretto/impl/ClosedSemigroupalCategory","k":"def"},
{"l":"libretto/impl/ClosedSymmetricSemigroupalCategory.html","n":"ClosedSymmetricSemigroupalCategory","t":"trait ClosedSymmetricSemigroupalCategory[->[_, _], |*|[_, _], -->[_, _]] extends ClosedSemigroupalCategory[->, |*|, -->] with SymmetricSemigroupalCategory[->, |*|]","d":"libretto/impl/ClosedSymmetricSemigroupalCategory","k":"trait"},
{"l":"libretto/impl/Closures.html","n":"Closures","t":"class Closures[-⚬[_, _], |*|[_, _], =⚬[_, _], Var[_], VarSet](using inj: BiInjective[|*|], variables: Variable[Var, VarSet])","d":"libretto/impl/Closures","k":"class"},
{"l":"libretto/impl/Closures.html","n":"app","t":"def app[A, B](f: Expr[A =⚬ B], a: Expr[A])(resultVar: Var[B])(using ev: ClosedSemigroupalCategory[-⚬, |*|, =⚬]): Expr[B]","d":"libretto/impl/Closures","k":"def"},
{"l":"libretto/impl/Closures.html","n":"closure","t":"def closure[A, B](f: Expr[A] => Expr[B], boundVar: Var[A], resultVar: Var[A =⚬ B])(using ev: ClosedSymmetricSemigroupalCategory[-⚬, |*|, =⚬]): Either[ClosureError, Expr[A =⚬ B]]","d":"libretto/impl/Closures","k":"def"},
{"l":"libretto/impl/Closures.html","n":"lambdas","t":"val lambdas: Lambda[-⚬, |*|, Var, VarSet]","d":"libretto/impl/Closures","k":"val"},
{"l":"libretto/impl/Closures$ClosureError.html","n":"ClosureError","t":"enum ClosureError","d":"libretto/impl/Closures$ClosureError","k":"enum"},
{"l":"libretto/impl/Closures$ClosureError$$NonLinear.html","n":"NonLinear","t":"case NonLinear(e: LinearityViolation)","d":"libretto/impl/Closures$ClosureError","k":"case"},
{"l":"libretto/impl/Closures$ClosureError$$NoCapture.html","n":"NoCapture","t":"case NoCapture(msg: String)","d":"libretto/impl/Closures$ClosureError","k":"case"},
{"l":"libretto/impl/Closures$ClosureError$$NonLinear.html","n":"NonLinear","t":"case NonLinear(e: LinearityViolation)","d":"libretto/impl/Closures$ClosureError$$NonLinear","k":"case"},
{"l":"libretto/impl/Closures$ClosureError$$NoCapture.html","n":"NoCapture","t":"case NoCapture(msg: String)","d":"libretto/impl/Closures$ClosureError$$NoCapture","k":"case"},
{"l":"libretto/impl/FreeScalaDSL$.html","n":"FreeScalaDSL","t":"object FreeScalaDSL extends ScalaDSL","d":"libretto/impl/FreeScalaDSL$","k":"object"},
{"l":"libretto/impl/FreeScalaDSL$.html","n":"$","t":"type $[A] = Expr[A]","d":"libretto/impl/FreeScalaDSL$","k":"type"},
{"l":"libretto/impl/FreeScalaDSL$.html","n":"$","t":"val $: ClosureOps","d":"libretto/impl/FreeScalaDSL$","k":"val"},
{"l":"libretto/impl/FreeScalaDSL$.html","n":"Var","t":"type Var[A] = Var[VarOrigin, A]","d":"libretto/impl/FreeScalaDSL$","k":"type"},
{"l":"libretto/impl/FreeScalaDSL$.html","n":"biInjectivePair","t":"val biInjectivePair: BiInjective[|*|]","d":"libretto/impl/FreeScalaDSL$","k":"val"},
{"l":"libretto/impl/FreeScalaDSL$.html","n":"closures","t":"val closures: Closures[-⚬, |*|, =⚬, Var, Set[Var[VarOrigin, _]]]","d":"libretto/impl/FreeScalaDSL$","k":"val"},
{"l":"libretto/impl/FreeScalaDSL$.html","n":"cssc","t":"val cssc: ClosedSymmetricSemigroupalCategory[-⚬, |*|, =⚬]","d":"libretto/impl/FreeScalaDSL$","k":"val"},
{"l":"libretto/impl/FreeScalaDSL$.html","n":"lambdas","t":"val lambdas: Lambda[-⚬, |*|, Var, VarSet]","d":"libretto/impl/FreeScalaDSL$","k":"val"},
{"l":"libretto/impl/FreeScalaDSL$$-.html","n":"-","t":"class -[A]","d":"libretto/impl/FreeScalaDSL$$-","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$.html","n":"-⚬","t":"object -⚬","d":"libretto/impl/FreeScalaDSL$$-⚬$","k":"object"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$Acquire.html","n":"Acquire","t":"class Acquire[A, R, B](acquire: A => (R, B), release: Option[R => Unit]) extends Val[A] -⚬ Res[R] |*| Val[B]","d":"libretto/impl/FreeScalaDSL$$-⚬$$Acquire","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$AndThen.html","n":"AndThen","t":"class AndThen[A, B, C](f: A -⚬ B, g: B -⚬ C) extends A -⚬ C","d":"libretto/impl/FreeScalaDSL$$-⚬$$AndThen","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$AssocLR.html","n":"AssocLR","t":"class AssocLR[A, B, C]() extends A |*| B |*| C -⚬ A |*| B |*| C","d":"libretto/impl/FreeScalaDSL$$-⚬$$AssocLR","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$AssocRL.html","n":"AssocRL","t":"class AssocRL[A, B, C]() extends A |*| B |*| C -⚬ A |*| B |*| C","d":"libretto/impl/FreeScalaDSL$$-⚬$$AssocRL","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$Backvert.html","n":"Backvert","t":"class Backvert[A]() extends A |*| -[A] -⚬ One","d":"libretto/impl/FreeScalaDSL$$-⚬$$Backvert","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$Blocking.html","n":"Blocking","t":"class Blocking[A, B](f: A => B) extends Val[A] -⚬ Val[B]","d":"libretto/impl/FreeScalaDSL$$-⚬$$Blocking","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$Choice.html","n":"Choice","t":"class Choice[A, B, C](f: A -⚬ B, g: A -⚬ C) extends A -⚬ B |&| C","d":"libretto/impl/FreeScalaDSL$$-⚬$$Choice","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$ChooseL.html","n":"ChooseL","t":"class ChooseL[A, B]() extends A |&| B -⚬ A","d":"libretto/impl/FreeScalaDSL$$-⚬$$ChooseL","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$ChooseLOnPong.html","n":"ChooseLOnPong","t":"class ChooseLOnPong[A, B]() extends A |&| B -⚬ Pong |*| A","d":"libretto/impl/FreeScalaDSL$$-⚬$$ChooseLOnPong","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$ChooseR.html","n":"ChooseR","t":"class ChooseR[A, B]() extends A |&| B -⚬ B","d":"libretto/impl/FreeScalaDSL$$-⚬$$ChooseR","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$CoDistributeL.html","n":"CoDistributeL","t":"class CoDistributeL[A, B, C]() extends A |*| B |&| A |*| C -⚬ A |*| B |&| C","d":"libretto/impl/FreeScalaDSL$$-⚬$$CoDistributeL","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$ConstNeg.html","n":"ConstNeg","t":"class ConstNeg[A](a: A) extends Neg[A] -⚬ Need","d":"libretto/impl/FreeScalaDSL$$-⚬$$ConstNeg","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$ConstVal.html","n":"ConstVal","t":"class ConstVal[A](a: A) extends Done -⚬ Val[A]","d":"libretto/impl/FreeScalaDSL$$-⚬$$ConstVal","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$CrashWhenDone.html","n":"CrashWhenDone","t":"class CrashWhenDone[A, B](msg: String) extends Done |*| A -⚬ B","d":"libretto/impl/FreeScalaDSL$$-⚬$$CrashWhenDone","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$DebugPrint.html","n":"DebugPrint","t":"class DebugPrint(msg: String) extends Ping -⚬ One","d":"libretto/impl/FreeScalaDSL$$-⚬$$DebugPrint","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$Delay.html","n":"Delay","t":"class Delay() extends Val[FiniteDuration] -⚬ Done","d":"libretto/impl/FreeScalaDSL$$-⚬$$Delay","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$DelayIndefinitely.html","n":"DelayIndefinitely","t":"class DelayIndefinitely() extends Done -⚬ RTerminus","d":"libretto/impl/FreeScalaDSL$$-⚬$$DelayIndefinitely","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$DistributeInversion.html","n":"DistributeInversion","t":"class DistributeInversion[A, B]() extends -[A |*| B] -⚬ -[A] |*| -[B]","d":"libretto/impl/FreeScalaDSL$$-⚬$$DistributeInversion","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$DistributeL.html","n":"DistributeL","t":"class DistributeL[A, B, C]() extends A |*| B |+| C -⚬ A |*| B |+| A |*| C","d":"libretto/impl/FreeScalaDSL$$-⚬$$DistributeL","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$EffectAsync.html","n":"EffectAsync","t":"class EffectAsync[R, A, B](f: (R, A) => Async[B]) extends Res[R] |*| Val[A] -⚬ Res[R] |*| Val[B]","d":"libretto/impl/FreeScalaDSL$$-⚬$$EffectAsync","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$EffectWrAsync.html","n":"EffectWrAsync","t":"class EffectWrAsync[R, A](f: (R, A) => Async[Unit]) extends Res[R] |*| Val[A] -⚬ Res[R]","d":"libretto/impl/FreeScalaDSL$$-⚬$$EffectWrAsync","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$EitherF.html","n":"EitherF","t":"class EitherF[A, B, C](f: A -⚬ C, g: B -⚬ C) extends A |+| B -⚬ C","d":"libretto/impl/FreeScalaDSL$$-⚬$$EitherF","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$ElimFst.html","n":"ElimFst","t":"class ElimFst[B]() extends One |*| B -⚬ B","d":"libretto/impl/FreeScalaDSL$$-⚬$$ElimFst","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$ElimSnd.html","n":"ElimSnd","t":"class ElimSnd[A]() extends A |*| One -⚬ A","d":"libretto/impl/FreeScalaDSL$$-⚬$$ElimSnd","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$FactorOutInversion.html","n":"FactorOutInversion","t":"class FactorOutInversion[A, B]() extends -[A] |*| -[B] -⚬ -[A |*| B]","d":"libretto/impl/FreeScalaDSL$$-⚬$$FactorOutInversion","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$Forevert.html","n":"Forevert","t":"class Forevert[A]() extends One -⚬ -[A] |*| A","d":"libretto/impl/FreeScalaDSL$$-⚬$$Forevert","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$Fork.html","n":"Fork","t":"class Fork() extends Done -⚬ Done |*| Done","d":"libretto/impl/FreeScalaDSL$$-⚬$$Fork","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$ForkNeed.html","n":"ForkNeed","t":"class ForkNeed() extends Need |*| Need -⚬ Need","d":"libretto/impl/FreeScalaDSL$$-⚬$$ForkNeed","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$ForkPing.html","n":"ForkPing","t":"class ForkPing() extends Ping -⚬ Ping |*| Ping","d":"libretto/impl/FreeScalaDSL$$-⚬$$ForkPing","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$ForkPong.html","n":"ForkPong","t":"class ForkPong() extends Pong |*| Pong -⚬ Pong","d":"libretto/impl/FreeScalaDSL$$-⚬$$ForkPong","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$Id.html","n":"Id","t":"class Id[A]() extends A -⚬ A","d":"libretto/impl/FreeScalaDSL$$-⚬$$Id","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$InjectL.html","n":"InjectL","t":"class InjectL[A, B]() extends A -⚬ A |+| B","d":"libretto/impl/FreeScalaDSL$$-⚬$$InjectL","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$InjectLOnPing.html","n":"InjectLOnPing","t":"class InjectLOnPing[A, B]() extends Ping |*| A -⚬ A |+| B","d":"libretto/impl/FreeScalaDSL$$-⚬$$InjectLOnPing","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$InjectR.html","n":"InjectR","t":"class InjectR[A, B]() extends B -⚬ A |+| B","d":"libretto/impl/FreeScalaDSL$$-⚬$$InjectR","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$IntroFst.html","n":"IntroFst","t":"class IntroFst[B]() extends B -⚬ One |*| B","d":"libretto/impl/FreeScalaDSL$$-⚬$$IntroFst","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$IntroSnd.html","n":"IntroSnd","t":"class IntroSnd[A]() extends A -⚬ A |*| One","d":"libretto/impl/FreeScalaDSL$$-⚬$$IntroSnd","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$Join.html","n":"Join","t":"class Join() extends Done |*| Done -⚬ Done","d":"libretto/impl/FreeScalaDSL$$-⚬$$Join","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$JoinLTermini.html","n":"JoinLTermini","t":"class JoinLTermini() extends LTerminus -⚬ LTerminus |*| LTerminus","d":"libretto/impl/FreeScalaDSL$$-⚬$$JoinLTermini","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$JoinNeed.html","n":"JoinNeed","t":"class JoinNeed() extends Need -⚬ Need |*| Need","d":"libretto/impl/FreeScalaDSL$$-⚬$$JoinNeed","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$JoinPing.html","n":"JoinPing","t":"class JoinPing() extends Ping |*| Ping -⚬ Ping","d":"libretto/impl/FreeScalaDSL$$-⚬$$JoinPing","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$JoinPong.html","n":"JoinPong","t":"class JoinPong() extends Pong -⚬ Pong |*| Pong","d":"libretto/impl/FreeScalaDSL$$-⚬$$JoinPong","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$JoinRTermini.html","n":"JoinRTermini","t":"class JoinRTermini() extends RTerminus |*| RTerminus -⚬ RTerminus","d":"libretto/impl/FreeScalaDSL$$-⚬$$JoinRTermini","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$LInvertPongPing.html","n":"LInvertPongPing","t":"class LInvertPongPing() extends One -⚬ Pong |*| Ping","d":"libretto/impl/FreeScalaDSL$$-⚬$$LInvertPongPing","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$LInvertSignal.html","n":"LInvertSignal","t":"class LInvertSignal() extends One -⚬ Need |*| Done","d":"libretto/impl/FreeScalaDSL$$-⚬$$LInvertSignal","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$LInvertTerminus.html","n":"LInvertTerminus","t":"class LInvertTerminus() extends One -⚬ LTerminus |*| RTerminus","d":"libretto/impl/FreeScalaDSL$$-⚬$$LInvertTerminus","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$LiftEither.html","n":"LiftEither","t":"class LiftEither[A, B]() extends Val[Either[A, B]] -⚬ Val[A] |+| Val[B]","d":"libretto/impl/FreeScalaDSL$$-⚬$$LiftEither","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$LiftPair.html","n":"LiftPair","t":"class LiftPair[A, B]() extends Val[(A, B)] -⚬ Val[A] |*| Val[B]","d":"libretto/impl/FreeScalaDSL$$-⚬$$LiftPair","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$MapVal.html","n":"MapVal","t":"class MapVal[A, B](f: A => B) extends Val[A] -⚬ Val[B]","d":"libretto/impl/FreeScalaDSL$$-⚬$$MapVal","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$Neglect.html","n":"Neglect","t":"class Neglect[A]() extends Val[A] -⚬ Done","d":"libretto/impl/FreeScalaDSL$$-⚬$$Neglect","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$NotifyChoice.html","n":"NotifyChoice","t":"class NotifyChoice[A, B]() extends Pong |*| A |&| B -⚬ A |&| B","d":"libretto/impl/FreeScalaDSL$$-⚬$$NotifyChoice","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$NotifyDoneL.html","n":"NotifyDoneL","t":"class NotifyDoneL() extends Done -⚬ Ping |*| Done","d":"libretto/impl/FreeScalaDSL$$-⚬$$NotifyDoneL","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$NotifyEither.html","n":"NotifyEither","t":"class NotifyEither[A, B]() extends A |+| B -⚬ Ping |*| A |+| B","d":"libretto/impl/FreeScalaDSL$$-⚬$$NotifyEither","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$NotifyNeedL.html","n":"NotifyNeedL","t":"class NotifyNeedL() extends Pong |*| Need -⚬ Need","d":"libretto/impl/FreeScalaDSL$$-⚬$$NotifyNeedL","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$NotifyNeg.html","n":"NotifyNeg","t":"class NotifyNeg[A]() extends Pong |*| Neg[A] -⚬ Neg[A]","d":"libretto/impl/FreeScalaDSL$$-⚬$$NotifyNeg","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$NotifyVal.html","n":"NotifyVal","t":"class NotifyVal[A]() extends Val[A] -⚬ Ping |*| Val[A]","d":"libretto/impl/FreeScalaDSL$$-⚬$$NotifyVal","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$Pack.html","n":"Pack","t":"class Pack[F[_]]() extends F[Rec[F]] -⚬ Rec[F]","d":"libretto/impl/FreeScalaDSL$$-⚬$$Pack","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$Par.html","n":"Par","t":"class Par[A, B, C, D](f: A -⚬ B, g: C -⚬ D) extends A |*| C -⚬ B |*| D","d":"libretto/impl/FreeScalaDSL$$-⚬$$Par","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$PingF.html","n":"PingF","t":"class PingF() extends One -⚬ Ping","d":"libretto/impl/FreeScalaDSL$$-⚬$$PingF","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$PongF.html","n":"PongF","t":"class PongF() extends Pong -⚬ One","d":"libretto/impl/FreeScalaDSL$$-⚬$$PongF","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$RInvertPingPong.html","n":"RInvertPingPong","t":"class RInvertPingPong() extends Ping |*| Pong -⚬ One","d":"libretto/impl/FreeScalaDSL$$-⚬$$RInvertPingPong","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$RInvertSignal.html","n":"RInvertSignal","t":"class RInvertSignal() extends Done |*| Need -⚬ One","d":"libretto/impl/FreeScalaDSL$$-⚬$$RInvertSignal","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$RInvertTerminus.html","n":"RInvertTerminus","t":"class RInvertTerminus() extends RTerminus |*| LTerminus -⚬ One","d":"libretto/impl/FreeScalaDSL$$-⚬$$RInvertTerminus","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$RacePair.html","n":"RacePair","t":"class RacePair() extends Ping |*| Ping -⚬ One |+| One","d":"libretto/impl/FreeScalaDSL$$-⚬$$RacePair","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$RecF.html","n":"RecF","t":"class RecF[A, B](f: A -⚬ B => A -⚬ B) extends A -⚬ B","d":"libretto/impl/FreeScalaDSL$$-⚬$$RecF","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$RecF.html","n":"recursed","t":"val recursed: A -⚬ B","d":"libretto/impl/FreeScalaDSL$$-⚬$$RecF","k":"val"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$RegressInfinitely.html","n":"RegressInfinitely","t":"class RegressInfinitely() extends LTerminus -⚬ Need","d":"libretto/impl/FreeScalaDSL$$-⚬$$RegressInfinitely","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$Release.html","n":"Release","t":"class Release[R]() extends Res[R] -⚬ Done","d":"libretto/impl/FreeScalaDSL$$-⚬$$Release","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$ReleaseAsync.html","n":"ReleaseAsync","t":"class ReleaseAsync[R, A, B](f: (R, A) => Async[B]) extends Res[R] |*| Val[A] -⚬ Val[B]","d":"libretto/impl/FreeScalaDSL$$-⚬$$ReleaseAsync","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$SelectPair.html","n":"SelectPair","t":"class SelectPair() extends One |&| One -⚬ Pong |*| Pong","d":"libretto/impl/FreeScalaDSL$$-⚬$$SelectPair","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$StrengthenPing.html","n":"StrengthenPing","t":"class StrengthenPing() extends Ping -⚬ Done","d":"libretto/impl/FreeScalaDSL$$-⚬$$StrengthenPing","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$StrengthenPong.html","n":"StrengthenPong","t":"class StrengthenPong() extends Need -⚬ Pong","d":"libretto/impl/FreeScalaDSL$$-⚬$$StrengthenPong","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$Swap.html","n":"Swap","t":"class Swap[A, B]() extends A |*| B -⚬ B |*| A","d":"libretto/impl/FreeScalaDSL$$-⚬$$Swap","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$TryAcquireAsync.html","n":"TryAcquireAsync","t":"class TryAcquireAsync[A, R, B, E](acquire: A => Async[Either[E, (R, B)]], release: Option[R => Async[Unit]]) extends Val[A] -⚬ Val[E] |+| Res[R] |*| Val[B]","d":"libretto/impl/FreeScalaDSL$$-⚬$$TryAcquireAsync","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$TrySplitResourceAsync.html","n":"TrySplitResourceAsync","t":"class TrySplitResourceAsync[R, A, S, T, B, E](f: (R, A) => Async[Either[E, (S, T, B)]], release1: Option[S => Async[Unit]], release2: Option[T => Async[Unit]]) extends Res[R] |*| Val[A] -⚬ Val[E] |+| Res[S] |*| Res[T] |*| Val[B]","d":"libretto/impl/FreeScalaDSL$$-⚬$$TrySplitResourceAsync","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$TryTransformResourceAsync.html","n":"TryTransformResourceAsync","t":"class TryTransformResourceAsync[R, A, S, B, E](f: (R, A) => Async[Either[E, (S, B)]], release: Option[S => Async[Unit]]) extends Res[R] |*| Val[A] -⚬ Val[E] |+| Res[S] |*| Val[B]","d":"libretto/impl/FreeScalaDSL$$-⚬$$TryTransformResourceAsync","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$UnliftPair.html","n":"UnliftPair","t":"class UnliftPair[A, B]() extends Val[A] |*| Val[B] -⚬ Val[(A, B)]","d":"libretto/impl/FreeScalaDSL$$-⚬$$UnliftPair","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬$$Unpack.html","n":"Unpack","t":"class Unpack[F[_]]() extends Rec[F] -⚬ F[Rec[F]]","d":"libretto/impl/FreeScalaDSL$$-⚬$$Unpack","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$-⚬.html","n":"-⚬","t":"trait -⚬[A, B]","d":"libretto/impl/FreeScalaDSL$$-⚬","k":"trait"},
{"l":"libretto/impl/FreeScalaDSL$$Done.html","n":"Done","t":"class Done","d":"libretto/impl/FreeScalaDSL$$Done","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$LTerminus.html","n":"LTerminus","t":"class LTerminus","d":"libretto/impl/FreeScalaDSL$$LTerminus","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$Need.html","n":"Need","t":"class Need","d":"libretto/impl/FreeScalaDSL$$Need","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$NoCaptureException.html","n":"NoCaptureException","t":"class NoCaptureException(msg: String) extends Exception","d":"libretto/impl/FreeScalaDSL$$NoCaptureException","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$NotLinearException.html","n":"NotLinearException","t":"class NotLinearException(msg: String) extends Exception","d":"libretto/impl/FreeScalaDSL$$NotLinearException","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$One.html","n":"One","t":"class One","d":"libretto/impl/FreeScalaDSL$$One","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$Ping.html","n":"Ping","t":"class Ping","d":"libretto/impl/FreeScalaDSL$$Ping","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$Pong.html","n":"Pong","t":"class Pong","d":"libretto/impl/FreeScalaDSL$$Pong","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$RTerminus.html","n":"RTerminus","t":"class RTerminus","d":"libretto/impl/FreeScalaDSL$$RTerminus","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$Rec.html","n":"Rec","t":"class Rec[F[_]]","d":"libretto/impl/FreeScalaDSL$$Rec","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$Res.html","n":"Res","t":"class Res[A]","d":"libretto/impl/FreeScalaDSL$$Res","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$UnboundVariablesException.html","n":"UnboundVariablesException","t":"class UnboundVariablesException(vs: Set[Var[VarOrigin, _]]) extends Exception","d":"libretto/impl/FreeScalaDSL$$UnboundVariablesException","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$Val.html","n":"Val","t":"class Val[A]","d":"libretto/impl/FreeScalaDSL$$Val","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$|&|.html","n":"|&|","t":"class |&|[A, B]","d":"libretto/impl/FreeScalaDSL$$|&|","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$|*|.html","n":"|*|","t":"class |*|[A, B]","d":"libretto/impl/FreeScalaDSL$$|*|","k":"class"},
{"l":"libretto/impl/FreeScalaDSL$$|+|.html","n":"|+|","t":"class |+|[A, B]","d":"libretto/impl/FreeScalaDSL$$|+|","k":"class"},
{"l":"libretto/impl/FreeScalaFutureRunner.html","n":"FreeScalaFutureRunner","t":"class FreeScalaFutureRunner(scheduler: ScheduledExecutorService, blockingExecutor: Executor) extends ScalaRunner[FreeScalaDSL, Future]","d":"libretto/impl/FreeScalaFutureRunner","k":"class"},
{"l":"libretto/impl/FreeScalaFutureRunner.html","n":"dsl","t":"val dsl: FreeScalaDSL","d":"libretto/impl/FreeScalaFutureRunner","k":"val"},
{"l":"libretto/impl/InversiveMonoidalCategory.html","n":"InversiveMonoidalCategory","t":"trait InversiveMonoidalCategory[->[_, _], |*|[_, _], One, -[_]] extends InversiveSemigroupalCategory[->, |*|, -] with SymmetricMonoidalCategory[->, |*|, One]","d":"libretto/impl/InversiveMonoidalCategory","k":"trait"},
{"l":"libretto/impl/InversiveMonoidalCategory.html","n":"backvert","t":"def backvert[A]: A |*| -[A] -> One","d":"libretto/impl/InversiveMonoidalCategory","k":"def"},
{"l":"libretto/impl/InversiveMonoidalCategory.html","n":"forevert","t":"def forevert[A]: One -> -[A] |*| A","d":"libretto/impl/InversiveMonoidalCategory","k":"def"},
{"l":"libretto/impl/InversiveSemigroupalCategory.html","n":"InversiveSemigroupalCategory","t":"trait InversiveSemigroupalCategory[->[_, _], |*|[_, _], -[_]] extends ClosedSymmetricSemigroupalCategory[->, |*|, [x, y] =>> -[x] |*| y]","d":"libretto/impl/InversiveSemigroupalCategory","k":"trait"},
{"l":"libretto/impl/InversiveSemigroupalCategory.html","n":"contrapositive","t":"def contrapositive[A, B](f: A -> B): -[B] -> -[A]","d":"libretto/impl/InversiveSemigroupalCategory","k":"def"},
{"l":"libretto/impl/InversiveSemigroupalCategory.html","n":"die","t":"def die[A]: -[-[A]] -> A","d":"libretto/impl/InversiveSemigroupalCategory","k":"def"},
{"l":"libretto/impl/InversiveSemigroupalCategory.html","n":"dii","t":"def dii[A]: A -> -[-[A]]","d":"libretto/impl/InversiveSemigroupalCategory","k":"def"},
{"l":"libretto/impl/InversiveSemigroupalCategory.html","n":"portLR","t":"def portLR[A, B, C](f: A |*| B -> C): A -> -[B] |*| C","d":"libretto/impl/InversiveSemigroupalCategory","k":"def"},
{"l":"libretto/impl/InversiveSemigroupalCategory.html","n":"portRL","t":"def portRL[A, B, C](f: A -> B |*| C): A |*| -[B] -> C","d":"libretto/impl/InversiveSemigroupalCategory","k":"def"},
{"l":"libretto/impl/Lambda.html","n":"Lambda","t":"class Lambda[-⚬[_, _], |*|[_, _], Var[_], VarSet](using inj: BiInjective[|*|], variables: Variable[Var, VarSet])","d":"libretto/impl/Lambda","k":"class"},
{"l":"libretto/impl/Lambda.html","n":"Expr","t":"type Expr[A] = VArr[_, A]","d":"libretto/impl/Lambda","k":"type"},
{"l":"libretto/impl/Lambda.html","n":"Tupled","t":"type Tupled[F[_], A] = Tupled[|*|, F, A]","d":"libretto/impl/Lambda","k":"type"},
{"l":"libretto/impl/Lambda.html","n":"Vars","t":"type Vars[A] = Tupled[Var, A]","d":"libretto/impl/Lambda","k":"type"},
{"l":"libretto/impl/Lambda.html","n":"abs","t":"def abs[A, B](f: Expr[A] => Expr[B], boundVar: Var[A])(using ev: SymmetricSemigroupalCategory[-⚬, |*|]): Abstracted[A, B]","d":"libretto/impl/Lambda","k":"def"},
{"l":"libretto/impl/Lambda.html","n":"compile","t":"def compile[A, B](f: Expr[A] => Expr[B], boundVar: Var[A])(using ev: SymmetricSemigroupalCategory[-⚬, |*|]): Either[Error, A -⚬ B]","d":"libretto/impl/Lambda","k":"def"},
{"l":"libretto/impl/Lambda.html","n":"shuffled","t":"val shuffled: Shuffled[-⚬, |*|]","d":"libretto/impl/Lambda","k":"val"},
{"l":"libretto/impl/Lambda.html","n":"toSet","t":"def toSet: VarSet","d":"libretto/impl/Lambda","k":"def"},
{"l":"libretto/impl/Lambda$Abstracted$.html","n":"Abstracted","t":"object Abstracted","d":"libretto/impl/Lambda$Abstracted$","k":"object"},
{"l":"libretto/impl/Lambda$Abstracted$$Closure.html","n":"Closure","t":"class Closure[X, A, B](captured: Expr[X], f: Shuffled[X |*| A, B]) extends Abstracted[A, B]","d":"libretto/impl/Lambda$Abstracted$$Closure","k":"class"},
{"l":"libretto/impl/Lambda$Abstracted$$Exact.html","n":"Exact","t":"class Exact[A, B](f: Shuffled[A, B]) extends Abstracted[A, B]","d":"libretto/impl/Lambda$Abstracted$$Exact","k":"class"},
{"l":"libretto/impl/Lambda$Abstracted$$Failure.html","n":"Failure","t":"class Failure[A, B](e: LinearityViolation) extends Abstracted[A, B]","d":"libretto/impl/Lambda$Abstracted$$Failure","k":"class"},
{"l":"libretto/impl/Lambda$Abstracted$$Failure$.html","n":"Failure","t":"object Failure","d":"libretto/impl/Lambda$Abstracted$$Failure$","k":"object"},
{"l":"libretto/impl/Lambda$Abstracted$$Failure$.html","n":"overused","t":"def overused[A, B](vars: VarSet): Failure[A, B]","d":"libretto/impl/Lambda$Abstracted$$Failure$","k":"def"},
{"l":"libretto/impl/Lambda$Abstracted$$Failure$.html","n":"underused","t":"def underused[A, B](vars: VarSet): Failure[A, B]","d":"libretto/impl/Lambda$Abstracted$$Failure$","k":"def"},
{"l":"libretto/impl/Lambda$Abstracted.html","n":"Abstracted","t":"trait Abstracted[A, B]","d":"libretto/impl/Lambda$Abstracted","k":"trait"},
{"l":"libretto/impl/Lambda$Error$.html","n":"Error","t":"object Error","d":"libretto/impl/Lambda$Error$","k":"object"},
{"l":"libretto/impl/Lambda$Error$$Undefined.html","n":"Undefined","t":"class Undefined(vars: VarSet) extends Error","d":"libretto/impl/Lambda$Error$$Undefined","k":"class"},
{"l":"libretto/impl/Lambda$Error.html","n":"Error","t":"trait Error","d":"libretto/impl/Lambda$Error","k":"trait"},
{"l":"libretto/impl/Lambda$Expr$.html","n":"Expr","t":"object Expr","d":"libretto/impl/Lambda$Expr$","k":"object"},
{"l":"libretto/impl/Lambda$Expr$.html","n":"VarDefining","t":"type VarDefining[A] = VarDefining[_, A]","d":"libretto/impl/Lambda$Expr$","k":"type"},
{"l":"libretto/impl/Lambda$Expr$.html","n":"unzip","t":"def unzip[A, B](p: Expr[A |*| B])(resultVar1: Var[A], resultVar2: Var[B]): (Expr[A], Expr[B])","d":"libretto/impl/Lambda$Expr$","k":"def"},
{"l":"libretto/impl/Lambda$Expr$.html","n":"variable","t":"def variable[A](a: Var[A]): Expr[A]","d":"libretto/impl/Lambda$Expr$","k":"def"},
{"l":"libretto/impl/Lambda$Expr$.html","n":"zip","t":"def zip[A, B](a: Expr[A], b: Expr[B])(resultVar: Var[A |*| B]): Expr[A |*| B]","d":"libretto/impl/Lambda$Expr$","k":"def"},
{"l":"libretto/impl/Lambda$LinearityViolation$.html","n":"LinearityViolation","t":"object LinearityViolation","d":"libretto/impl/Lambda$LinearityViolation$","k":"object"},
{"l":"libretto/impl/Lambda$LinearityViolation$.html","n":"overused","t":"def overused[A](v: Var[A]): Overused","d":"libretto/impl/Lambda$LinearityViolation$","k":"def"},
{"l":"libretto/impl/Lambda$LinearityViolation$.html","n":"underused","t":"def underused[A](v: Var[A]): Underused","d":"libretto/impl/Lambda$LinearityViolation$","k":"def"},
{"l":"libretto/impl/Lambda$LinearityViolation$$Overused.html","n":"Overused","t":"class Overused(vars: VarSet) extends LinearityViolation","d":"libretto/impl/Lambda$LinearityViolation$$Overused","k":"class"},
{"l":"libretto/impl/Lambda$LinearityViolation$$Underused.html","n":"Underused","t":"class Underused(vars: VarSet) extends LinearityViolation","d":"libretto/impl/Lambda$LinearityViolation$$Underused","k":"class"},
{"l":"libretto/impl/Lambda$LinearityViolation.html","n":"LinearityViolation","t":"trait LinearityViolation extends Error","d":"libretto/impl/Lambda$LinearityViolation","k":"trait"},
{"l":"libretto/impl/Lambda$VArr$.html","n":"VArr","t":"object VArr","d":"libretto/impl/Lambda$VArr$","k":"object"},
{"l":"libretto/impl/Lambda$VArr$.html","n":"unzip","t":"def unzip[A, B1, B2](f: VArr[A, B1 |*| B2])(resultVar1: Var[B1], resultVar2: Var[B2]): (VArr[A, B1], VArr[A, B2])","d":"libretto/impl/Lambda$VArr$","k":"def"},
{"l":"libretto/impl/Lambda$VArr$$ElimRes$.html","n":"ElimRes","t":"object ElimRes","d":"libretto/impl/Lambda$VArr$$ElimRes$","k":"object"},
{"l":"libretto/impl/Lambda$VArr$$ElimRes$.html","n":"overused","t":"def overused[U, V, B](u: Var[U]): ElimRes[V, B]","d":"libretto/impl/Lambda$VArr$$ElimRes$","k":"def"},
{"l":"libretto/impl/Lambda$VArr$$ElimRes$.html","n":"unused","t":"def unused[U, V, B](u: Var[U]): ElimRes[V, B]","d":"libretto/impl/Lambda$VArr$$ElimRes$","k":"def"},
{"l":"libretto/impl/Lambda$VArr$$ElimRes$$Closure.html","n":"Closure","t":"class Closure[X, V, B](captured: Expr[X], expr: Expr[V], f: Shuffled[X |*| V, B]) extends ElimRes[V, B]","d":"libretto/impl/Lambda$VArr$$ElimRes$$Closure","k":"class"},
{"l":"libretto/impl/Lambda$VArr$$ElimRes$$Error.html","n":"Error","t":"class Error[V, B](e: LinearityViolation) extends ElimRes[V, B]","d":"libretto/impl/Lambda$VArr$$ElimRes$$Error","k":"class"},
{"l":"libretto/impl/Lambda$VArr$$ElimRes$$Exact.html","n":"Exact","t":"class Exact[V, B](expr: Expr[V], f: Shuffled[V, B]) extends ElimRes[V, B]","d":"libretto/impl/Lambda$VArr$$ElimRes$$Exact","k":"class"},
{"l":"libretto/impl/Lambda$VArr$$ElimRes.html","n":"ElimRes","t":"trait ElimRes[V, B]","d":"libretto/impl/Lambda$VArr$$ElimRes","k":"trait"},
{"l":"libretto/impl/Lambda$VArr$$ElimStep$.html","n":"ElimStep","t":"object ElimStep","d":"libretto/impl/Lambda$VArr$$ElimStep$","k":"object"},
{"l":"libretto/impl/Lambda$VArr$$ElimStep$.html","n":"closure","t":"def closure[X, V, W, B](captured: Expr[X], f: Found[V, W], g: Shuffled[X |*| W, B]): ElimStep[V, B]","d":"libretto/impl/Lambda$VArr$$ElimStep$","k":"def"},
{"l":"libretto/impl/Lambda$VArr$$ElimStep$.html","n":"halfUsed1","t":"def halfUsed1[V, B, U](step: ElimStep[V, B |*| U], u: Var[U]): ElimStep[V, B]","d":"libretto/impl/Lambda$VArr$$ElimStep$","k":"def"},
{"l":"libretto/impl/Lambda$VArr$$ElimStep$.html","n":"halfUsed2","t":"def halfUsed2[V, U, B](step: ElimStep[V, U |*| B], u: Var[U]): ElimStep[V, B]","d":"libretto/impl/Lambda$VArr$$ElimStep$","k":"def"},
{"l":"libretto/impl/Lambda$VArr$$ElimStep$.html","n":"ofPar","t":"def ofPar[V, B1, B2](v: Var[V], f1: Expr[B1], f2: Expr[B2]): ElimStep[V, B1 |*| B2]","d":"libretto/impl/Lambda$VArr$$ElimStep$","k":"def"},
{"l":"libretto/impl/Lambda$VArr$$ElimStep$.html","n":"overused","t":"def overused[U, V, B](u: Var[U]): ElimStep[V, B]","d":"libretto/impl/Lambda$VArr$$ElimStep$","k":"def"},
{"l":"libretto/impl/Lambda$VArr$$ElimStep$.html","n":"thenSnd","t":"def thenSnd[V, B1, X, B2](f: Found[V, B1 |*| X], g: Found[X, B2]): ElimStep[V, B1 |*| B2]","d":"libretto/impl/Lambda$VArr$$ElimStep$","k":"def"},
{"l":"libretto/impl/Lambda$VArr$$ElimStep$$Closure.html","n":"Closure","t":"class Closure[X, V, B](captured: Expr[X], expr: VarDefining[V], f: Shuffled[X |*| V, B]) extends Found[V, B]","d":"libretto/impl/Lambda$VArr$$ElimStep$$Closure","k":"class"},
{"l":"libretto/impl/Lambda$VArr$$ElimStep$$Exact.html","n":"Exact","t":"class Exact[V, B](expr: VarDefining[V], f: Shuffled[V, B]) extends Found[V, B]","d":"libretto/impl/Lambda$VArr$$ElimStep$$Exact","k":"class"},
{"l":"libretto/impl/Lambda$VArr$$ElimStep$$Found.html","n":"Found","t":"trait Found[V, B] extends ElimStep[V, B]","d":"libretto/impl/Lambda$VArr$$ElimStep$$Found","k":"trait"},
{"l":"libretto/impl/Lambda$VArr$$ElimStep$$Found.html","n":"foundVar","t":"def foundVar: Var[V]","d":"libretto/impl/Lambda$VArr$$ElimStep$$Found","k":"def"},
{"l":"libretto/impl/Lambda$VArr$$ElimStep$$Found.html","n":"withCaptured","t":"def withCaptured[X](captured: Expr[X]): Found[V, X |*| B]","d":"libretto/impl/Lambda$VArr$$ElimStep$$Found","k":"def"},
{"l":"libretto/impl/Lambda$VArr$$ElimStep$$Found.html","n":"withExpr","t":"def withExpr[X](expr: Expr[X]): ElimStep[V, X |*| B]","d":"libretto/impl/Lambda$VArr$$ElimStep$$Found","k":"def"},
{"l":"libretto/impl/Lambda$VArr$$ElimStep$$HalfUsed.html","n":"HalfUsed","t":"class HalfUsed[V, B, U](f: Found[V, B |*| U], unused: Var[U]) extends Found[V, B]","d":"libretto/impl/Lambda$VArr$$ElimStep$$HalfUsed","k":"class"},
{"l":"libretto/impl/Lambda$VArr$$ElimStep$$NotFound.html","n":"NotFound","t":"class NotFound[V, B]() extends ElimStep[V, B]","d":"libretto/impl/Lambda$VArr$$ElimStep$$NotFound","k":"class"},
{"l":"libretto/impl/Lambda$VArr$$ElimStep$$Overused.html","n":"Overused","t":"class Overused[U, V, B](u: Var[U]) extends ElimStep[V, B]","d":"libretto/impl/Lambda$VArr$$ElimStep$$Overused","k":"class"},
{"l":"libretto/impl/Lambda$VArr$$ElimStep.html","n":"ElimStep","t":"trait ElimStep[V, B]","d":"libretto/impl/Lambda$VArr$$ElimStep","k":"trait"},
{"l":"libretto/impl/Lambda$VArr$$ElimStep.html","n":"map","t":"def map[C](f: Shuffled[B, C]): ElimStep[V, C]","d":"libretto/impl/Lambda$VArr$$ElimStep","k":"def"},
{"l":"libretto/impl/Lambda$VArr$$ElimStep.html","n":"map","t":"def map[C](f: B -⚬ C): ElimStep[V, C]","d":"libretto/impl/Lambda$VArr$$ElimStep","k":"def"},
{"l":"libretto/impl/Lambda$VArr$$Id.html","n":"Id","t":"class Id[A](variable: Var[A]) extends VarDefining[A, A]","d":"libretto/impl/Lambda$VArr$$Id","k":"class"},
{"l":"libretto/impl/Lambda$VArr$$Map.html","n":"Map","t":"class Map[A, B, C](f: VArr[A, B], g: B -⚬ C, resultVar: Var[C]) extends VarDefining[A, C]","d":"libretto/impl/Lambda$VArr$$Map","k":"class"},
{"l":"libretto/impl/Lambda$VArr$$Par.html","n":"Par","t":"class Par[A1, A2, B1, B2](f1: VArr[A1, B1], f2: VArr[A2, B2]) extends VArr[A1 |*| A2, B1 |*| B2]","d":"libretto/impl/Lambda$VArr$$Par","k":"class"},
{"l":"libretto/impl/Lambda$VArr$$Prj1.html","n":"Prj1","t":"class Prj1[A, B1, B2](f: VArr[A, B1 |*| B2], b1: Var[B1], b2: Var[B2]) extends VarDefining[A, B1]","d":"libretto/impl/Lambda$VArr$$Prj1","k":"class"},
{"l":"libretto/impl/Lambda$VArr$$Prj2.html","n":"Prj2","t":"class Prj2[A, B1, B2](f: VArr[A, B1 |*| B2], b1: Var[B1], b2: Var[B2]) extends VarDefining[A, B2]","d":"libretto/impl/Lambda$VArr$$Prj2","k":"class"},
{"l":"libretto/impl/Lambda$VArr$$VarDefining.html","n":"VarDefining","t":"trait VarDefining[A, B] extends VArr[A, B]","d":"libretto/impl/Lambda$VArr$$VarDefining","k":"trait"},
{"l":"libretto/impl/Lambda$VArr$$VarDefining.html","n":"resultVar","t":"def resultVar: Var[B]","d":"libretto/impl/Lambda$VArr$$VarDefining","k":"def"},
{"l":"libretto/impl/Lambda$VArr$$Zip.html","n":"Zip","t":"class Zip[A1, A2, B1, B2](f1: VArr[A1, B1], f2: VArr[A2, B2], resultVar: Var[B1 |*| B2]) extends VarDefining[A1 |*| A2, B1 |*| B2]","d":"libretto/impl/Lambda$VArr$$Zip","k":"class"},
{"l":"libretto/impl/Lambda$VArr.html","n":"VArr","t":"trait VArr[A, B]","d":"libretto/impl/Lambda$VArr","k":"trait"},
{"l":"libretto/impl/Lambda$VArr.html","n":"elim","t":"def elim[V](v: Var[V]): ElimRes[V, B]","d":"libretto/impl/Lambda$VArr","k":"def"},
{"l":"libretto/impl/Lambda$VArr.html","n":"elimStep","t":"def elimStep[V](v: Var[V]): ElimStep[V, B]","d":"libretto/impl/Lambda$VArr","k":"def"},
{"l":"libretto/impl/Lambda$VArr.html","n":"initialVars","t":"def initialVars: Vars[A]","d":"libretto/impl/Lambda$VArr","k":"def"},
{"l":"libretto/impl/Lambda$VArr.html","n":"map","t":"def map[C](f: B -⚬ C)(resultVar: Var[C]): VArr[A, C]","d":"libretto/impl/Lambda$VArr","k":"def"},
{"l":"libretto/impl/Lambda$VArr.html","n":"par","t":"def par[C, D](that: VArr[C, D]): VArr[A |*| C, B |*| D]","d":"libretto/impl/Lambda$VArr","k":"def"},
{"l":"libretto/impl/Lambda$VArr.html","n":"zip","t":"def zip[C, D](that: VArr[C, D])(resultVar: Var[B |*| D]): VArr[A |*| C, B |*| D]","d":"libretto/impl/Lambda$VArr","k":"def"},
{"l":"libretto/impl/Lambda$Vars$.html","n":"Vars","t":"object Vars","d":"libretto/impl/Lambda$Vars$","k":"object"},
{"l":"libretto/impl/Lambda$Vars$.html","n":"bi","t":"def bi[A, B](a: Var[A], b: Var[B]): Vars[A |*| B]","d":"libretto/impl/Lambda$Vars$","k":"def"},
{"l":"libretto/impl/Lambda$Vars$.html","n":"sameVars","t":"def sameVars[A](a: Vars[A], b: Vars[A]): Boolean","d":"libretto/impl/Lambda$Vars$","k":"def"},
{"l":"libretto/impl/Lambda$Vars$.html","n":"single","t":"def single[A](a: Var[A]): Vars[A]","d":"libretto/impl/Lambda$Vars$","k":"def"},
{"l":"libretto/impl/Lambda$Vars$.html","n":"toSet","t":"def toSet[A](vars: Vars[A]): VarSet","d":"libretto/impl/Lambda$Vars$","k":"def"},
{"l":"libretto/impl/Lambda$Vars$.html","n":"unzip","t":"def unzip[A, B](ab: Vars[A |*| B]): Option[(Vars[A], Vars[B])]","d":"libretto/impl/Lambda$Vars$","k":"def"},
{"l":"libretto/impl/Lambda$Vars$.html","n":"zip","t":"def zip[A, B](a: Vars[A], b: Vars[B]): Vars[A |*| B]","d":"libretto/impl/Lambda$Vars$","k":"def"},
{"l":"libretto/impl/MonoidalCategory.html","n":"MonoidalCategory","t":"trait MonoidalCategory[->[_, _], |*|[_, _], One] extends SemigroupalCategory[->, |*|]","d":"libretto/impl/MonoidalCategory","k":"trait"},
{"l":"libretto/impl/MonoidalCategory.html","n":"elimFst","t":"def elimFst[A]: One |*| A -> A","d":"libretto/impl/MonoidalCategory","k":"def"},
{"l":"libretto/impl/MonoidalCategory.html","n":"elimSnd","t":"def elimSnd[A]: A |*| One -> A","d":"libretto/impl/MonoidalCategory","k":"def"},
{"l":"libretto/impl/MonoidalCategory.html","n":"introFst","t":"def introFst[A]: A -> One |*| A","d":"libretto/impl/MonoidalCategory","k":"def"},
{"l":"libretto/impl/MonoidalCategory.html","n":"introSnd","t":"def introSnd[A]: A -> A |*| One","d":"libretto/impl/MonoidalCategory","k":"def"},
{"l":"libretto/impl/SemigroupalCategory.html","n":"SemigroupalCategory","t":"trait SemigroupalCategory[->[_, _], |*|[_, _]] extends Category[->]","d":"libretto/impl/SemigroupalCategory","k":"trait"},
{"l":"libretto/impl/SemigroupalCategory.html","n":"assocLR","t":"def assocLR[A, B, C]: A |*| B |*| C -> A |*| B |*| C","d":"libretto/impl/SemigroupalCategory","k":"def"},
{"l":"libretto/impl/SemigroupalCategory.html","n":"assocRL","t":"def assocRL[A, B, C]: A |*| B |*| C -> A |*| B |*| C","d":"libretto/impl/SemigroupalCategory","k":"def"},
{"l":"libretto/impl/SemigroupalCategory.html","n":"fst","t":"def fst[X, Y, Z](f: X -> Y): X |*| Z -> Y |*| Z","d":"libretto/impl/SemigroupalCategory","k":"def"},
{"l":"libretto/impl/SemigroupalCategory.html","n":"par","t":"def par[A1, A2, B1, B2](f1: A1 -> B1, f2: A2 -> B2): A1 |*| A2 -> B1 |*| B2","d":"libretto/impl/SemigroupalCategory","k":"def"},
{"l":"libretto/impl/SemigroupalCategory.html","n":"snd","t":"def snd[X, Y, Z](f: Y -> Z): X |*| Y -> X |*| Z","d":"libretto/impl/SemigroupalCategory","k":"def"},
{"l":"libretto/impl/Semigroupoid.html","n":"Semigroupoid","t":"trait Semigroupoid[->[_, _]]","d":"libretto/impl/Semigroupoid","k":"trait"},
{"l":"libretto/impl/Semigroupoid.html","n":">","t":"def >(g: B -> C): A -> C","d":"libretto/impl/Semigroupoid","k":"def"},
{"l":"libretto/impl/Semigroupoid.html","n":"andThen","t":"def andThen[A, B, C](f: A -> B, g: B -> C): A -> C","d":"libretto/impl/Semigroupoid","k":"def"},
{"l":"libretto/impl/Shuffle.html","n":"Shuffle","t":"class Shuffle[|*|[_, _]](using inj: BiInjective[|*|])","d":"libretto/impl/Shuffle","k":"class"},
{"l":"libretto/impl/Shuffle.html","n":"zip","t":"def zip[C, D](that: C =:= D): A |*| C =:= B |*| D","d":"libretto/impl/Shuffle","k":"def"},
{"l":"libretto/impl/Shuffle$BiTransferOpt$.html","n":"BiTransferOpt","t":"object BiTransferOpt","d":"libretto/impl/Shuffle$BiTransferOpt$","k":"object"},
{"l":"libretto/impl/Shuffle$BiTransferOpt$.html","n":"apply","t":"def apply[A1, A2, A3, A4, B1, B2, B3, B4](t1: TransferOpt[A1, A2, B1, B2], t2: TransferOpt[A3, A4, B3, B4]): BiTransferOpt[A1, A2, A3, A4, B1, B2, B3, B4]","d":"libretto/impl/Shuffle$BiTransferOpt$","k":"def"},
{"l":"libretto/impl/Shuffle$BiTransferOpt$$IXI_IXI.html","n":"IXI_IXI","t":"class IXI_IXI[A1, A2, A3, A4, A5, A6, A7, A8, B1, B2, B3, B4, B5, B6, B7, B8](ixi1: IXI[A1, A2, A3, A4, B1, B2, B3, B4], ixi2: IXI[A5, A6, A7, A8, B5, B6, B7, B8]) extends BiTransferOpt[A1 |*| A2, A3 |*| A4, A5 |*| A6, A7 |*| A8, B1 |*| B2, B3 |*| B4, B5 |*| B6, B7 |*| B8]","d":"libretto/impl/Shuffle$BiTransferOpt$$IXI_IXI","k":"class"},
{"l":"libretto/impl/Shuffle$BiTransferOpt$$None_IX.html","n":"None_IX","t":"class None_IX[A1, A2, A3, A4, A5, B3, B4](ix: IX[A3, A4, A5, B3, B4]) extends BiTransferOpt[A1, A2, A3 |*| A4, A5, A1, A2, B3 |*| B4, A4]","d":"libretto/impl/Shuffle$BiTransferOpt$$None_IX","k":"class"},
{"l":"libretto/impl/Shuffle$BiTransferOpt$$None_None.html","n":"None_None","t":"class None_None[A1, A2, A3, A4]() extends BiTransferOpt[A1, A2, A3, A4, A1, A2, A3, A4]","d":"libretto/impl/Shuffle$BiTransferOpt$$None_None","k":"class"},
{"l":"libretto/impl/Shuffle$BiTransferOpt$$Swap_AssocRL.html","n":"Swap_AssocRL","t":"class Swap_AssocRL[A1, A2, A3, A4, A5, B3, B4](swp: Swap[A1, A2], arl: AssocRL[A3, A4, A5, B3, B4]) extends BiTransferOpt[A1, A2, A3, A4 |*| A5, A2, A1, B3 |*| B4, A5]","d":"libretto/impl/Shuffle$BiTransferOpt$$Swap_AssocRL","k":"class"},
{"l":"libretto/impl/Shuffle$BiTransferOpt.html","n":"BiTransferOpt","t":"trait BiTransferOpt[A1, A2, A3, A4, B1, B2, B3, B4]","d":"libretto/impl/Shuffle$BiTransferOpt","k":"trait"},
{"l":"libretto/impl/Shuffle$BiTransferOpt.html","n":"ixi_this_ixi","t":"def ixi_this_ixi[C1, C2, C3, C4](that: IXI[B1, B2, B3, B4, C1, C2, C3, C4]): A1 |*| A3 |*| A2 |*| A4 ~⚬ C1 |*| C2 |*| C3 |*| C4","d":"libretto/impl/Shuffle$BiTransferOpt","k":"def"},
{"l":"libretto/impl/Shuffle$Par.html","n":"Par","t":"enum Par[X1, X2, Y1, Y2]","d":"libretto/impl/Shuffle$Par","k":"enum"},
{"l":"libretto/impl/Shuffle$Par$$Fst.html","n":"Fst","t":"case Fst[X, Y, Z](f1: Composed[X, Y]) extends Par[X, Z, Y, Z]","d":"libretto/impl/Shuffle$Par","k":"case"},
{"l":"libretto/impl/Shuffle$Par$$Snd.html","n":"Snd","t":"case Snd[X, Y, Z](f2: Composed[Y, Z]) extends Par[X, Y, X, Z]","d":"libretto/impl/Shuffle$Par","k":"case"},
{"l":"libretto/impl/Shuffle$Par$$Both.html","n":"Both","t":"case Both[X1, X2, Y1, Y2](f1: Composed[X1, Y1], f2: Composed[X2, Y2]) extends Par[X1, X2, Y1, Y2]","d":"libretto/impl/Shuffle$Par","k":"case"},
{"l":"libretto/impl/Shuffle$Par$$Fst.html","n":"Fst","t":"case Fst[X, Y, Z](f1: Composed[X, Y]) extends Par[X, Z, Y, Z]","d":"libretto/impl/Shuffle$Par$$Fst","k":"case"},
{"l":"libretto/impl/Shuffle$Par$$Snd.html","n":"Snd","t":"case Snd[X, Y, Z](f2: Composed[Y, Z]) extends Par[X, Y, X, Z]","d":"libretto/impl/Shuffle$Par$$Snd","k":"case"},
{"l":"libretto/impl/Shuffle$Par$$Both.html","n":"Both","t":"case Both[X1, X2, Y1, Y2](f1: Composed[X1, Y1], f2: Composed[X2, Y2]) extends Par[X1, X2, Y1, Y2]","d":"libretto/impl/Shuffle$Par$$Both","k":"case"},
{"l":"libretto/impl/Shuffle$Par$.html","n":"Par","t":"object Par","d":"libretto/impl/Shuffle$Par$","k":"object"},
{"l":"libretto/impl/Shuffle$Par$.html","n":"unapply","t":"def unapply[X1, X2, Y1, Y2](p: Par[X1, X2, Y1, Y2]): (X1 ~⚬ Y1, X2 ~⚬ Y2)","d":"libretto/impl/Shuffle$Par$","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer$.html","n":"Transfer","t":"object Transfer","d":"libretto/impl/Shuffle$Transfer$","k":"object"},
{"l":"libretto/impl/Shuffle$Transfer$.html","n":"assocLR_then_assocLR","t":"def assocLR_then_assocLR[A1, A2, A3, A4, B2, B3, C2, C3](f: AssocLR[A1 |*| A2, A3, A4, B2, B3], g: AssocLR[A1, A2, B2 |*| B3, C2, C3]): A1 |*| A2 |*| A3 |*| A4 ~⚬ A1 |*| C2 |*| C3","d":"libretto/impl/Shuffle$Transfer$","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer$.html","n":"assocLR_then_assocRL","t":"def assocLR_then_assocRL[A1, A2, A3, B2, B3, C1, C2](f: AssocLR[A1, A2, A3, B2, B3], g: AssocRL[A1, B2, B3, C1, C2]): A1 |*| A2 |*| A3 ~⚬ C1 |*| C2 |*| B3","d":"libretto/impl/Shuffle$Transfer$","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer$.html","n":"assocLR_then_xi","t":"def assocLR_then_xi[A1, A2, A3, B2, B3, C2, C3](f: AssocLR[A1, A2, A3, B2, B3], g: XI[A1, B2, B3, C2, C3]): A1 |*| A2 |*| A3 ~⚬ B2 |*| C2 |*| C3","d":"libretto/impl/Shuffle$Transfer$","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer$.html","n":"assocRL_then_assocLR","t":"def assocRL_then_assocLR[A1, A2, A3, B1, B2, C2, C3](f: AssocRL[A1, A2, A3, B1, B2], g: AssocLR[B1, B2, A3, C2, C3]): A1 |*| A2 |*| A3 ~⚬ B1 |*| C2 |*| C3","d":"libretto/impl/Shuffle$Transfer$","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer$.html","n":"ix_then_assocRL","t":"def ix_then_assocRL[A1, A2, A3, A4, B1, B2, C1, C2](f: IX[A1, A2 |*| A3, A4, B1, B2], g: AssocRL[B1 |*| B2, A2, A3, C1, C2]): A1 |*| A2 |*| A3 |*| A4 ~⚬ C1 |*| C2 |*| A3","d":"libretto/impl/Shuffle$Transfer$","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer$.html","n":"swap_then_assocLR","t":"def swap_then_assocLR[X1, X2, X3, Y2, Y3](f: Swap[X1, X2 |*| X3], g: AssocLR[X2, X3, X1, Y2, Y3]): X1 |*| X2 |*| X3 ~⚬ X2 |*| Y2 |*| Y3","d":"libretto/impl/Shuffle$Transfer$","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer$.html","n":"swap_then_assocRL","t":"def swap_then_assocRL[X1, X2, X3, Y1, Y2](f: Swap[X1 |*| X2, X3], g: AssocRL[X3, X1, X2, Y1, Y2]): X1 |*| X2 |*| X3 ~⚬ Y1 |*| Y2 |*| X2","d":"libretto/impl/Shuffle$Transfer$","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer$.html","n":"xi_then_assocLR","t":"def xi_then_assocLR[A1, A2, A3, A4, B2, B3, C2, C3](f: XI[A1, A2 |*| A3, A4, B2, B3], g: AssocLR[A2, A3, B2 |*| B3, C2, C3]): A1 |*| A2 |*| A3 |*| A4 ~⚬ A2 |*| C2 |*| C3","d":"libretto/impl/Shuffle$Transfer$","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer$.html","n":"xi_then_assocRL","t":"def xi_then_assocRL[A1, A2, A3, B2, B3, C1, C2](f: XI[A1, A2, A3, B2, B3], g: AssocRL[A2, B2, B3, C1, C2]): A1 |*| A2 |*| A3 ~⚬ C1 |*| C2 |*| B3","d":"libretto/impl/Shuffle$Transfer$","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer$.html","n":"xi_then_xi","t":"def xi_then_xi[A1, A2, A3, B2, B3, C2, C3](f: XI[A1, A2, A3, B2, B3], g: XI[A2, B2, B3, C2, C3]): A1 |*| A2 |*| A3 ~⚬ B2 |*| C2 |*| C3","d":"libretto/impl/Shuffle$Transfer$","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer$$AssocLR.html","n":"AssocLR","t":"class AssocLR[A1, A2, A3, B2, B3](g: TransferOpt[A2, A3, B2, B3]) extends Transfer[A1 |*| A2, A3, A1, B2 |*| B3]","d":"libretto/impl/Shuffle$Transfer$$AssocLR","k":"class"},
{"l":"libretto/impl/Shuffle$Transfer$$AssocRL.html","n":"AssocRL","t":"class AssocRL[A1, A2, A3, B1, B2](g: TransferOpt[A1, A2, B1, B2]) extends Transfer[A1, A2 |*| A3, B1 |*| B2, A3]","d":"libretto/impl/Shuffle$Transfer$$AssocRL","k":"class"},
{"l":"libretto/impl/Shuffle$Transfer$$IX.html","n":"IX","t":"class IX[A1, A2, A3, B1, B2](g: TransferOpt[A1, A3, B1, B2]) extends Transfer[A1 |*| A2, A3, B1 |*| B2, A2]","d":"libretto/impl/Shuffle$Transfer$$IX","k":"class"},
{"l":"libretto/impl/Shuffle$Transfer$$IXI.html","n":"IXI","t":"class IXI[A1, A2, A3, A4, B1, B2, B3, B4](g1: TransferOpt[A1, A3, B1, B2], g2: TransferOpt[A2, A4, B3, B4]) extends Transfer[A1 |*| A2, A3 |*| A4, B1 |*| B2, B3 |*| B4]","d":"libretto/impl/Shuffle$Transfer$$IXI","k":"class"},
{"l":"libretto/impl/Shuffle$Transfer$$Swap.html","n":"Swap","t":"class Swap[X1, X2]() extends Transfer[X1, X2, X2, X1]","d":"libretto/impl/Shuffle$Transfer$$Swap","k":"class"},
{"l":"libretto/impl/Shuffle$Transfer$$XI.html","n":"XI","t":"class XI[A1, A2, A3, B2, B3](g: TransferOpt[A1, A3, B2, B3]) extends Transfer[A1, A2 |*| A3, A2, B2 |*| B3]","d":"libretto/impl/Shuffle$Transfer$$XI","k":"class"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"Transfer","t":"trait Transfer[A1, A2, B1, B2] extends TransferOpt[A1, A2, B1, B2]","d":"libretto/impl/Shuffle$Transfer","k":"trait"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":">","t":"def >[C1, C2](that: Transfer[B1, B2, C1, C2]): A1 |*| A2 ~⚬ C1 |*| C2","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"after","t":"def after[Z1, Z2](that: Transfer[Z1, Z2, A1, A2]): Z1 |*| Z2 ~⚬ B1 |*| B2","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"assocLR_this_assocRL","t":"def assocLR_this_assocRL[X, Y1, Y2](h: AssocRL[X, B1, B2, Y1, Y2]): X |*| A1 |*| A2 ~⚬ Y1 |*| Y2 |*| B2","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"assocLR_this_ixi","t":"def assocLR_this_ixi[P1, P2, Q1, Q2, Q3, Q4](that: IXI[P1, P2, B1, B2, Q1, Q2, Q3, Q4]): P1 |*| P2 |*| A1 |*| A2 ~⚬ Q1 |*| Q2 |*| Q3 |*| Q4","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"assocLR_this_xi","t":"def assocLR_this_xi[X, Y2, Y3](h: XI[X, B1, B2, Y2, Y3]): X |*| A1 |*| A2 ~⚬ B1 |*| Y2 |*| Y3","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"assocRL_this_assocLR","t":"def assocRL_this_assocLR[X, Y2, Y3](h: AssocLR[B1, B2, X, Y2, Y3]): A1 |*| A2 |*| X ~⚬ B1 |*| Y2 |*| Y3","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"assocRL_this_ix","t":"def assocRL_this_ix[X, Y1, Y2](h: IX[B1, B2, X, Y1, Y2]): A1 |*| A2 |*| X ~⚬ Y1 |*| Y2 |*| B2","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"assocRL_this_ixi","t":"def assocRL_this_ixi[X1, X2, Y1, Y2, Y3, Y4](h: IXI[B1, B2, X1, X2, Y1, Y2, Y3, Y4]): A1 |*| A2 |*| X1 |*| X2 ~⚬ Y1 |*| Y2 |*| Y3 |*| Y4","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"invert","t":"def invert: Xfer[B1, B2, _, _, A1, A2]","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"ix_this_assocLR","t":"def ix_this_assocLR[X, Y2, Y3](that: AssocLR[B1, B2, X, Y2, Y3]): A1 |*| X |*| A2 ~⚬ B1 |*| Y2 |*| Y3","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"ix_this_ix","t":"def ix_this_ix[X, Y1, Y2](that: IX[B1, B2, X, Y1, Y2]): A1 |*| X |*| A2 ~⚬ Y1 |*| Y2 |*| B2","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"ix_this_ixi","t":"def ix_this_ixi[P1, P2, Q1, Q2, Q3, Q4](that: IXI[B1, B2, P1, P2, Q1, Q2, Q3, Q4]): A1 |*| P1 |*| P2 |*| A2 ~⚬ Q1 |*| Q2 |*| Q3 |*| Q4","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"ixi_fstThis_assocLR","t":"def ixi_fstThis_assocLR[P1, P2, Q1, Q2, R2, R3](g2: TransferOpt[P1, P2, Q1, Q2], that: AssocLR[B1, B2, Q1 |*| Q2, R2, R3]): A1 |*| P1 |*| A2 |*| P2 ~⚬ B1 |*| R2 |*| R3","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"ixi_sndThis_assocRL","t":"def ixi_sndThis_assocRL[P1, P2, Q1, Q2, R1, R2](g1: TransferOpt[P1, P2, Q1, Q2], that: AssocRL[Q1 |*| Q2, B1, B2, R1, R2]): P1 |*| A1 |*| P2 |*| A2 ~⚬ R1 |*| R2 |*| B2","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"ixi_sndThis_xi","t":"def ixi_sndThis_xi[P1, P2, Q1, Q2, R2, R3](g1: TransferOpt[P1, P2, Q1, Q2], that: XI[Q1 |*| Q2, B1, B2, R2, R3]): P1 |*| A1 |*| P2 |*| A2 ~⚬ B1 |*| R2 |*| R3","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"thenAssocLR","t":"def thenAssocLR[B11, B12, C2, C3](that: AssocLR[B11, B12, B2, C2, C3])(implicit ev: B1 =:= B11 |*| B12): A1 |*| A2 ~⚬ B11 |*| C2 |*| C3","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"thenAssocRL","t":"def thenAssocRL[B21, B22, C1, C2](that: AssocRL[B1, B21, B22, C1, C2])(using ev: B2 =:= B21 |*| B22): A1 |*| A2 ~⚬ C1 |*| C2 |*| B22","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"thenBi","t":"def thenBi[C1, C2](g1: B1 ~⚬ C1, g2: B2 ~⚬ C2): Xfer[A1, A2, _, _, C1, C2]","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"thenIX","t":"def thenIX[B11, B12, C1, C2](that: IX[B11, B12, B2, C1, C2])(using ev: B1 =:= B11 |*| B12): A1 |*| A2 ~⚬ C1 |*| C2 |*| B12","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"thenIXI","t":"def thenIXI[B11, B12, B21, B22, C1, C2, C3, C4](that: IXI[B11, B12, B21, B22, C1, C2, C3, C4])(implicit ev1: B1 =:= B11 |*| B12, ev2: B2 =:= B21 |*| B22): A1 |*| A2 ~⚬ C1 |*| C2 |*| C3 |*| C4","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"thenSwap","t":"def thenSwap: A1 |*| A2 ~⚬ B2 |*| B1","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"thenXI","t":"def thenXI[B21, B22, C2, C3](that: XI[B1, B21, B22, C2, C3])(implicit ev: B2 =:= B21 |*| B22): A1 |*| A2 ~⚬ B21 |*| C2 |*| C3","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"to","t":"def to[C1, C2](implicit ev: B1 |*| B2 =:= C1 |*| C2): Transfer[A1, A2, C1, C2]","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"xi_this_assocRL","t":"def xi_this_assocRL[X, Y1, Y2](g: AssocRL[X, B1, B2, Y1, Y2]): A1 |*| X |*| A2 ~⚬ Y1 |*| Y2 |*| B2","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$Transfer.html","n":"xi_this_xi","t":"def xi_this_xi[X, C2, C3](g: XI[X, B1, B2, C2, C3]): A1 |*| X |*| A2 ~⚬ B1 |*| C2 |*| C3","d":"libretto/impl/Shuffle$Transfer","k":"def"},
{"l":"libretto/impl/Shuffle$TransferOpt$.html","n":"TransferOpt","t":"object TransferOpt","d":"libretto/impl/Shuffle$TransferOpt$","k":"object"},
{"l":"libretto/impl/Shuffle$TransferOpt$.html","n":"decompose","t":"def decompose[A1, A2, B1, B2](f: TransferOpt[A1, A2, B1, B2]): Either[Transfer[A1, A2, B1, B2], (Id0[A1, B1], Id0[A2, B2])]","d":"libretto/impl/Shuffle$TransferOpt$","k":"def"},
{"l":"libretto/impl/Shuffle$TransferOpt$$None.html","n":"None","t":"class None[A1, A2]() extends None0[A1, A2, A1, A2]","d":"libretto/impl/Shuffle$TransferOpt$$None","k":"class"},
{"l":"libretto/impl/Shuffle$TransferOpt$$None0$.html","n":"None0","t":"object None0","d":"libretto/impl/Shuffle$TransferOpt$$None0$","k":"object"},
{"l":"libretto/impl/Shuffle$TransferOpt$$None0$.html","n":"apply","t":"def apply[A1, A2, B1, B2](ev: A1 |*| A2 =:= B1 |*| B2): None0[A1, A2, B1, B2]","d":"libretto/impl/Shuffle$TransferOpt$$None0$","k":"def"},
{"l":"libretto/impl/Shuffle$TransferOpt$$None0.html","n":"None0","t":"trait None0[A1, A2, B1, B2] extends TransferOpt[A1, A2, B1, B2]","d":"libretto/impl/Shuffle$TransferOpt$$None0","k":"trait"},
{"l":"libretto/impl/Shuffle$TransferOpt$$None0.html","n":"ev1","t":"def ev1: A1 =:= B1","d":"libretto/impl/Shuffle$TransferOpt$$None0","k":"def"},
{"l":"libretto/impl/Shuffle$TransferOpt$$None0.html","n":"ev2","t":"def ev2: A2 =:= B2","d":"libretto/impl/Shuffle$TransferOpt$$None0","k":"def"},
{"l":"libretto/impl/Shuffle$TransferOpt.html","n":"TransferOpt","t":"trait TransferOpt[A1, A2, B1, B2]","d":"libretto/impl/Shuffle$TransferOpt","k":"trait"},
{"l":"libretto/impl/Shuffle$TransferOpt.html","n":"asShuffle","t":"def asShuffle: A1 |*| A2 ~⚬ B1 |*| B2","d":"libretto/impl/Shuffle$TransferOpt","k":"def"},
{"l":"libretto/impl/Shuffle$TransferOpt.html","n":"fold","t":"def fold[->[_, _]](using ev: SymmetricSemigroupalCategory[->, |*|]): ->[A1 |*| A2, B1 |*| B2]","d":"libretto/impl/Shuffle$TransferOpt","k":"def"},
{"l":"libretto/impl/Shuffle$TransferOpt.html","n":"ixiPairWith_:","t":"def ixiPairWith_:[X1, X2, X3, X4, Y1, Y2, Y3, Y4](that: IXI[X1, X2, X3, X4, Y1, Y2, Y3, Y4]): BiTransferOpt[X1 |*| X2, X3 |*| X4, A1, A2, Y1 |*| Y2, Y3 |*| Y4, B1, B2]","d":"libretto/impl/Shuffle$TransferOpt","k":"def"},
{"l":"libretto/impl/Shuffle$TransferOpt.html","n":"nonePairWith_:","t":"def nonePairWith_:[X1, X2](that: None[X1, X2]): BiTransferOpt[X1, X2, A1, A2, X1, X2, B1, B2]","d":"libretto/impl/Shuffle$TransferOpt","k":"def"},
{"l":"libretto/impl/Shuffle$TransferOpt.html","n":"pairWith","t":"def pairWith[X3, X4, Z1, Z2](that: TransferOpt[X3, X4, Z1, Z2]): BiTransferOpt[A1, A2, X3, X4, B1, B2, Z1, Z2]","d":"libretto/impl/Shuffle$TransferOpt","k":"def"},
{"l":"libretto/impl/Shuffle$TransferOpt.html","n":"swapPairWith_:","t":"def swapPairWith_:[X1, X2](that: Swap[X1, X2]): BiTransferOpt[X1, X2, A1, A2, X2, X1, B1, B2]","d":"libretto/impl/Shuffle$TransferOpt","k":"def"},
{"l":"libretto/impl/Shuffle$~⚬$.html","n":"~⚬","t":"object ~⚬","d":"libretto/impl/Shuffle$~⚬$","k":"object"},
{"l":"libretto/impl/Shuffle$~⚬$.html","n":"assocLR","t":"def assocLR[X, Y, Z]: X |*| Y |*| Z ~⚬ X |*| Y |*| Z","d":"libretto/impl/Shuffle$~⚬$","k":"def"},
{"l":"libretto/impl/Shuffle$~⚬$.html","n":"assocRL","t":"def assocRL[X, Y, Z]: X |*| Y |*| Z ~⚬ X |*| Y |*| Z","d":"libretto/impl/Shuffle$~⚬$","k":"def"},
{"l":"libretto/impl/Shuffle$~⚬$.html","n":"decompose","t":"def decompose[X1, X2, Z1, Z2](f: X1 |*| X2 ~⚬ Z1 |*| Z2): Decomposition[X1, X2, _, _, Z1, Z2]","d":"libretto/impl/Shuffle$~⚬$","k":"def"},
{"l":"libretto/impl/Shuffle$~⚬$.html","n":"decompose1","t":"def decompose1[X1, X2, Z](f: X1 |*| X2 ~⚬ Z): Decomposition1[X1, X2, _, _, _, _, Z]","d":"libretto/impl/Shuffle$~⚬$","k":"def"},
{"l":"libretto/impl/Shuffle$~⚬$.html","n":"fst","t":"def fst[X, Y, Z](f: X ~⚬ Y): X |*| Z ~⚬ Y |*| Z","d":"libretto/impl/Shuffle$~⚬$","k":"def"},
{"l":"libretto/impl/Shuffle$~⚬$.html","n":"id","t":"def id[X]: X ~⚬ X","d":"libretto/impl/Shuffle$~⚬$","k":"def"},
{"l":"libretto/impl/Shuffle$~⚬$.html","n":"ix","t":"def ix[X, Y, Z]: X |*| Y |*| Z ~⚬ X |*| Z |*| Y","d":"libretto/impl/Shuffle$~⚬$","k":"def"},
{"l":"libretto/impl/Shuffle$~⚬$.html","n":"ix","t":"def ix[A1, A2, A3, B1, B2](g: A1 |*| A3 ~⚬ B1 |*| B2): A1 |*| A2 |*| A3 ~⚬ B1 |*| B2 |*| A2","d":"libretto/impl/Shuffle$~⚬$","k":"def"},
{"l":"libretto/impl/Shuffle$~⚬$.html","n":"ixi","t":"def ixi[W, X, Y, Z]: W |*| X |*| Y |*| Z ~⚬ W |*| Y |*| X |*| Z","d":"libretto/impl/Shuffle$~⚬$","k":"def"},
{"l":"libretto/impl/Shuffle$~⚬$.html","n":"par","t":"def par[X1, X2, Y1, Y2](f1: X1 ~⚬ Y1, f2: X2 ~⚬ Y2): X1 |*| X2 ~⚬ Y1 |*| Y2","d":"libretto/impl/Shuffle$~⚬$","k":"def"},
{"l":"libretto/impl/Shuffle$~⚬$.html","n":"snd","t":"def snd[X, Y, Z](f: Y ~⚬ Z): X |*| Y ~⚬ X |*| Z","d":"libretto/impl/Shuffle$~⚬$","k":"def"},
{"l":"libretto/impl/Shuffle$~⚬$.html","n":"swap","t":"def swap[X, Y]: X |*| Y ~⚬ Y |*| X","d":"libretto/impl/Shuffle$~⚬$","k":"def"},
{"l":"libretto/impl/Shuffle$~⚬$.html","n":"tryUntangle","t":"def tryUntangle[X1, X2, Y1, Y2](f: X1 |*| X2 ~⚬ Y1 |*| Y2): Either[Xfer[X1, X2, _, _, Y1, Y2], (X1 ~⚬ Y1, X2 ~⚬ Y2)]","d":"libretto/impl/Shuffle$~⚬$","k":"def"},
{"l":"libretto/impl/Shuffle$~⚬$.html","n":"xi","t":"def xi[X, Y, Z]: X |*| Y |*| Z ~⚬ Y |*| X |*| Z","d":"libretto/impl/Shuffle$~⚬$","k":"def"},
{"l":"libretto/impl/Shuffle$~⚬$.html","n":"xi","t":"def xi[A1, A2, A3, B2, B3](g: A1 |*| A3 ~⚬ B2 |*| B3): A1 |*| A2 |*| A3 ~⚬ A2 |*| B2 |*| B3","d":"libretto/impl/Shuffle$~⚬$","k":"def"},
{"l":"libretto/impl/Shuffle$~⚬$$Bimap.html","n":"Bimap","t":"class Bimap[X1, X2, Y1, Y2](par: Par[X1, X2, Y1, Y2]) extends Composed[X1 |*| X2, Y1 |*| Y2]","d":"libretto/impl/Shuffle$~⚬$$Bimap","k":"class"},
{"l":"libretto/impl/Shuffle$~⚬$$Composed.html","n":"Composed","t":"trait Composed[X, Y] extends X ~⚬ Y","d":"libretto/impl/Shuffle$~⚬$$Composed","k":"trait"},
{"l":"libretto/impl/Shuffle$~⚬$$Decomposition.html","n":"Decomposition","t":"class Decomposition[X1, X2, Y1, Y2, Z1, Z2](f1: X1 ~⚬ Y1, f2: X2 ~⚬ Y2, g: TransferOpt[Y1, Y2, Z1, Z2])","d":"libretto/impl/Shuffle$~⚬$$Decomposition","k":"class"},
{"l":"libretto/impl/Shuffle$~⚬$$Decomposition1.html","n":"Decomposition1","t":"class Decomposition1[X1, X2, Y1, Y2, Z1, Z2, Z](f1: X1 ~⚬ Y1, f2: X2 ~⚬ Y2, g: TransferOpt[Y1, Y2, Z1, Z2], ev: Z1 |*| Z2 =:= Z)","d":"libretto/impl/Shuffle$~⚬$$Decomposition1","k":"class"},
{"l":"libretto/impl/Shuffle$~⚬$$Id.html","n":"Id","t":"class Id[X]() extends Id0[X, X]","d":"libretto/impl/Shuffle$~⚬$$Id","k":"class"},
{"l":"libretto/impl/Shuffle$~⚬$$Id0$.html","n":"Id0","t":"object Id0","d":"libretto/impl/Shuffle$~⚬$$Id0$","k":"object"},
{"l":"libretto/impl/Shuffle$~⚬$$Id0$.html","n":"apply","t":"def apply[A, B](ev: A =:= B): Id0[A, B]","d":"libretto/impl/Shuffle$~⚬$$Id0$","k":"def"},
{"l":"libretto/impl/Shuffle$~⚬$$Id0.html","n":"Id0","t":"trait Id0[A, B] extends A ~⚬ B","d":"libretto/impl/Shuffle$~⚬$$Id0","k":"trait"},
{"l":"libretto/impl/Shuffle$~⚬$$Id0.html","n":"ev","t":"def ev: A =:= B","d":"libretto/impl/Shuffle$~⚬$$Id0","k":"def"},
{"l":"libretto/impl/Shuffle$~⚬$$Xfer.html","n":"Xfer","t":"class Xfer[A1, A2, X1, X2, B1, B2](f1: A1 ~⚬ X1, f2: A2 ~⚬ X2, transfer: Transfer[X1, X2, B1, B2]) extends Composed[A1 |*| A2, B1 |*| B2]","d":"libretto/impl/Shuffle$~⚬$$Xfer","k":"class"},
{"l":"libretto/impl/Shuffle$~⚬.html","n":"~⚬","t":"trait ~⚬[A, B]","d":"libretto/impl/Shuffle$~⚬","k":"trait"},
{"l":"libretto/impl/Shuffle$~⚬.html","n":">","t":"def >[C](that: B ~⚬ C): A ~⚬ C","d":"libretto/impl/Shuffle$~⚬","k":"def"},
{"l":"libretto/impl/Shuffle$~⚬.html","n":"after","t":"def after[Z](that: Z ~⚬ A): Z ~⚬ B","d":"libretto/impl/Shuffle$~⚬","k":"def"},
{"l":"libretto/impl/Shuffle$~⚬.html","n":"fold","t":"def fold[->[_, _]](using ev: SymmetricSemigroupalCategory[->, |*|]): ->[A, B]","d":"libretto/impl/Shuffle$~⚬","k":"def"},
{"l":"libretto/impl/Shuffle$~⚬.html","n":"invert","t":"def invert: B ~⚬ A","d":"libretto/impl/Shuffle$~⚬","k":"def"},
{"l":"libretto/impl/Shuffle$~⚬.html","n":"to","t":"def to[C](using ev: B =:= C): A ~⚬ C","d":"libretto/impl/Shuffle$~⚬","k":"def"},
{"l":"libretto/impl/Shuffled.html","n":"Shuffled","t":"class Shuffled[->[_, _], |*|[_, _]](using x$1: BiInjective[|*|])","d":"libretto/impl/Shuffled","k":"class"},
{"l":"libretto/impl/Shuffled.html","n":"assocLR","t":"def assocLR[X, Y, Z]: Shuffled[X |*| Y |*| Z, X |*| Y |*| Z]","d":"libretto/impl/Shuffled","k":"def"},
{"l":"libretto/impl/Shuffled.html","n":"assocRL","t":"def assocRL[X, Y, Z]: Shuffled[X |*| Y |*| Z, X |*| Y |*| Z]","d":"libretto/impl/Shuffled","k":"def"},
{"l":"libretto/impl/Shuffled.html","n":"fst","t":"def fst[X, Y, Z](f: Shuffled[X, Y]): Shuffled[X |*| Z, Y |*| Z]","d":"libretto/impl/Shuffled","k":"def"},
{"l":"libretto/impl/Shuffled.html","n":"id","t":"def id[X]: Shuffled[X, X]","d":"libretto/impl/Shuffled","k":"def"},
{"l":"libretto/impl/Shuffled.html","n":"id","t":"def id[X, Y](implicit ev: X =:= Y): Shuffled[X, Y]","d":"libretto/impl/Shuffled","k":"def"},
{"l":"libretto/impl/Shuffled.html","n":"ix","t":"def ix[X, Y, Z]: Shuffled[X |*| Y |*| Z, X |*| Z |*| Y]","d":"libretto/impl/Shuffled","k":"def"},
{"l":"libretto/impl/Shuffled.html","n":"ixi","t":"def ixi[W, X, Y, Z]: Shuffled[W |*| X |*| Y |*| Z, W |*| Y |*| X |*| Z]","d":"libretto/impl/Shuffled","k":"def"},
{"l":"libretto/impl/Shuffled.html","n":"lift","t":"def lift[X, Y](f: X -> Y): Shuffled[X, Y]","d":"libretto/impl/Shuffled","k":"def"},
{"l":"libretto/impl/Shuffled.html","n":"par","t":"def par[X1, X2, Y1, Y2](f1: Shuffled[X1, Y1], f2: Shuffled[X2, Y2]): Shuffled[X1 |*| X2, Y1 |*| Y2]","d":"libretto/impl/Shuffled","k":"def"},
{"l":"libretto/impl/Shuffled.html","n":"pure","t":"def pure[X, Y](f: X ~⚬ Y): Shuffled[X, Y]","d":"libretto/impl/Shuffled","k":"def"},
{"l":"libretto/impl/Shuffled.html","n":"shuffle","t":"val shuffle: Shuffle[|*|]","d":"libretto/impl/Shuffled","k":"val"},
{"l":"libretto/impl/Shuffled.html","n":"snd","t":"def snd[X, Y, Z](f: Shuffled[Y, Z]): Shuffled[X |*| Y, X |*| Z]","d":"libretto/impl/Shuffled","k":"def"},
{"l":"libretto/impl/Shuffled.html","n":"swap","t":"def swap[X, Y]: Shuffled[X |*| Y, Y |*| X]","d":"libretto/impl/Shuffled","k":"def"},
{"l":"libretto/impl/Shuffled.html","n":"xi","t":"def xi[X, Y, Z]: Shuffled[X |*| Y |*| Z, Y |*| X |*| Z]","d":"libretto/impl/Shuffled","k":"def"},
{"l":"libretto/impl/Shuffled$Impermeable.html","n":"Impermeable","t":"class Impermeable[A, X, Y, B](l: A ~⚬ X, m: Plated[X, Y], r: Y ~⚬ B) extends Shuffled[A, B]","d":"libretto/impl/Shuffled$Impermeable","k":"class"},
{"l":"libretto/impl/Shuffled$Permeable$.html","n":"Permeable","t":"object Permeable","d":"libretto/impl/Shuffled$Permeable$","k":"object"},
{"l":"libretto/impl/Shuffled$Permeable$.html","n":"id","t":"def id[X]: Permeable[X, X]","d":"libretto/impl/Shuffled$Permeable$","k":"def"},
{"l":"libretto/impl/Shuffled$Permeable.html","n":"Permeable","t":"trait Permeable[A, B] extends Shuffled[A, B]","d":"libretto/impl/Shuffled$Permeable","k":"trait"},
{"l":"libretto/impl/Shuffled$Plated$.html","n":"Plated","t":"object Plated","d":"libretto/impl/Shuffled$Plated$","k":"object"},
{"l":"libretto/impl/Shuffled$Plated$$Preshuffled.html","n":"Preshuffled","t":"class Preshuffled[A, X, B](s: A ~⚬ X, t: Plated[X, B])","d":"libretto/impl/Shuffled$Plated$$Preshuffled","k":"class"},
{"l":"libretto/impl/Shuffled$Plated$$Sandwich.html","n":"Sandwich","t":"class Sandwich[A, X, Y, B](l: Plated[A, X], m: X ~⚬ Y, r: Plated[Y, B]) extends Plated[A, B]","d":"libretto/impl/Shuffled$Plated$$Sandwich","k":"class"},
{"l":"libretto/impl/Shuffled$Plated$$SemiCons.html","n":"SemiCons","t":"class SemiCons[A1, A2, X2, Y2, Z1, Z2, B](semiHead: Plated[A2, X2], s: X2 ~⚬ Y2, t: TransferOpt[A1, Y2, Z1, Z2], tail: Plated[Z1 |*| Z2, B]) extends Plated[A1 |*| A2, B]","d":"libretto/impl/Shuffled$Plated$$SemiCons","k":"class"},
{"l":"libretto/impl/Shuffled$Plated$$SemiSnoc.html","n":"SemiSnoc","t":"class SemiSnoc[A, X1, X2, Y2, Z2, B1, B2](init: Plated[A, X1 |*| X2], t: RevTransferOpt[X1, X2, B1, Y2], s: Y2 ~⚬ Z2, semiLast: Plated[Z2, B2]) extends Plated[A, B1 |*| B2]","d":"libretto/impl/Shuffled$Plated$$SemiSnoc","k":"class"},
{"l":"libretto/impl/Shuffled$Plated$$Solid.html","n":"Solid","t":"class Solid[A, B](f: A -> B) extends Plated[A, B]","d":"libretto/impl/Shuffled$Plated$$Solid","k":"class"},
{"l":"libretto/impl/Shuffled$Plated$$Stacked.html","n":"Stacked","t":"class Stacked[A1, A2, B1, B2](f1: Plated[A1, B1], f2: Plated[A2, B2]) extends Plated[A1 |*| A2, B1 |*| B2]","d":"libretto/impl/Shuffled$Plated$$Stacked","k":"class"},
{"l":"libretto/impl/Shuffled$Plated$$XI.html","n":"XI","t":"class XI[A1, A2, P1, P2, Q, R, S1, S2, B1, B2](l: Plated[A2, P1 |*| P2], lt: RevTransferOpt[P1, P2, B1, Q], b: Q ~⚬ R, rt: TransferOpt[A1, R, S1, S2], r: Plated[S1 |*| S2, B2]) extends Plated[A1 |*| A2, B1 |*| B2]","d":"libretto/impl/Shuffled$Plated$$XI","k":"class"},
{"l":"libretto/impl/Shuffled$Plated.html","n":"Plated","t":"trait Plated[A, B]","d":"libretto/impl/Shuffled$Plated","k":"trait"},
{"l":"libretto/impl/Shuffled$Plated.html","n":"after","t":"def after[Z](that: Permeable[Z, A]): Preshuffled[Z, _, B]","d":"libretto/impl/Shuffled$Plated","k":"def"},
{"l":"libretto/impl/Shuffled$Plated.html","n":"fold","t":"def fold(using ev: SymmetricSemigroupalCategory[->, |*|]): A -> B","d":"libretto/impl/Shuffled$Plated","k":"def"},
{"l":"libretto/impl/Shuffled$Pure.html","n":"Pure","t":"class Pure[A, B](s: A ~⚬ B) extends Permeable[A, B]","d":"libretto/impl/Shuffled$Pure","k":"class"},
{"l":"libretto/impl/Shuffled$RevTransferOpt.html","n":"RevTransferOpt","t":"class RevTransferOpt[A1, A2, B1, B2](t: TransferOpt[B1, B2, A1, A2])","d":"libretto/impl/Shuffled$RevTransferOpt","k":"class"},
{"l":"libretto/impl/Shuffled$RevTransferOpt.html","n":"fold","t":"def fold(using ev: SymmetricSemigroupalCategory[->, |*|]): A1 |*| A2 -> B1 |*| B2","d":"libretto/impl/Shuffled$RevTransferOpt","k":"def"},
{"l":"libretto/impl/Shuffled$SemiObstructed.html","n":"SemiObstructed","t":"class SemiObstructed[A, X1, X2, Y2, Z2, B1, B2](left: A ~⚬ X1 |*| X2, bottom1: Plated[X2, Y2], bottom2: Y2 ~⚬ Z2, right: TransferOpt[X1, Z2, B1, B2]) extends Permeable[A, B1 |*| B2]","d":"libretto/impl/Shuffled$SemiObstructed","k":"class"},
{"l":"libretto/impl/Shuffled$Shuffled.html","n":"Shuffled","t":"trait Shuffled[A, B]","d":"libretto/impl/Shuffled$Shuffled","k":"trait"},
{"l":"libretto/impl/Shuffled$Shuffled.html","n":">","t":"def >[C](that: Shuffled[B, C]): Shuffled[A, C]","d":"libretto/impl/Shuffled$Shuffled","k":"def"},
{"l":"libretto/impl/Shuffled$Shuffled.html","n":"after","t":"def after[Z](that: Shuffled[Z, A]): Shuffled[Z, B]","d":"libretto/impl/Shuffled$Shuffled","k":"def"},
{"l":"libretto/impl/Shuffled$Shuffled.html","n":"afterShuffle","t":"def afterShuffle[Z](that: Z ~⚬ A): Shuffled[Z, B]","d":"libretto/impl/Shuffled$Shuffled","k":"def"},
{"l":"libretto/impl/Shuffled$Shuffled.html","n":"fold","t":"def fold(using SymmetricSemigroupalCategory[->, |*|]): A -> B","d":"libretto/impl/Shuffled$Shuffled","k":"def"},
{"l":"libretto/impl/Shuffled$Shuffled.html","n":"inFst","t":"def inFst[Y]: Shuffled[A |*| Y, B |*| Y]","d":"libretto/impl/Shuffled$Shuffled","k":"def"},
{"l":"libretto/impl/Shuffled$Shuffled.html","n":"inSnd","t":"def inSnd[X]: Shuffled[X |*| A, X |*| B]","d":"libretto/impl/Shuffled$Shuffled","k":"def"},
{"l":"libretto/impl/Shuffled$Shuffled.html","n":"thenShuffle","t":"def thenShuffle[C](that: B ~⚬ C): Shuffled[A, C]","d":"libretto/impl/Shuffled$Shuffled","k":"def"},
{"l":"libretto/impl/SymmetricMonoidalCategory.html","n":"SymmetricMonoidalCategory","t":"trait SymmetricMonoidalCategory[->[_, _], |*|[_, _], One] extends SymmetricSemigroupalCategory[->, |*|] with MonoidalCategory[->, |*|, One]","d":"libretto/impl/SymmetricMonoidalCategory","k":"trait"},
{"l":"libretto/impl/SymmetricSemigroupalCategory.html","n":"SymmetricSemigroupalCategory","t":"trait SymmetricSemigroupalCategory[->[_, _], |*|[_, _]] extends SemigroupalCategory[->, |*|]","d":"libretto/impl/SymmetricSemigroupalCategory","k":"trait"},
{"l":"libretto/impl/SymmetricSemigroupalCategory.html","n":"ix","t":"def ix[A, B, C]: A |*| B |*| C -> A |*| C |*| B","d":"libretto/impl/SymmetricSemigroupalCategory","k":"def"},
{"l":"libretto/impl/SymmetricSemigroupalCategory.html","n":"ixi","t":"def ixi[A, B, C, D]: A |*| B |*| C |*| D -> A |*| C |*| B |*| D","d":"libretto/impl/SymmetricSemigroupalCategory","k":"def"},
{"l":"libretto/impl/SymmetricSemigroupalCategory.html","n":"swap","t":"def swap[A, B]: A |*| B -> B |*| A","d":"libretto/impl/SymmetricSemigroupalCategory","k":"def"},
{"l":"libretto/impl/SymmetricSemigroupalCategory.html","n":"xi","t":"def xi[A, B, C]: A |*| B |*| C -> B |*| A |*| C","d":"libretto/impl/SymmetricSemigroupalCategory","k":"def"},
{"l":"libretto/impl/Tupled.html","n":"Tupled","t":"trait Tupled[|*|[_, _], F[_], A]","d":"libretto/impl/Tupled","k":"trait"},
{"l":"libretto/impl/Tupled.html","n":"fold","t":"def fold(zip: [x, y] => (x$1: F[x], x$2: F[y]) => F[x |*| y]): F[A]","d":"libretto/impl/Tupled","k":"def"},
{"l":"libretto/impl/Tupled.html","n":"mapReduce","t":"def mapReduce[G[_]](map: [x] => (x$1: F[x]) => G[x], zip: [x, y] => (x$1: G[x], x$2: G[y]) => G[x |*| y]): G[A]","d":"libretto/impl/Tupled","k":"def"},
{"l":"libretto/impl/Tupled.html","n":"mapReduce0","t":"def mapReduce0[B](map: [x] => (x$1: F[x]) => B, reduce: (B, B) => B): B","d":"libretto/impl/Tupled","k":"def"},
{"l":"libretto/impl/Tupled.html","n":"trans","t":"def trans[G[_]](f: [x] => (x$1: F[x]) => G[x]): Tupled[|*|, G, A]","d":"libretto/impl/Tupled","k":"def"},
{"l":"libretto/impl/Tupled.html","n":"zip","t":"def zip[B](that: Tupled[|*|, F, B]): Tupled[|*|, F, A |*| B]","d":"libretto/impl/Tupled","k":"def"},
{"l":"libretto/impl/Tupled$.html","n":"Tupled","t":"object Tupled","d":"libretto/impl/Tupled$","k":"object"},
{"l":"libretto/impl/Tupled$.html","n":"unzip","t":"def unzip[|*|[_, _], F[_], A, B](ab: Tupled[|*|, F, |*|[A, B]]): Option[(Tupled[|*|, F, A], Tupled[|*|, F, B])]","d":"libretto/impl/Tupled$","k":"def"},
{"l":"libretto/impl/Tupled$$Single.html","n":"Single","t":"class Single[|*|[_, _], F[_], A](v: F[A]) extends Tupled[|*|, F, A]","d":"libretto/impl/Tupled$$Single","k":"class"},
{"l":"libretto/impl/Tupled$$Zip.html","n":"Zip","t":"class Zip[|*|[_, _], F[_], X, Y](_1: Tupled[|*|, F, X], _2: Tupled[|*|, F, Y]) extends Tupled[|*|, F, X |*| Y]","d":"libretto/impl/Tupled$$Zip","k":"class"},
{"l":"libretto/impl/UnhandledCase$.html","n":"UnhandledCase","t":"object UnhandledCase","d":"libretto/impl/UnhandledCase$","k":"object"},
{"l":"libretto/impl/UnhandledCase$.html","n":"raise","t":"def raise(desc: String): Nothing","d":"libretto/impl/UnhandledCase$","k":"def"},
{"l":"libretto/impl/UnhandledCase.html","n":"UnhandledCase","t":"class UnhandledCase(desc: String) extends Exception","d":"libretto/impl/UnhandledCase","k":"class"},
{"l":"libretto/impl/Unique.html","n":"Unique","t":"trait Unique[F[_]]","d":"libretto/impl/Unique","k":"trait"},
{"l":"libretto/impl/Unique.html","n":"testEqual","t":"def testEqual[A, B](a: F[A], b: F[B]): Option[A =:= B]","d":"libretto/impl/Unique","k":"def"},
{"l":"libretto/impl/Var.html","n":"Var","t":"class Var[P, A](val origin: P)","d":"libretto/impl/Var","k":"class"},
{"l":"libretto/impl/Var.html","n":"origin","t":"val origin: P","d":"libretto/impl/Var","k":"val"},
{"l":"libretto/impl/Var.html","n":"testEqual","t":"def testEqual[B](that: Var[P, B]): Option[A =:= B]","d":"libretto/impl/Var","k":"def"},
{"l":"libretto/impl/Var$.html","n":"Var","t":"object Var","d":"libretto/impl/Var$","k":"object"},
{"l":"libretto/impl/Var$.html","n":"Variable_Var_Set","t":"given Variable_Var_Set: Unique[Var]","d":"libretto/impl/Var$","k":"given"},
{"l":"libretto/impl/VarOrigin.html","n":"VarOrigin","t":"trait VarOrigin","d":"libretto/impl/VarOrigin","k":"trait"},
{"l":"libretto/impl/VarOrigin.html","n":"print","t":"def print: String","d":"libretto/impl/VarOrigin","k":"def"},
{"l":"libretto/impl/VarOrigin$.html","n":"VarOrigin","t":"object VarOrigin","d":"libretto/impl/VarOrigin$","k":"object"},
{"l":"libretto/impl/VarOrigin$$ClosureVal.html","n":"ClosureVal","t":"class ClosureVal(file: String, line: Int) extends VarOrigin","d":"libretto/impl/VarOrigin$$ClosureVal","k":"class"},
{"l":"libretto/impl/VarOrigin$$FunApp.html","n":"FunApp","t":"class FunApp(file: String, line: Int) extends VarOrigin","d":"libretto/impl/VarOrigin$$FunApp","k":"class"},
{"l":"libretto/impl/VarOrigin$$Lambda.html","n":"Lambda","t":"class Lambda(file: String, line: Int) extends VarOrigin","d":"libretto/impl/VarOrigin$$Lambda","k":"class"},
{"l":"libretto/impl/VarOrigin$$Pairing.html","n":"Pairing","t":"class Pairing(file: String, line: Int) extends VarOrigin","d":"libretto/impl/VarOrigin$$Pairing","k":"class"},
{"l":"libretto/impl/VarOrigin$$Prj1.html","n":"Prj1","t":"class Prj1(file: String, line: Int) extends VarOrigin","d":"libretto/impl/VarOrigin$$Prj1","k":"class"},
{"l":"libretto/impl/VarOrigin$$Prj2.html","n":"Prj2","t":"class Prj2(file: String, line: Int) extends VarOrigin","d":"libretto/impl/VarOrigin$$Prj2","k":"class"},
{"l":"libretto/impl/Variable.html","n":"Variable","t":"trait Variable[Var[_], VarSet] extends Unique[Var]","d":"libretto/impl/Variable","k":"trait"},
{"l":"libretto/impl/Variable.html","n":"singleton","t":"def singleton[A](v: Var[A]): VarSet","d":"libretto/impl/Variable","k":"def"},
{"l":"libretto/impl/Variable.html","n":"union","t":"def union(vs: VarSet, ws: VarSet): VarSet","d":"libretto/impl/Variable","k":"def"},
{"l":"docs/index.html","n":"libretto","t":"libretto","d":"","k":"static"}];